2022-01-04 12:43:35,975 root INFO Starting
2022-01-04 12:43:43,780 root INFO Starting
2022-01-04 12:43:47,249 root DEBUG Processing
2022-01-04 12:43:49,46 root DEBUG Computing centrality metrics
2022-01-04 12:43:50,752 root DEBUG Degree for unrestricted/restricted graph with/out weight computed
2022-01-04 12:43:50,907 root DEBUG In degree for unrestricted/restricted graphs with/out weight computed
2022-01-04 12:43:51,54 root DEBUG Out degree for unrestricted/restricted graphs with/out weight computed
2022-01-04 12:45:04,282 root DEBUG Betweenness for unrestricted/restricted graphs with/out weight computed
2022-01-04 12:46:08,902 root DEBUG Current flow betweenness for unrestricted/restricted graphs with weight computed
2022-01-04 12:50:12,731 root DEBUG Closeness for unrestricted and restricted graphs with and without weight computed
2022-01-04 12:50:12,731 root DEBUG Flow betweenness for unrestricted/restricted graphs with weight computed
2022-01-04 12:50:18,507 root DEBUG Pagerank for unrestricted and restricted graphs with and without weight computed
2022-01-04 12:50:19,435 root DEBUG Saving graphs into pickle files
2022-01-04 12:50:20,119 root DEBUG Computing centrality metrics
2022-01-04 12:50:21,833 root DEBUG Degree for unrestricted/restricted graph with/out weight computed
2022-01-04 12:50:22,0 root DEBUG In degree for unrestricted/restricted graphs with/out weight computed
2022-01-04 12:50:22,158 root DEBUG Out degree for unrestricted/restricted graphs with/out weight computed
2022-01-04 12:52:01,392 root DEBUG Betweenness for unrestricted/restricted graphs with/out weight computed
2022-01-04 12:53:18,483 root DEBUG Current flow betweenness for unrestricted/restricted graphs with weight computed
2022-01-04 12:58:48,939 root DEBUG Closeness for unrestricted and restricted graphs with and without weight computed
2022-01-04 12:58:48,939 root DEBUG Flow betweenness for unrestricted/restricted graphs with weight computed
2022-01-04 12:58:55,815 root DEBUG Pagerank for unrestricted and restricted graphs with and without weight computed
2022-01-04 12:58:56,761 root DEBUG Saving graphs into pickle files
2022-01-04 12:59:22,33 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
2022-01-04 12:59:22,33 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,33 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:22,33 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,34 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-01-04 12:59:22,34 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,34 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,34 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,34 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,34 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,34 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,34 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,34 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,35 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-01-04 12:59:22,35 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,35 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:59:22,35 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,35 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,35 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,35 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,35 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,36 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,36 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,36 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,36 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,36 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,36 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,36 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,36 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,36 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,37 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,37 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,37 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,37 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,37 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,37 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,37 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,37 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,37 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,37 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,37 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,38 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,38 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,38 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,38 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,38 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,39 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,40 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,40 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,40 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,40 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,40 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,40 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,40 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,40 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,40 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,40 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,41 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,42 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,42 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,42 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,42 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,42 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,42 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,42 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,42 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,42 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,42 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,43 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,43 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,44 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,44 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,44 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,44 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,44 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,44 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,44 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,44 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,44 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,44 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,45 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,45 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,45 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,45 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,45 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,45 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,45 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,45 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,45 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,45 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,46 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,46 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,46 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,46 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,46 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,46 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,46 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,46 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,46 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,46 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,47 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,47 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,47 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,47 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,47 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,47 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,47 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:59:22,47 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,47 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,47 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,48 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,48 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,48 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,48 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,48 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,48 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,48 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,48 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,48 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:59:22,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,50 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,50 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,50 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,50 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,50 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,50 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,50 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,50 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,50 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,50 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,50 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,51 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,51 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,51 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,51 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,51 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,51 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,51 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,51 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,51 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,51 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,52 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,52 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,52 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,52 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,52 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,52 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,52 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,52 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,53 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,53 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,53 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,53 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,53 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,53 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,53 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,53 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,53 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,53 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:59:22,54 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,54 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,54 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,54 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,54 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,54 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,54 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,54 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,54 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,54 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,55 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,55 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,55 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,55 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,55 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,55 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,55 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,55 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,55 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,55 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,56 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,56 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,56 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,56 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,56 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,56 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,56 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,56 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,56 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,56 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,57 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,57 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,57 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:59:22,57 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,57 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,57 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,57 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,57 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,57 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,57 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,58 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:59:22,58 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,58 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,58 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,58 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,58 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,58 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,58 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,58 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,58 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,58 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,59 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,59 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:59:22,59 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,59 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,59 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,59 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,59 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,59 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,59 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,59 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,60 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,60 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:59:22,60 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,60 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,60 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,60 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,60 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,60 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,60 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,60 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,61 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,61 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,61 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,61 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,61 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,61 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,61 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,61 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,61 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,61 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,62 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,62 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,62 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,62 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,62 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,62 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,62 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,62 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,62 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,62 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,62 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,63 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,63 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,63 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,63 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,63 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,63 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,63 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,63 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,63 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,63 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,64 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,64 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,64 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,64 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,64 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,64 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,64 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,64 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,64 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,64 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:22,65 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,65 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,65 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,65 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,65 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,65 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,65 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,65 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,65 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,65 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,66 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,66 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,66 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,66 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,66 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,66 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,66 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,66 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,66 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,66 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,67 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,67 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,67 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,67 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,67 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,67 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:59:22,67 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,67 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,67 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,67 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:59:22,67 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,68 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,68 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,69 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,69 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,69 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,69 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,69 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,69 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,69 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,69 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,69 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,70 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,70 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,71 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,73 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,73 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to DejaVu Sans ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-01-04 12:59:22,94 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-01-04 12:59:22,94 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,94 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:22,94 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,94 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-01-04 12:59:22,95 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,95 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,95 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,95 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,95 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,95 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,95 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,95 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,95 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-01-04 12:59:22,96 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,96 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:59:22,96 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,96 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,96 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,96 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,97 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,97 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,97 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,97 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,97 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,97 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,97 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,98 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,98 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,98 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,98 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,98 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,98 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,98 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,98 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,99 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,99 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,99 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,99 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,99 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,99 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,99 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,99 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,99 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,100 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,100 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,100 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,100 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,100 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,100 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,100 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,100 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,101 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,101 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,101 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,101 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,101 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,101 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,101 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,102 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,102 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,102 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,102 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,102 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,102 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,103 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,103 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,103 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,103 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,103 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,103 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,103 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,103 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,103 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,104 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,104 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,104 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,104 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,104 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,104 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,104 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,104 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,105 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,105 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,105 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,105 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,105 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,105 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,105 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,105 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,105 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,106 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,106 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,106 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,106 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,106 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,106 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,106 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,106 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,106 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,107 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,107 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,107 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,107 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,107 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,107 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,107 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,107 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,107 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,108 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,108 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,108 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,108 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,108 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,108 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,108 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,108 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,108 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,109 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,109 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,109 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,109 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,109 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,109 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,109 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,109 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,109 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,110 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,110 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,110 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,110 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,110 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,110 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,110 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,110 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,110 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,111 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,111 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:59:22,111 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,111 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,111 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,111 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,111 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,111 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,111 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,112 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,112 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,112 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,112 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,112 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,112 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,112 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,112 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,112 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,113 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,113 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,113 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:59:22,113 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,113 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,113 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,113 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,113 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,115 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,116 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,116 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,116 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,116 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,116 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,116 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,116 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,116 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,116 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,117 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,117 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,117 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,117 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,117 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,117 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,117 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,117 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,118 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,118 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:59:22,118 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,118 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,118 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,118 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,118 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,118 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,118 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,119 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,119 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,119 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,119 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,119 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,119 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,119 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,119 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,120 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,120 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,120 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,120 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,120 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,120 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,120 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,120 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,120 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,121 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,121 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,121 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,121 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,121 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,121 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,121 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,121 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,121 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:59:22,122 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,122 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,122 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,122 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,122 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,122 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,122 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,122 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:59:22,122 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,123 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,123 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,123 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,123 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,123 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,123 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,123 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,123 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,123 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:59:22,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,124 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,125 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,125 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,125 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:59:22,125 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,125 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,125 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,125 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,125 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,125 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,126 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,126 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,126 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,126 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,126 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,126 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,126 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,126 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,126 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,127 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,127 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,127 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,127 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,127 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,127 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,127 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,127 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,127 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,128 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,128 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,128 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,128 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,128 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,128 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,128 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,128 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,129 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,129 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,129 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,129 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,129 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,129 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,129 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,129 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,129 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,130 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,130 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,130 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,130 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,130 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,130 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,130 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,130 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:22,130 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,131 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,131 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,131 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,131 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,131 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,131 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,131 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,131 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,131 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,131 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,132 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,132 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,132 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,132 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,132 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,132 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,132 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,132 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,133 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,133 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,133 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,133 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,133 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,133 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,133 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:59:22,133 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,133 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,134 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,134 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:59:22,134 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,134 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,134 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,134 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,134 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,134 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,135 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,135 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,135 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,135 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,135 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,135 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,135 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,135 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,136 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,136 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,136 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,136 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,136 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,136 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,136 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,136 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,137 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,137 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,137 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,137 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,137 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,137 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,137 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,137 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,137 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,138 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,138 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,138 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,138 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,138 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,138 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,138 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,138 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,138 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,139 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,139 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,139 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,139 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,139 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,139 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,139 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,139 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,139 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,140 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,140 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-01-04 12:59:22,145 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F1' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf'
2022-01-04 12:59:22,214 matplotlib.font_manager DEBUG findfont: Matching STIXGeneral:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:59:22,214 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,214 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,214 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,214 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,215 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,215 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,215 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,215 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:59:22,215 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,215 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,215 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,215 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 1.05
2022-01-04 12:59:22,215 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,216 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 1.335
2022-01-04 12:59:22,216 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,216 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,216 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,216 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,216 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:22,216 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,216 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,217 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,217 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,217 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,217 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,217 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,217 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,217 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,217 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,217 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,218 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,218 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,218 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,218 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,218 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,218 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,218 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,218 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,218 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,219 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,219 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,219 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,219 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,219 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,219 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,219 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,219 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,220 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,220 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,220 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,220 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,220 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,220 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,220 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,220 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,220 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,221 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,221 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,221 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,221 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,221 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,221 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,221 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,221 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,222 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,222 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,222 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,222 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,222 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,222 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,222 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,222 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,222 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,223 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,223 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,223 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,223 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,223 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,223 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,223 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,223 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,223 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,224 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,224 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,224 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,224 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,224 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,224 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,224 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,224 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,225 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,225 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,225 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,225 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,225 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,225 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,225 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,225 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,225 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,226 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,226 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,226 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,226 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,226 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,226 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,226 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,226 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,227 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,227 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,227 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,227 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,227 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,227 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,227 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,227 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,227 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,228 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,228 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,228 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,228 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,228 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,228 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,228 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,228 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,228 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,229 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,229 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,229 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,229 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,229 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,229 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,229 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,229 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,230 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,230 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,230 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,230 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:59:22,230 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,230 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,230 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,230 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,230 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,231 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,231 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,231 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,231 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,231 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,231 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,231 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,231 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,231 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,232 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,232 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,232 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,232 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,232 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:59:22,232 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,232 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,232 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,233 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,233 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,233 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,233 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,233 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,233 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,233 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,233 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,233 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,234 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,234 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,234 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,234 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,234 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,234 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,234 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,234 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,235 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,235 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,235 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,235 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,235 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,235 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,235 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,235 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,235 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,236 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,236 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,236 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,236 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,236 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,236 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,236 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,236 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,237 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,237 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,237 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,237 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,237 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,237 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,237 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,237 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,237 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,238 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,238 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,238 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,238 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,238 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,238 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,238 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,238 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,238 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,239 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,239 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,239 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,239 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,239 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,239 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,239 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,239 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,240 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,240 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,240 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,240 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,240 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,240 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,240 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,240 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,240 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,241 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,241 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,241 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:59:22,241 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,241 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,241 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,241 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,241 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,242 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,242 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,242 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:59:22,242 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,242 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,242 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,242 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,242 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,242 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,243 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,243 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,243 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,243 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,243 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,243 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:59:22,243 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,243 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,243 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,244 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,244 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,244 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,244 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,244 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,244 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,244 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:59:22,244 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,245 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,245 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,245 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,245 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,245 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,245 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,245 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,245 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,245 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,246 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,246 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,246 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,246 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,246 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,246 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,246 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,246 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,246 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,247 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,247 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,247 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,247 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,247 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,247 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,247 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,247 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,247 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,248 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,248 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,248 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,248 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,248 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,248 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,248 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,248 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,249 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,249 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,249 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,249 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,249 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,249 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,249 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,249 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,249 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,250 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,250 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,250 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,250 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,250 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,250 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,250 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,250 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,250 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,251 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,251 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,251 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,251 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,251 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,251 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,251 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,251 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,251 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,252 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,252 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,252 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,252 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,252 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,252 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,252 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,252 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,253 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,253 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,253 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,253 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:59:22,253 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,253 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,253 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,253 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:59:22,253 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,254 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,254 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,254 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,254 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,254 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,254 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,254 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,254 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,254 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,255 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,255 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,255 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,255 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,255 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,255 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,255 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,255 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,255 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,256 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,256 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,256 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,256 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,256 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,256 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,256 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,256 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,257 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,257 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,257 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,257 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,257 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,257 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,257 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,257 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,257 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,258 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,258 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,258 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,258 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,258 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,258 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,258 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,258 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,258 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,259 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,259 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,259 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,259 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,259 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,259 matplotlib.font_manager DEBUG findfont: Matching STIXGeneral:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to STIXGeneral ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf') with score of 0.050000.
2022-01-04 12:59:22,260 matplotlib.font_manager DEBUG findfont: Matching STIXGeneral:style=italic:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:59:22,261 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,261 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,261 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,261 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,261 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,261 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,261 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,261 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 1.335
2022-01-04 12:59:22,262 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,262 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,262 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,262 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 0.05
2022-01-04 12:59:22,262 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,262 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 0.33499999999999996
2022-01-04 12:59:22,262 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,262 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,262 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,263 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,263 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 1.05
2022-01-04 12:59:22,263 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,263 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,263 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,263 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,263 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,263 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,264 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,264 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,264 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,264 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,264 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,264 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,264 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,264 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,264 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,265 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,265 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,265 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,265 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,265 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,265 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,265 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,265 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,265 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,266 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,266 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,266 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,266 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,266 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,266 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,266 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,266 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,267 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,267 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,267 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,267 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,267 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,267 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,267 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,267 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,267 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,268 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,268 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,268 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,268 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,268 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,268 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,268 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,268 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,268 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,269 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,269 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,269 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,269 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,269 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,269 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,269 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,269 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,270 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,270 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,270 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,270 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,270 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 11.145
2022-01-04 12:59:22,270 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,270 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,270 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 10.34
2022-01-04 12:59:22,270 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,271 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,271 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,271 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,271 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 11.145
2022-01-04 12:59:22,271 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,271 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,271 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,271 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,271 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,272 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,272 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,272 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,272 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,272 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,272 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,272 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,272 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,272 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,273 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,273 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,273 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,273 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,273 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,273 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,273 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,273 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,274 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 11.25
2022-01-04 12:59:22,274 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,274 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,274 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,274 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,274 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,274 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,274 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,274 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,275 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,275 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,275 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2022-01-04 12:59:22,275 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,275 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,275 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,275 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,275 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,275 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 10.54
2022-01-04 12:59:22,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,277 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,277 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,277 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,277 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,277 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,277 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 11.145
2022-01-04 12:59:22,277 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,277 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,277 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,278 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,278 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,278 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 11.25
2022-01-04 12:59:22,278 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,278 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,278 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 10.35
2022-01-04 12:59:22,278 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 10.145
2022-01-04 12:59:22,278 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,278 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 10.535
2022-01-04 12:59:22,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,279 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,280 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,280 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,280 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,280 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 11.25
2022-01-04 12:59:22,280 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,280 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,280 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,280 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 10.34
2022-01-04 12:59:22,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,282 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 11.24
2022-01-04 12:59:22,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,283 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,283 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,283 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,283 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,283 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,283 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,283 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,283 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,284 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,284 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,284 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,284 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,284 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,284 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,284 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,284 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,284 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,285 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,285 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,285 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,285 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,285 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,285 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,285 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 11.24
2022-01-04 12:59:22,285 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,285 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,286 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,286 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,286 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,286 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,286 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,286 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,286 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,286 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,287 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 11.535
2022-01-04 12:59:22,287 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,287 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,287 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,287 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,287 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 11.44
2022-01-04 12:59:22,287 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,287 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,287 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 11.145
2022-01-04 12:59:22,288 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 11.24
2022-01-04 12:59:22,288 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,288 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,288 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,288 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 10.25
2022-01-04 12:59:22,288 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,288 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,288 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,288 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,289 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 10.145
2022-01-04 12:59:22,289 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,289 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,289 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,289 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,289 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,289 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,289 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 10.634999999999998
2022-01-04 12:59:22,289 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,290 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,290 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,290 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,290 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,290 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,290 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,290 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,290 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,291 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 11.1925
2022-01-04 12:59:22,291 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,291 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,291 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,291 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,291 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,291 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,291 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2022-01-04 12:59:22,291 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,292 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,292 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,292 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,292 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,292 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,292 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,292 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,292 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,292 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,293 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,293 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,293 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,293 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,293 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,293 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,293 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 11.535
2022-01-04 12:59:22,293 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,294 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,294 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,294 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,294 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,294 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,294 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,294 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,294 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,294 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,295 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,295 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,295 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,295 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 11.145
2022-01-04 12:59:22,295 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,295 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,295 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,295 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,296 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,296 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,296 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,296 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,296 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,296 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,296 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,296 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,296 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,297 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,297 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,297 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,297 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,297 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,297 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 10.34
2022-01-04 12:59:22,297 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,297 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,297 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 11.24
2022-01-04 12:59:22,298 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,298 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,298 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,298 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,298 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,298 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,298 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,298 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,299 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,299 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,299 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,299 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,299 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,299 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,299 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 10.245
2022-01-04 12:59:22,299 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,299 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,300 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,300 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 10.24
2022-01-04 12:59:22,300 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,300 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,300 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,300 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,300 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,300 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,300 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,301 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,301 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,301 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,301 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,301 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 10.35
2022-01-04 12:59:22,301 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,301 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,301 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,301 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,302 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,302 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,302 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,302 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,302 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,302 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 11.25
2022-01-04 12:59:22,302 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,302 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,303 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 10.145
2022-01-04 12:59:22,303 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 10.145
2022-01-04 12:59:22,303 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,303 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,303 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,303 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 11.335
2022-01-04 12:59:22,303 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,303 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,303 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,304 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,304 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,304 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,304 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,304 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,304 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,304 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,304 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,304 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,305 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,305 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,305 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,305 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 11.335
2022-01-04 12:59:22,305 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,305 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,305 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,305 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,305 matplotlib.font_manager DEBUG findfont: Matching STIXGeneral:style=italic:variant=normal:weight=normal:stretch=normal:size=12.0 to STIXGeneral ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf') with score of 0.050000.
2022-01-04 12:59:22,307 matplotlib.font_manager DEBUG findfont: Matching STIXGeneral:style=normal:variant=normal:weight=bold:stretch=normal:size=12.0.
2022-01-04 12:59:22,307 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,307 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,307 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,307 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,308 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,308 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,308 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,308 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 0.05
2022-01-04 12:59:22,308 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,308 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,308 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,308 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 1.335
2022-01-04 12:59:22,309 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,309 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 1.05
2022-01-04 12:59:22,309 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,309 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,309 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,309 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,309 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 0.33499999999999996
2022-01-04 12:59:22,309 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,309 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,310 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,310 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,310 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,310 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,310 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,310 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,310 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,310 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,310 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,311 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,311 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,311 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,311 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,311 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,311 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,311 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,311 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,311 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,312 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,312 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,312 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,312 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,312 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,312 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,312 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,312 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,313 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,313 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,313 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,313 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,313 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,313 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,313 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,313 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,313 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,314 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,314 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,314 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,314 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,314 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,314 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,314 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,314 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,314 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,315 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,315 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,315 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,315 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,315 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,315 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,315 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,315 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,316 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,316 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,316 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,316 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,316 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,316 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,316 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,316 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,316 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.43
2022-01-04 12:59:22,317 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,317 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,317 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.145
2022-01-04 12:59:22,317 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,317 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,317 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,317 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,317 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.43
2022-01-04 12:59:22,317 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,318 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,318 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,318 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,318 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,318 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,318 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,318 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,318 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,318 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,319 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,319 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,319 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,319 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,319 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,319 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,319 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,319 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,319 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,320 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,320 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,320 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,320 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.535
2022-01-04 12:59:22,320 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,320 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,320 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,320 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,321 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,321 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,321 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,321 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,321 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,321 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,321 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2022-01-04 12:59:22,321 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,322 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,322 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,322 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,322 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,322 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,322 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,322 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,322 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,322 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,323 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,323 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,323 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.344999999999999
2022-01-04 12:59:22,323 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,323 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,323 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,323 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,323 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,323 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,324 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.43
2022-01-04 12:59:22,324 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,324 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,324 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,324 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,324 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,324 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.535
2022-01-04 12:59:22,324 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,325 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,325 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.535
2022-01-04 12:59:22,325 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.24
2022-01-04 12:59:22,325 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,325 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.25
2022-01-04 12:59:22,325 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,325 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,325 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,326 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,326 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,326 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,326 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,326 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,326 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,326 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,326 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,326 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,327 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.535
2022-01-04 12:59:22,327 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,327 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,327 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,327 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,327 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,327 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.145
2022-01-04 12:59:22,327 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,328 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,328 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,328 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,328 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,328 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,328 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,328 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,328 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,328 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,329 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,329 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,329 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.145
2022-01-04 12:59:22,329 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,329 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,329 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,329 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,329 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,330 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,330 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,330 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,330 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,330 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,330 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,330 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,330 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,330 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,331 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,331 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,331 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,331 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,331 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,331 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,331 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,331 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,331 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,332 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,332 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,332 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,332 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.145
2022-01-04 12:59:22,332 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,332 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,332 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,332 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,333 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,333 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,333 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,333 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,333 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,333 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,333 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.25
2022-01-04 12:59:22,333 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,334 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,334 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,334 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,334 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.344999999999999
2022-01-04 12:59:22,334 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,334 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,334 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.43
2022-01-04 12:59:22,334 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.145
2022-01-04 12:59:22,334 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,335 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,335 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,335 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.535
2022-01-04 12:59:22,335 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,335 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,335 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,335 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,335 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.43
2022-01-04 12:59:22,336 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,336 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,336 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,336 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,336 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,336 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,336 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.25
2022-01-04 12:59:22,336 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,337 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,337 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,337 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,337 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,337 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,337 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,337 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,337 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,337 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.4775
2022-01-04 12:59:22,338 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,338 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,338 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,338 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,338 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,338 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,338 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2022-01-04 12:59:22,338 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,339 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,339 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,339 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,339 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,339 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,339 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,339 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,339 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,339 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,340 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,340 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,340 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,340 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,340 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,340 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,340 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.25
2022-01-04 12:59:22,340 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,341 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,341 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,341 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,341 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,341 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,341 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,341 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,341 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,341 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,342 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,342 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,342 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,342 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.43
2022-01-04 12:59:22,342 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,342 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,342 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,342 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,343 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,343 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,343 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,343 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,343 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,343 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,343 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,343 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,343 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,344 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,344 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,344 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,344 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,344 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,344 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.145
2022-01-04 12:59:22,344 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,344 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,345 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.145
2022-01-04 12:59:22,345 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,345 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,345 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,345 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,345 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,345 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,345 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,345 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,346 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,346 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,346 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,346 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,346 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,346 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,346 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.43
2022-01-04 12:59:22,346 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,347 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,347 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,347 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.145
2022-01-04 12:59:22,347 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,347 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,347 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,347 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,347 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,347 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,348 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,348 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,348 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,348 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,348 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,348 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.535
2022-01-04 12:59:22,348 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,348 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,349 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,349 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,349 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,349 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,349 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,349 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,349 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,349 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.535
2022-01-04 12:59:22,349 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,350 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,350 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.43
2022-01-04 12:59:22,350 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.24
2022-01-04 12:59:22,350 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,350 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,350 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,350 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.62
2022-01-04 12:59:22,350 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,351 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,351 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,351 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,351 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,351 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,351 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,351 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,351 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,351 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,352 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,352 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,352 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,352 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,352 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,352 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.62
2022-01-04 12:59:22,352 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,352 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,353 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,353 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,353 matplotlib.font_manager DEBUG findfont: Matching STIXGeneral:style=normal:variant=normal:weight=bold:stretch=normal:size=12.0 to STIXGeneral ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf') with score of 0.050000.
2022-01-04 12:59:22,354 matplotlib.font_manager DEBUG findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:59:22,354 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:59:22,354 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,354 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,354 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,354 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,355 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,355 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,355 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,355 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,355 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,355 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,355 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,355 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,356 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,356 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,356 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,356 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,356 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,356 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,356 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,356 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,356 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,357 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,357 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,357 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,357 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 1.05
2022-01-04 12:59:22,357 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,357 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,357 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,357 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,358 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,358 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 1.335
2022-01-04 12:59:22,358 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,358 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,358 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,358 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,358 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,358 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:22,358 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,359 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,359 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,359 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,359 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,359 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,359 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,359 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,359 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,360 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,360 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,360 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,360 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,360 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,360 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,360 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,360 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,361 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,361 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,361 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,361 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,361 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,361 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,361 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,361 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,361 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,362 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,362 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,362 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,362 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,362 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,362 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,362 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,362 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,363 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,363 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,363 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,363 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,363 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,363 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,363 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,363 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,363 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,364 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,364 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,364 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,364 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,364 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,364 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,364 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,364 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,365 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,365 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,365 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,365 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,365 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,365 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,365 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,365 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,365 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,366 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,366 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,366 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,366 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,366 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,366 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,366 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,366 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,367 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,367 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,367 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,367 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,367 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,367 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,367 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,367 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,367 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,368 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,368 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,368 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,368 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,368 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,368 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,368 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,368 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,369 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,369 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,369 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,369 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,369 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,369 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,369 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,369 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,370 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,370 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,370 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,370 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,370 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,370 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:59:22,370 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,370 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,370 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,371 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,371 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,371 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,371 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,371 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,371 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,371 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,371 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,372 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,372 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,372 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,372 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,372 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,372 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,372 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,372 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:59:22,372 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,373 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,373 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,373 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,373 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,373 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,373 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,373 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,373 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,374 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,374 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,374 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,374 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,374 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,374 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,374 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,374 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,374 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,375 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,375 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,375 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,375 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,375 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,375 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,375 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,375 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,376 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,376 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,376 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,376 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,376 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,376 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,376 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,376 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,376 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,377 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,377 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,377 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,377 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,377 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,377 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,377 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,377 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,378 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,378 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,378 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,378 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,378 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,378 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,378 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,378 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,378 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,379 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,379 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,379 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,379 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,379 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,379 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,379 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,379 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,380 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,380 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,380 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,380 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,380 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,380 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,380 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,380 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,380 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,381 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,381 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,381 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,381 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,381 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,381 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:59:22,381 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,381 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,382 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,382 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,382 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,382 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,382 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,382 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:59:22,382 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,382 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,382 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,383 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,383 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,383 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,383 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,383 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,383 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,383 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,383 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,384 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:59:22,384 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,384 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,384 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,384 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,384 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,384 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,384 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,384 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,385 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,385 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:59:22,385 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,385 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,385 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,385 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,385 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,385 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,386 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,386 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,386 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,386 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,386 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,386 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,386 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,386 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,386 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,387 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,387 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,387 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,387 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,387 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,387 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,387 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,387 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,388 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,388 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,388 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,388 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,388 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,388 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,388 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,388 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,388 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,389 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,389 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,389 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,389 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,389 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,389 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,389 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,389 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,390 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,390 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,390 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,390 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,390 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,390 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,390 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,390 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,390 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,391 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,391 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,391 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,391 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,391 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,391 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,391 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,391 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,392 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,392 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,392 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,392 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,392 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,392 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,392 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,392 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,392 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,393 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,393 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,393 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,393 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,393 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,393 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,393 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,393 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,394 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:59:22,394 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,394 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,394 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,394 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:59:22,394 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,394 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,394 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,394 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,395 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,395 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,395 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,395 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,395 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,395 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,395 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,395 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,396 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,396 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,396 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,396 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,396 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,396 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,396 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,396 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,397 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,397 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,397 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,397 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,397 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,397 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,397 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,397 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,397 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,398 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,398 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,398 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,398 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,398 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,398 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,398 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,398 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,399 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,399 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,399 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,399 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,399 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,399 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,399 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,399 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,399 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,400 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,400 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,400 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,400 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,400 matplotlib.font_manager DEBUG findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to STIXNonUnicode ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf') with score of 0.050000.
2022-01-04 12:59:22,401 matplotlib.font_manager DEBUG findfont: Matching STIXNonUnicode:style=italic:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:59:22,402 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 1.335
2022-01-04 12:59:22,402 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,402 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,402 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,402 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,402 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,402 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,402 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,403 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,403 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,403 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,403 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,403 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,403 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,403 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,403 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,403 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,404 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,404 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,404 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,404 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,404 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,404 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,404 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,404 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,405 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 0.05
2022-01-04 12:59:22,405 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,405 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,405 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,405 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,405 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,405 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 0.33499999999999996
2022-01-04 12:59:22,405 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,406 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,406 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,406 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,406 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,406 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 1.05
2022-01-04 12:59:22,406 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,406 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,406 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,406 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,407 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,407 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,407 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,407 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,407 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,407 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,407 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,407 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,408 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,408 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,408 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,408 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,408 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,408 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,408 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,408 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,408 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,409 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,409 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,409 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,409 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,409 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,409 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,409 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,409 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,411 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 11.145
2022-01-04 12:59:22,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,411 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,412 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 10.34
2022-01-04 12:59:22,412 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,412 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,412 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,412 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,412 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 11.145
2022-01-04 12:59:22,412 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,412 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,412 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,413 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,413 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,414 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,415 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,415 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,415 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,415 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 11.25
2022-01-04 12:59:22,415 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,415 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,415 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,415 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,416 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,416 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,416 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,416 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,416 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,416 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,416 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2022-01-04 12:59:22,416 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,418 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,418 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,418 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 10.54
2022-01-04 12:59:22,418 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,418 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,418 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,418 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,418 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 11.145
2022-01-04 12:59:22,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 11.25
2022-01-04 12:59:22,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,420 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,420 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 10.35
2022-01-04 12:59:22,420 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 10.145
2022-01-04 12:59:22,420 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,420 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 10.535
2022-01-04 12:59:22,420 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,420 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,420 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,421 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 11.25
2022-01-04 12:59:22,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,422 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 10.34
2022-01-04 12:59:22,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,423 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,424 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,424 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,424 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 11.24
2022-01-04 12:59:22,424 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,424 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,424 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,424 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,424 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,425 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,425 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,425 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,425 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,425 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,425 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,425 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,425 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,425 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,426 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,426 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,426 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,426 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,426 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,426 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,426 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,426 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,427 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 11.24
2022-01-04 12:59:22,427 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,427 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,427 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,428 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,428 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,428 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,428 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,428 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,428 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,428 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 11.535
2022-01-04 12:59:22,428 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,429 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,429 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,429 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,429 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 11.44
2022-01-04 12:59:22,429 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,429 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,429 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 11.145
2022-01-04 12:59:22,429 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 11.24
2022-01-04 12:59:22,430 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,430 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,430 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,430 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 10.25
2022-01-04 12:59:22,430 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,430 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,430 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,430 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,430 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 10.145
2022-01-04 12:59:22,431 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,431 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,431 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,431 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,431 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,431 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,431 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 10.634999999999998
2022-01-04 12:59:22,431 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,432 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,432 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,432 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,432 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,432 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,432 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,432 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,432 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,432 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 11.1925
2022-01-04 12:59:22,433 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,433 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,433 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,433 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,433 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,433 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,433 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2022-01-04 12:59:22,433 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,434 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,434 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,434 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,434 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,434 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,434 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,434 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,434 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,434 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,435 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,435 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,435 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,435 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,435 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,435 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,435 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 11.535
2022-01-04 12:59:22,436 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,436 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,436 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,436 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,436 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,436 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,436 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,436 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,436 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,437 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,437 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,437 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,437 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,437 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 11.145
2022-01-04 12:59:22,437 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,437 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,437 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,438 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,438 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,438 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,438 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,438 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,438 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,438 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,438 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,438 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,439 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,439 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,439 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,439 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,439 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,439 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,439 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 10.34
2022-01-04 12:59:22,439 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,440 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,440 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 11.24
2022-01-04 12:59:22,440 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,440 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,440 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,440 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,440 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,440 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,440 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,441 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,441 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,441 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,441 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,441 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,441 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,441 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,441 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 10.245
2022-01-04 12:59:22,442 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,442 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,442 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,442 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 10.24
2022-01-04 12:59:22,442 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,442 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,442 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,442 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,442 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,443 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,443 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,443 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,443 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,443 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,443 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,443 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 10.35
2022-01-04 12:59:22,443 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,444 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,444 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,444 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,444 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,444 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,444 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,444 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,444 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,445 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 11.25
2022-01-04 12:59:22,445 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,445 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,445 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 10.145
2022-01-04 12:59:22,445 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 10.145
2022-01-04 12:59:22,445 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,445 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,445 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,445 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 11.335
2022-01-04 12:59:22,446 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,446 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,446 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,446 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,446 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,446 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,446 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,446 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,447 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,447 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,447 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,447 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,447 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,447 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,447 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,447 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 11.335
2022-01-04 12:59:22,447 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,448 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,448 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,448 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,448 matplotlib.font_manager DEBUG findfont: Matching STIXNonUnicode:style=italic:variant=normal:weight=normal:stretch=normal:size=12.0 to STIXNonUnicode ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf') with score of 0.050000.
2022-01-04 12:59:22,449 matplotlib.font_manager DEBUG findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=bold:stretch=normal:size=12.0.
2022-01-04 12:59:22,450 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 0.05
2022-01-04 12:59:22,450 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,450 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,450 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,450 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,450 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,450 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,450 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,451 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,451 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,451 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,451 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,451 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,451 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,451 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,451 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,451 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,452 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,452 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,452 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,452 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,452 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,452 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,452 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,452 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,453 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 1.335
2022-01-04 12:59:22,453 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,453 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,453 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,453 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,453 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,453 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 1.05
2022-01-04 12:59:22,453 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,453 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,454 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,454 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,454 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,454 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 0.33499999999999996
2022-01-04 12:59:22,454 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,454 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,454 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,454 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,455 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,455 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,455 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,455 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,455 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,455 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,455 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,455 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,455 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,456 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,456 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,456 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,456 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,456 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,456 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,456 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,456 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,457 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,457 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,457 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,457 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,457 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,457 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,457 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,457 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,457 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,458 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,458 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,458 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,458 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,458 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,458 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,458 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,458 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,459 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,459 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,459 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,459 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,459 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,459 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.43
2022-01-04 12:59:22,459 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,459 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,459 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.145
2022-01-04 12:59:22,460 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,460 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,460 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,460 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,460 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.43
2022-01-04 12:59:22,460 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,460 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,460 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,461 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,461 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,462 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,463 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,463 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,463 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.535
2022-01-04 12:59:22,463 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,463 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,463 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,463 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,463 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,464 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2022-01-04 12:59:22,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.344999999999999
2022-01-04 12:59:22,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,466 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.43
2022-01-04 12:59:22,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.535
2022-01-04 12:59:22,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,468 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,468 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.535
2022-01-04 12:59:22,468 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.24
2022-01-04 12:59:22,468 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,468 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.25
2022-01-04 12:59:22,468 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,468 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,468 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,469 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,469 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,469 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,469 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,469 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,469 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,469 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,469 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,470 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,470 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.535
2022-01-04 12:59:22,470 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,470 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,470 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,470 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,470 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,470 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.145
2022-01-04 12:59:22,471 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,471 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,471 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,471 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,471 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,471 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,471 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,471 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,471 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,472 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,472 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,472 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,472 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.145
2022-01-04 12:59:22,472 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,472 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,472 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,472 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,473 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,473 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,473 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,473 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,473 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,473 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,473 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,473 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,474 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,474 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,474 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,474 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,474 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,474 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,474 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,474 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,475 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.145
2022-01-04 12:59:22,475 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,476 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,476 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,476 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,477 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.25
2022-01-04 12:59:22,477 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,477 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,477 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,477 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,477 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.344999999999999
2022-01-04 12:59:22,477 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,477 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,478 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.43
2022-01-04 12:59:22,478 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.145
2022-01-04 12:59:22,478 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,478 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,478 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,478 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.535
2022-01-04 12:59:22,478 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,478 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,479 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,479 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,479 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.43
2022-01-04 12:59:22,479 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,479 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,479 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,479 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,479 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.25
2022-01-04 12:59:22,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,480 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.4775
2022-01-04 12:59:22,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,481 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,482 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2022-01-04 12:59:22,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,482 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,482 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,483 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,483 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,483 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.25
2022-01-04 12:59:22,484 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,484 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,484 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,485 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,485 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.43
2022-01-04 12:59:22,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,486 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,486 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,486 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,486 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,486 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,486 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,486 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,486 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,486 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,487 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,487 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,487 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,487 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,487 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,487 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,487 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,487 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,488 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.145
2022-01-04 12:59:22,488 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,488 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.145
2022-01-04 12:59:22,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,488 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,489 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,489 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,489 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,489 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,489 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,489 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,489 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,489 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,489 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,490 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.43
2022-01-04 12:59:22,490 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,490 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,490 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,490 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.145
2022-01-04 12:59:22,490 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,490 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,490 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,491 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,491 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.535
2022-01-04 12:59:22,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,492 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,492 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.535
2022-01-04 12:59:22,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,493 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.43
2022-01-04 12:59:22,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.24
2022-01-04 12:59:22,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,493 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.62
2022-01-04 12:59:22,494 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,494 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,494 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:22,494 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,494 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:22,494 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,494 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,494 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,494 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:22,495 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:22,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:22,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.62
2022-01-04 12:59:22,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:22,496 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,496 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:22,496 matplotlib.font_manager DEBUG findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=bold:stretch=normal:size=12.0 to STIXNonUnicode ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf') with score of 0.050000.
2022-01-04 12:59:22,497 matplotlib.font_manager DEBUG findfont: Matching STIXSizeOneSym:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:59:22,497 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,497 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,497 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,497 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,498 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:59:22,498 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,498 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,498 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,498 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,498 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,498 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,498 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,498 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,499 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,499 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,499 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,499 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,499 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,499 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,499 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,499 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,499 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,500 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,500 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,500 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,500 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,500 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,500 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:22,500 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,500 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,500 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,501 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,501 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,501 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,501 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,501 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,501 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,501 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,501 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,501 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,502 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,502 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,502 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,502 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,502 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,502 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,502 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,502 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,503 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,503 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,503 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,503 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,503 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,503 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,503 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,503 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,503 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,504 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,504 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,504 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,504 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,504 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,504 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,504 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,504 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,504 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,505 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,505 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,505 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,505 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,505 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,505 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,505 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,505 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,505 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,506 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,506 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,506 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,506 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,506 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,506 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,506 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,506 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,506 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,507 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,507 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,507 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,507 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,507 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,507 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,507 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,507 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,507 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,507 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,508 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,508 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,508 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,508 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,508 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,508 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,508 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,508 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,508 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,509 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,509 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,509 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,509 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,509 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,509 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,509 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,509 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,509 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,510 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,510 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,510 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,510 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,510 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,510 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,510 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,510 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,510 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,510 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,511 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,511 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,511 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,511 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,511 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,511 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,511 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,511 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,511 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,512 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,512 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,512 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,512 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,512 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,512 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:59:22,512 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,512 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,512 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,513 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,513 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,513 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,513 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,513 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,513 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,513 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,513 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,513 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,514 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,514 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,514 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,514 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,514 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,514 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,514 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:59:22,514 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,514 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,515 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,515 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,515 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,515 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,515 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,515 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,515 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,515 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,515 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,515 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,516 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,516 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,516 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,516 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,516 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,516 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,516 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,516 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,516 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,517 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,517 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,517 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,517 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,517 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,517 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,517 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,517 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,517 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,517 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,518 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,518 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,518 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,518 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,518 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,518 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,518 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,518 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,518 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,519 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,519 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,519 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,519 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,519 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,519 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,519 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,519 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,519 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,520 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,520 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,520 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,520 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,520 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,520 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,520 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,520 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,520 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,521 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,521 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,521 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,521 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,521 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,521 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,521 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,521 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,521 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,521 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,522 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,522 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,522 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,522 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,522 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,522 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,522 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:59:22,522 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,522 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,523 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,523 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,523 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,523 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,523 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,523 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:59:22,523 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,523 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,523 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,523 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,524 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,524 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,524 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,524 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,524 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,524 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,524 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,524 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:59:22,525 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,525 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,525 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,525 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,525 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,525 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,525 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,525 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,525 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,525 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:59:22,526 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,526 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,526 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,526 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,526 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,526 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,526 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,526 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,526 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,526 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,527 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,527 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,527 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,527 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,527 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,527 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,527 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,527 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,527 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,527 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,528 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,528 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,528 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,528 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,528 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,528 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,528 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,528 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,528 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,529 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,529 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,529 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,530 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,530 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,530 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,530 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,531 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,531 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,531 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,531 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,532 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,532 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,533 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,533 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:59:22,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,534 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:59:22,534 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,534 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,534 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,535 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,536 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,536 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,536 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,537 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,537 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,537 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,537 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,537 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,537 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,537 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,537 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,537 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,537 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,538 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,538 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,538 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,538 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,538 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,538 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,538 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,538 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,538 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,538 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,539 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,539 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,539 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,539 matplotlib.font_manager DEBUG findfont: Matching STIXSizeOneSym:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to STIXSizeOneSym ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf') with score of 0.050000.
2022-01-04 12:59:22,540 matplotlib.font_manager DEBUG findfont: Matching STIXSizeTwoSym:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:59:22,540 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,540 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,540 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,540 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,540 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,540 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,541 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,541 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,541 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,541 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:59:22,541 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,541 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,541 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,541 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,541 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,541 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,542 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,542 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,542 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,542 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,542 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,542 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,542 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,542 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,542 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,542 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,543 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,543 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,543 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,543 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,543 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,543 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,543 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,543 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,543 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:22,543 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,544 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,544 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,544 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,544 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,544 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,544 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,544 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,544 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,544 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,545 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,545 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,545 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,546 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,546 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,546 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,546 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,546 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,547 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,548 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,548 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,548 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,548 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,549 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,549 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,549 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,549 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,550 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,550 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,551 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,551 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,551 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,552 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,552 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,552 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,552 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,552 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,552 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,552 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,552 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,553 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,553 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,553 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,553 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,553 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,553 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,553 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,553 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,553 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,553 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,554 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,554 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:59:22,554 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,554 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,554 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,554 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,554 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,554 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,554 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,554 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,554 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,555 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,555 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,555 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,555 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,555 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,555 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,555 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,555 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,555 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,555 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:59:22,556 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,556 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,556 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,556 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,556 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,556 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,556 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,556 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,556 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,556 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,557 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,557 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,557 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,557 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,557 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,557 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,557 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,557 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,557 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,557 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,557 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,558 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,558 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,558 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,558 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,558 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,558 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,558 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,558 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,558 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,558 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,559 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,559 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,559 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,559 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,559 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,559 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,559 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,559 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,559 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,559 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,559 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,560 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,560 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,560 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,560 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,560 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,560 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,560 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,560 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,560 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,560 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,561 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,561 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,561 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,561 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,561 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,561 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,561 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,561 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,561 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,561 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,561 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,562 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,562 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,562 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,562 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,562 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,562 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,562 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,562 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,562 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,562 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,563 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,563 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:59:22,563 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,563 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,563 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,563 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,563 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,563 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,563 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,563 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:59:22,563 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,564 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,564 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,564 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,564 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,564 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,564 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,564 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,564 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,564 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,564 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,565 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:59:22,565 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,565 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,565 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,565 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,565 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,565 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,565 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,565 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,565 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,566 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:59:22,566 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,566 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,566 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,566 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,566 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,566 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,566 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,566 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,566 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,566 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,567 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,567 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,567 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,567 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,567 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,567 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,567 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,567 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,567 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,567 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,567 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,568 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,568 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,568 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,568 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,568 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,568 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,568 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,568 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,568 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,568 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,569 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,569 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,569 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,569 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,569 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,569 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,569 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,569 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,569 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,570 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,570 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,570 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,571 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,571 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,571 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,571 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,571 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,571 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,571 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,571 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,571 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,571 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,571 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,572 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,572 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,572 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,572 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,572 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,572 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,572 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,572 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,572 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,572 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,573 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,573 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,573 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:59:22,573 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,573 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,573 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,573 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:59:22,573 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,573 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,573 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,573 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,574 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,574 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,574 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,574 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,574 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,574 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,574 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,574 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,574 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,574 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,574 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,575 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,575 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,575 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,575 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,575 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,575 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,575 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,575 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,575 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,575 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,575 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,576 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,576 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,576 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,576 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,576 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,576 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,576 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,576 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,576 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,576 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,577 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,577 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,577 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,577 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,577 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,577 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,577 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,577 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,577 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,577 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,577 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,578 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,578 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,578 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,578 matplotlib.font_manager DEBUG findfont: Matching STIXSizeTwoSym:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to STIXSizeTwoSym ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf') with score of 0.050000.
2022-01-04 12:59:22,578 matplotlib.font_manager DEBUG findfont: Matching STIXSizeThreeSym:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:59:22,579 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,579 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,579 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,579 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,579 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,579 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,579 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,579 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,579 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,580 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,580 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,580 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,580 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,580 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,580 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,580 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,580 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,580 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,580 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,581 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,581 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,581 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,581 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:22,581 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,581 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:59:22,581 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,581 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,581 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,581 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,581 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,581 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,582 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,582 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,582 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,582 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,582 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,582 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,582 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,582 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,582 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,582 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,582 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,583 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,583 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,583 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,583 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,583 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,583 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,583 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,583 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,583 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,583 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,584 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,584 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,584 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,584 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,584 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,584 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,584 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,584 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,584 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,585 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,585 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,585 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,585 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,585 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,585 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,585 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,585 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,585 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,585 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,586 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,586 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,586 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,586 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,586 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,586 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,586 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,586 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,586 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,586 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,586 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,587 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,587 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,587 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,587 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,587 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,587 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,587 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,587 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,587 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,587 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,587 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,588 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,588 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,588 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,588 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,588 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,588 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,588 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,588 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,588 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,588 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,589 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,589 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,589 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,589 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,589 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,589 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,589 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,589 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,589 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,589 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,589 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,589 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,590 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,590 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,590 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,590 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,590 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,590 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,590 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,590 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,590 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,590 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,590 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:59:22,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,592 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,592 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,592 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,592 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,592 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,592 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,592 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,592 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,592 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,592 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,593 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,593 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,593 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,593 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,593 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,593 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,593 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,593 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:59:22,593 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,593 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,593 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,593 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,594 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,594 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,594 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,594 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,594 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,594 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,594 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,594 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,594 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,594 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,594 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,595 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,595 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,596 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,596 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,596 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,596 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,596 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,596 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,596 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,596 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,597 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,597 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,597 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,597 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,597 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,597 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,598 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,598 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,598 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,598 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,598 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,598 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,598 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,599 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,599 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,599 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,599 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,599 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,599 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,599 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,599 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,599 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,600 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,600 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,600 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,600 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,600 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,600 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,600 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,600 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,601 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,601 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,601 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,601 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,601 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,601 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,601 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,601 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,601 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,601 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:59:22,601 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,601 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,602 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,602 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,602 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,602 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,602 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,602 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:59:22,602 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,602 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,603 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,603 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,603 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,603 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,603 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,603 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,603 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,603 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,603 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,603 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:59:22,603 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,604 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,604 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,604 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,604 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,604 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,604 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,604 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,604 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,604 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:59:22,604 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,605 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,605 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,605 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,605 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,605 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,605 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,605 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,605 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,605 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,605 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,605 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,605 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,606 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,606 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,606 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,606 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,606 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,606 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,606 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,606 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,606 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,606 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,606 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,606 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,607 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,607 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,607 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,607 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,607 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,607 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,607 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,607 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,607 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,607 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,607 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,607 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,608 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,608 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,608 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,608 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,608 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,608 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,608 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,608 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,608 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,609 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,609 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,609 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,609 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,609 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,609 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,609 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,609 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,609 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,609 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,609 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,609 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,610 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,610 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,610 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,610 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,610 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,610 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,610 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,610 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,610 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,610 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,610 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,610 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,611 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,611 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,611 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,611 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,611 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:59:22,611 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,611 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,611 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,611 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:59:22,611 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,611 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,612 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,612 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,612 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,612 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,612 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,612 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,612 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,612 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,612 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,612 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,613 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,613 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,613 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,613 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,613 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,613 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,613 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,613 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,613 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,613 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,613 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,613 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,614 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,614 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,614 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,614 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,614 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,614 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,614 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,614 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,614 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,614 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,614 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,615 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,615 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,615 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,615 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,615 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,615 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,615 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,615 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,615 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,615 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,615 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,615 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,616 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,616 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,616 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,616 matplotlib.font_manager DEBUG findfont: Matching STIXSizeThreeSym:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to STIXSizeThreeSym ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf') with score of 0.050000.
2022-01-04 12:59:22,617 matplotlib.font_manager DEBUG findfont: Matching STIXSizeFourSym:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:59:22,617 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,617 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,617 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,617 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,617 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,617 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,618 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,618 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,618 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,618 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,618 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,618 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,618 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,618 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,618 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,618 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,618 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,619 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,619 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,619 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,619 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,619 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,619 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,619 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,619 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,619 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,619 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,620 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,620 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,620 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,620 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,620 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,620 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:22,620 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,620 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,620 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:59:22,620 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,621 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,621 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,621 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,621 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,621 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,621 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,621 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,621 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,621 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,621 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,621 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,622 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,622 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,622 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,622 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,622 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,622 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,622 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,622 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,622 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,622 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,622 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,622 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,623 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,623 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,623 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,623 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,623 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,623 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,623 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,623 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,623 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,623 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,623 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,623 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,624 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,624 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,624 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,624 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,624 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,624 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,624 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,624 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,624 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,624 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,625 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,625 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,625 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,625 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,625 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,625 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,625 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,625 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,625 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,625 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,625 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,625 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,626 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,626 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,626 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,626 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,626 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,626 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,626 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,626 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,626 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,626 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,626 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,626 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,627 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,627 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,627 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,627 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,627 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,627 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,627 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,627 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,627 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,627 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,627 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,628 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,628 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,628 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,628 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,628 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,628 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,628 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,628 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,628 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,628 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,628 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,629 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,629 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,629 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,629 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,629 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,629 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,629 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,629 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,629 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:59:22,629 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,629 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,629 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,630 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,630 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,630 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,630 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,630 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,630 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,630 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,630 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,630 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,630 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,630 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,631 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,631 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,631 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,631 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,631 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:59:22,631 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,631 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,631 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,631 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,631 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,631 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,631 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,632 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,632 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,632 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,632 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,632 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,632 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,632 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,632 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,632 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,632 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,632 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,632 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,633 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,633 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,633 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,633 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,633 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,633 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,633 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,633 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,633 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,633 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,633 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,634 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,634 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,634 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,634 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,634 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,634 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,634 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,634 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,634 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,634 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,635 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,635 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,635 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,635 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,635 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,635 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,635 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,635 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,635 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,636 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,636 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,636 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,636 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,636 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,636 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,636 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,636 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,636 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,636 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,636 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,637 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,637 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,637 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,637 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,637 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,637 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,637 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,637 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,637 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,637 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,637 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,637 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,638 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,638 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,638 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:59:22,638 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,638 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,638 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,638 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,638 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,638 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,638 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,638 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:59:22,638 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,639 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,639 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,639 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,639 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,639 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,639 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,639 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,639 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,639 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,639 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,639 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:59:22,639 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,640 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,640 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,640 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,640 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,640 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,640 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,640 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,640 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,640 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:59:22,640 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,640 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,641 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,641 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,641 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,641 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,641 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,641 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,641 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,641 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,641 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,641 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,641 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,641 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,642 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,642 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,642 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,642 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,642 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,642 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,642 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,642 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,642 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,642 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,642 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,643 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,643 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,643 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,643 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,643 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,643 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,643 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,643 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,643 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,643 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,643 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,643 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,644 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,644 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,644 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,644 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,644 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,644 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,644 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,644 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,644 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,644 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,644 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,644 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,645 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,645 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,645 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,645 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,645 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,645 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,645 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,645 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,645 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,645 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,645 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,645 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,646 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,646 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,646 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,646 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,646 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,646 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,646 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,646 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,646 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,646 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,646 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,646 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,647 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,647 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:59:22,647 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,647 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,647 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,647 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:59:22,647 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,647 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,647 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,647 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,647 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,647 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,648 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,648 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,648 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,648 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,648 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,648 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,648 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,648 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,648 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,648 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,648 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,649 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,649 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,649 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,649 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,649 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,649 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,649 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,649 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,649 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,649 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,649 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,649 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,650 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,650 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,650 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,650 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,650 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,650 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,650 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,650 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,650 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,650 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,651 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,651 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,651 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,651 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,651 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,651 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,651 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,651 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,651 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,651 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,651 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,651 matplotlib.font_manager DEBUG findfont: Matching STIXSizeFourSym:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to STIXSizeFourSym ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf') with score of 0.050000.
2022-01-04 12:59:22,652 matplotlib.font_manager DEBUG findfont: Matching STIXSizeFiveSym:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:59:22,653 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,653 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,653 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,653 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,653 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,653 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,653 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,653 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,653 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,653 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,653 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,653 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,654 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,654 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,654 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,654 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,654 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,654 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,654 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,654 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,654 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,654 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,654 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,655 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:22,655 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,655 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,655 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,655 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,655 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,655 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,655 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,655 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,655 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,655 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,655 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,656 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,656 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,656 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,656 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,656 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,656 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,656 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,656 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,656 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,656 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,656 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,656 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,657 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,657 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,657 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,657 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,657 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,657 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,657 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,657 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,657 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,657 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,657 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,658 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,658 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,658 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,658 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,658 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,658 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,658 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,658 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,658 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,658 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,658 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,658 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,659 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,659 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,659 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,659 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,659 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,659 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,659 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,659 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,659 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,659 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,659 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,659 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,660 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,660 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,660 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,660 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,660 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,660 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,660 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,660 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,660 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,660 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,660 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,661 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,661 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,661 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,661 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,661 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,661 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,661 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,661 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,661 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,661 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,661 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,661 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,662 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,662 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,662 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,662 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,662 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,662 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,662 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,662 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,662 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,662 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,662 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,662 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,663 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,663 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,663 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,663 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,663 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,663 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,663 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,663 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,663 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,663 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,663 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,663 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,664 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,664 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,664 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,664 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,664 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,664 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,664 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,664 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:59:22,664 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,664 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,664 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,664 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:59:22,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,666 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,667 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,668 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,669 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,669 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,669 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,670 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,670 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,670 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,670 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,670 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,670 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,670 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,670 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,670 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,670 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,670 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,670 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,671 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,671 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,671 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,671 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,672 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,672 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,672 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:59:22,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,673 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,673 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,673 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:59:22,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,673 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,673 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:59:22,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,675 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:59:22,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,675 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,676 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,676 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,676 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,676 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,677 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,677 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,677 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,677 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,678 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,678 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,678 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,678 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,679 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,679 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,679 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,680 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,680 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,680 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,680 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,680 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,680 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,680 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,680 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,680 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,680 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,680 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,680 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,681 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,681 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,681 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:59:22,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,682 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:59:22,682 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,682 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,682 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,683 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,683 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,683 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,683 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,683 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,683 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,683 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,683 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,683 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,683 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,683 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,684 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,684 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,684 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,685 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,686 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,687 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,687 matplotlib.font_manager DEBUG findfont: Matching STIXSizeFiveSym:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to STIXSizeFiveSym ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf') with score of 0.050000.
2022-01-04 12:59:22,688 matplotlib.font_manager DEBUG findfont: Matching cmsy10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:59:22,688 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,688 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,688 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,688 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,688 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,689 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,689 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,689 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,689 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,689 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,689 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,689 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,689 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,689 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,689 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,689 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,689 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,690 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,690 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,690 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,690 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,690 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,690 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,690 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,690 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,690 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,690 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,690 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,691 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:22,691 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,691 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,691 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,691 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,691 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,691 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,691 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,691 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,691 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,691 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,692 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,692 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,692 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,692 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,692 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,693 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,694 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,694 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,694 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,694 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,694 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,694 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,694 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,694 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,694 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,694 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,694 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,695 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,696 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,696 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,696 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,696 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,696 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,696 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,696 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,696 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,696 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,697 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,697 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,697 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,698 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,698 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,699 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,699 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,699 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,699 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,699 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,699 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,699 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,699 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,699 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,699 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,699 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,700 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,700 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,700 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,700 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,700 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,700 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,700 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,700 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,700 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,701 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,701 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,701 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,701 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:59:22,701 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,701 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,701 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,701 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,701 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,701 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,701 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,701 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,702 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,702 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,702 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,702 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,702 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,702 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,702 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,702 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,702 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,703 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,703 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:59:22,703 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,703 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,703 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,703 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,703 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,703 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,703 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,703 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,703 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,704 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,705 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,705 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,705 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,705 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,705 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,705 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,705 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,705 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,705 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,705 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,705 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,705 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,706 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,706 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,706 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,706 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,707 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,707 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,707 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,707 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,707 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,707 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,707 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,707 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,707 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,707 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,707 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,707 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,708 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,708 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,708 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,708 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,708 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,708 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,708 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,708 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,708 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,708 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,709 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,709 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:59:22,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,709 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,710 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,710 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:59:22,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,710 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,710 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:59:22,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,711 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:59:22,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,712 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,713 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,713 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,713 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,713 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,714 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,714 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,714 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,715 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,715 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,715 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,715 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,716 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,716 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,716 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,717 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,717 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,717 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,717 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,717 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,717 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,717 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,717 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,718 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,718 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,718 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,718 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,719 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,719 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:59:22,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,720 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:59:22,720 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,720 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,720 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,721 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,721 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,721 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,721 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,721 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,721 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,721 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,721 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,721 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,721 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,721 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,722 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,722 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,723 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,724 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,724 matplotlib.font_manager DEBUG findfont: Matching cmsy10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to cmsy10 ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf') with score of 0.050000.
2022-01-04 12:59:22,725 matplotlib.font_manager DEBUG findfont: Matching cmr10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:59:22,725 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,725 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,726 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,726 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,726 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,726 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:22,726 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,726 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,726 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,726 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,726 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,726 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,726 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,727 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,727 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,727 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,727 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,727 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,727 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,727 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,727 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,727 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,727 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,727 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,727 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,728 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,728 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,728 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,728 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,728 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,728 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,728 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,728 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,728 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,728 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,728 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,729 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,729 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,729 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,729 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,729 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,729 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,729 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,730 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,730 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,731 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,731 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,731 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,731 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,732 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,733 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,733 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,733 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,733 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,734 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,734 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,735 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,735 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,736 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,736 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,736 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,736 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:59:22,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,738 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:59:22,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,740 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,741 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,742 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,743 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,743 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,743 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,743 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,743 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,743 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,743 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,744 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,744 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,745 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,745 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,745 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,745 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,745 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,746 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,746 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:59:22,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,746 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,746 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,746 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:59:22,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,747 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,747 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:59:22,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,748 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:59:22,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,749 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,749 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,749 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,749 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,750 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,750 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,751 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,751 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,751 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,751 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,752 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,752 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,753 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,753 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,753 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,753 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,754 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,754 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,754 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,754 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,754 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,755 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,755 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,755 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:59:22,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,756 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:59:22,756 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,756 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,757 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,757 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,758 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,758 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,758 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,759 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,760 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,760 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,761 matplotlib.font_manager DEBUG findfont: Matching cmr10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to cmr10 ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf') with score of 0.050000.
2022-01-04 12:59:22,761 matplotlib.font_manager DEBUG findfont: Matching cmtt10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:59:22,761 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,762 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,762 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,762 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,762 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,762 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,762 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,762 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,762 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,762 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,762 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,762 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,763 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,763 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,763 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,763 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,763 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:22,763 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,763 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,763 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,763 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,763 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,763 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,764 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,764 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,764 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,764 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,764 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,764 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,764 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,764 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,764 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,764 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,764 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,765 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,765 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,765 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,765 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,765 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,765 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,765 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,765 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,765 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,765 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,765 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,766 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,766 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,766 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,766 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,766 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,766 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,766 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,766 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,766 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,766 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,766 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,766 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,767 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,767 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,767 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,767 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,767 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,767 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,767 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,767 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,767 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,768 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,768 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,768 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,768 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,768 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,768 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,768 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,768 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,768 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,768 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,768 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,769 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,769 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,769 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,769 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,769 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,769 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,769 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,769 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,769 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,769 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,770 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,770 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,770 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,770 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,770 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,770 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,770 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,770 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,770 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,770 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,770 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,771 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,771 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,771 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,771 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,771 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,771 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,771 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,771 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,771 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,771 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,771 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,771 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,772 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,772 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,772 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,772 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,772 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,772 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,772 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,772 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,772 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,772 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,773 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,773 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,773 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,773 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,773 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,773 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,773 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,773 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,773 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,773 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,773 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,773 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,774 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,774 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,774 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,774 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,774 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:59:22,774 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,774 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,774 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,774 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,774 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,774 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,775 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,775 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,775 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,775 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,775 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,775 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,775 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,775 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,775 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,775 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,775 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,775 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,776 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:59:22,776 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,776 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,776 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,776 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,776 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,776 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,776 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,776 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,776 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,777 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,777 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,777 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,777 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,777 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,777 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,777 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,777 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,777 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,778 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,778 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,778 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,778 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,778 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,778 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,778 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,778 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,778 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,778 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,778 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,779 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,779 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,779 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,779 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,779 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,779 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,779 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,779 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,779 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,779 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,779 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,780 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,780 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,780 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,780 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,780 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,780 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,780 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,780 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,780 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,780 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,780 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,781 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,781 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,781 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,781 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,781 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,781 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,781 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,781 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,781 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,781 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,781 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,781 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,782 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,782 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,782 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,782 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,782 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,782 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,782 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,782 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,782 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,782 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,782 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,783 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:59:22,783 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,783 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,783 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,783 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,783 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,783 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,783 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,783 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:59:22,783 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,783 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,784 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,784 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,784 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,784 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,784 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,784 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,784 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,784 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,784 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,785 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:59:22,785 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,785 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,785 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,785 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,785 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,785 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,785 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,785 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,785 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,786 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:59:22,786 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,786 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,786 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,786 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,786 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,786 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,786 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,786 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,786 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,787 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,787 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,787 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,788 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,788 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,788 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,788 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,788 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,788 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,788 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,788 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,788 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,788 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,789 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,789 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,789 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,790 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,790 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,790 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,791 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,791 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,791 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,791 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,791 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,791 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,791 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,791 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,791 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,791 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,791 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,792 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,792 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:59:22,793 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,793 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,793 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,793 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:59:22,793 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,793 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,793 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,793 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,793 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,793 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,793 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,793 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,794 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,794 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,794 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,794 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,794 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,794 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,794 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,794 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,794 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,794 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,794 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,795 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,795 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,795 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,795 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,795 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,795 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,795 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,795 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,795 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,795 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,795 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,795 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,796 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,796 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,796 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,796 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,796 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,796 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,796 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,796 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,796 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,796 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,796 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,797 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,797 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,797 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,797 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,797 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,797 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,797 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,797 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,797 matplotlib.font_manager DEBUG findfont: Matching cmtt10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to cmtt10 ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf') with score of 0.050000.
2022-01-04 12:59:22,798 matplotlib.font_manager DEBUG findfont: Matching cmmi10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:59:22,798 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,798 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,798 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,798 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,798 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,799 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,799 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,799 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,799 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,799 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,799 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,799 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,799 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,799 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,799 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,800 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,800 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,800 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,800 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,800 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:22,800 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,800 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,800 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,800 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,800 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,801 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,801 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,801 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,801 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,801 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,801 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,801 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,801 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,801 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,801 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,801 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,802 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,802 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,802 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,802 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,802 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,802 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,802 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,802 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,803 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,803 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,803 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,803 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,803 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,803 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,803 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,803 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,803 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,803 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,803 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,804 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,804 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,804 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,804 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,804 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,804 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,804 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,804 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,804 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,804 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,805 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,805 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,805 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,805 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,805 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,805 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,805 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,805 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,805 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,805 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,805 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,806 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,806 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,806 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,806 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,806 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,806 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,806 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,806 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,806 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,806 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,806 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,806 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,807 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,807 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,807 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,807 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,807 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,807 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,807 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,807 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,807 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,807 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,807 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,807 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,808 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,808 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,808 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,808 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,808 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,808 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,808 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,808 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,808 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,808 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,809 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,809 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,809 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,809 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,809 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,809 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,809 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,809 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,809 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,809 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,809 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,809 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:59:22,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,811 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,812 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,812 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,812 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,812 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,812 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,812 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,812 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,812 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,812 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,812 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,813 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:59:22,813 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,813 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,813 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,813 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,813 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,813 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,813 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,813 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,813 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,813 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,813 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,814 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,814 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,814 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,814 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,814 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,814 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,814 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,814 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,814 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,814 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,814 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,815 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,815 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,815 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,815 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,815 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,815 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,815 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,815 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,815 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,815 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,815 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,815 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,816 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,816 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,816 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,816 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,816 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,816 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,816 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,816 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,816 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,816 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,817 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,817 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,817 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,817 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,817 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,817 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,817 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,817 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,817 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,818 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,818 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,818 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,818 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,818 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,818 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,818 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,818 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,818 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,818 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,818 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,818 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,819 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,819 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,819 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,819 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,819 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,819 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,819 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,819 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,819 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,820 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:59:22,820 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,820 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,820 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,820 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,820 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,820 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,820 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,820 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:59:22,820 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,820 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,821 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,821 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,821 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,821 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,821 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,821 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,821 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,821 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,821 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,821 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:59:22,821 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,822 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,822 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,822 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,822 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,822 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,822 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,822 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,822 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,822 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:59:22,822 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,822 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,822 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,823 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,823 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,823 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,823 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,823 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,823 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,823 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,823 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,823 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,823 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,823 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,824 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,824 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,824 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,824 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,824 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,824 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,824 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,824 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,824 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,824 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,824 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,825 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,825 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,825 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,825 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,825 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,825 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,825 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,825 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,825 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,825 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,825 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,825 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,826 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,826 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,826 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,826 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,826 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,826 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,826 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,826 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,826 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,826 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,826 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,827 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,827 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,827 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,827 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,827 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,827 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,827 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,827 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,827 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,827 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,827 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,827 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,828 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,828 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,828 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,828 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,828 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,828 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,828 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,828 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,828 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,828 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,828 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,829 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,829 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,829 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,829 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:59:22,829 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,829 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,829 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,829 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:59:22,829 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,829 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,829 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,830 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,830 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,830 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,830 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,830 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,830 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,830 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,830 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,830 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,830 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,830 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,831 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,831 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,831 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,831 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,831 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,831 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,831 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,831 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,831 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,831 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,831 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,831 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,832 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,832 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,832 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,832 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,832 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,832 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,832 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,832 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,832 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,832 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,832 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,833 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,833 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,833 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,833 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,833 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,833 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,833 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,833 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,833 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,833 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,833 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,834 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,834 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,834 matplotlib.font_manager DEBUG findfont: Matching cmmi10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to cmmi10 ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf') with score of 0.050000.
2022-01-04 12:59:22,835 matplotlib.font_manager DEBUG findfont: Matching cmb10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:59:22,835 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,835 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,835 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,835 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,835 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,835 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,836 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,836 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,836 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,836 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,836 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,836 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,836 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,836 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,836 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,837 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,837 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,837 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,837 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,837 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,837 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,837 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,837 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,837 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,837 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,838 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,838 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,838 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,838 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,838 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,838 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,838 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,838 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,838 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:22,838 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,838 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,839 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,839 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,839 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,839 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,839 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,839 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,839 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,839 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,839 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,839 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,839 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,840 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,840 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,840 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,840 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,840 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,840 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,840 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,840 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,840 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,840 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,840 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,841 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,841 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,841 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,841 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,841 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,841 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,841 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,841 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,841 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,841 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,841 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,841 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,842 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,842 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,842 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,842 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,842 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,842 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,842 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,842 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,842 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,842 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,842 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,843 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,843 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,843 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,843 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,843 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,843 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,843 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,843 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,843 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,843 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,843 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,844 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,844 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,844 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,844 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,844 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,844 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,844 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,844 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,844 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,844 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,844 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,844 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,845 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,845 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,845 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,845 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,845 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,845 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,845 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,845 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,845 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,845 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,845 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,846 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,846 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,846 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,846 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,846 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,846 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,846 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,846 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,846 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,846 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,846 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,846 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,847 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,847 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,847 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,847 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,847 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,847 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,847 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,847 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,847 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,847 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:59:22,847 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,848 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,848 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,848 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,848 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,848 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,848 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,848 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,848 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,848 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,848 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,848 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,849 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,849 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,849 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,849 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,849 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,849 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,849 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:59:22,849 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,849 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,849 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,849 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,850 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,850 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,850 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,850 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,850 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,850 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,850 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,850 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,850 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,851 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,851 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,851 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,851 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,851 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,851 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,851 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,851 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,851 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,851 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,851 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,851 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,852 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,852 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,852 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,852 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,852 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,852 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,852 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,852 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,853 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,853 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,853 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,853 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,853 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,853 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,853 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,853 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,853 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,853 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,853 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,854 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,854 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,854 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,854 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,854 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,854 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,854 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,854 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,854 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,854 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,854 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,855 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,855 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,855 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,855 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,855 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,855 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,855 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,855 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,855 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,855 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,856 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,856 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,856 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,856 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,856 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,856 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,856 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,856 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,856 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,856 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:59:22,856 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,857 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,857 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,857 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,857 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,857 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,857 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,857 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:59:22,857 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,857 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,857 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,857 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,857 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,858 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,858 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,858 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,858 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,858 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,858 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,858 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:59:22,858 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,858 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,858 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,858 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,858 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,859 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,859 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,859 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,859 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,859 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:59:22,859 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,859 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,859 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,859 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,859 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,860 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,860 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,860 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,860 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,860 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,860 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,860 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,860 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,860 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,860 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,860 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,861 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,861 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,861 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,861 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,861 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,861 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,861 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,861 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,861 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,861 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,861 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,861 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,862 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,862 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,862 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,862 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,862 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,862 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,862 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,862 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,862 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,862 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,862 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,863 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,863 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,863 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,863 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,863 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,863 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,863 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,863 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,863 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,863 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,863 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,864 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,864 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,864 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,864 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,864 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,864 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,864 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,864 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,864 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,864 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,864 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,864 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,865 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,865 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,865 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,865 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,865 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,865 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,865 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,865 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,865 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,865 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,865 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,866 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,866 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:59:22,866 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,866 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,866 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,866 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:59:22,866 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,866 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,866 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,866 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,866 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,867 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,867 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,867 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,867 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,867 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,867 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,867 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,867 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,868 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,868 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,868 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,868 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,868 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,868 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,868 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,868 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,868 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,868 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,868 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,869 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,869 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,869 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,869 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,869 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,869 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,869 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,869 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,870 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,870 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,870 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,870 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,870 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,870 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,870 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,870 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,870 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,870 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,871 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,871 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,871 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,871 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,871 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,871 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,871 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,871 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,871 matplotlib.font_manager DEBUG findfont: Matching cmb10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to cmb10 ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf') with score of 0.050000.
2022-01-04 12:59:22,872 matplotlib.font_manager DEBUG findfont: Matching cmss10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:59:22,872 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,872 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,873 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,873 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,873 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,873 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,873 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,873 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,873 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,873 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,873 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,873 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,874 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,874 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,874 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,874 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,874 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,874 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,874 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,874 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,874 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,874 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,875 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,875 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,875 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,875 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,875 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:22,875 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,875 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,875 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,875 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,875 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,875 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,876 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,876 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,876 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,876 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,876 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,876 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,876 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,876 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,876 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,876 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,876 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,877 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,877 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,877 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,877 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,877 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,877 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,877 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,877 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,877 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,877 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,877 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,877 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,878 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,878 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,878 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,878 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,878 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,878 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,878 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,878 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,878 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,878 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,878 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,879 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,879 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,879 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,879 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,879 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,879 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,879 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,879 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,879 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,879 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,879 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,879 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,880 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,880 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,880 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,880 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,880 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,880 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,880 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,880 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,880 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,880 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,880 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,881 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,881 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,881 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,881 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,881 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,881 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,881 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,881 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,881 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,881 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,881 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,882 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,882 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,882 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,882 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,882 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,882 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,882 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,882 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,882 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,882 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,882 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,882 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,883 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,883 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,883 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,883 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,883 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,883 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,883 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,883 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,883 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,883 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,883 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,884 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,884 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,884 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,884 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,884 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,884 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,884 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,884 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,884 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,885 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,885 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,885 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,885 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:59:22,885 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,885 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,885 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,885 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,885 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,886 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,886 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,886 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,886 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,886 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,886 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,886 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,886 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,886 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,886 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,886 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,887 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,887 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,887 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:59:22,887 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,887 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,887 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,887 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,887 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,887 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,887 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,888 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,888 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,888 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,888 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,888 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,888 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,888 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,888 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,888 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,888 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,889 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,889 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,889 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,889 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,889 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,889 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,889 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,889 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,889 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,889 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,889 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,889 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,890 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,890 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,890 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,890 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,890 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,890 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,890 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,890 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,890 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,890 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,890 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,891 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,891 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,891 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,891 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,891 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,891 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,891 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,891 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,891 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,891 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,891 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,891 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,892 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,892 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,892 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,892 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,892 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,892 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,892 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,892 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,892 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,892 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,892 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,893 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,893 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,893 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,893 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,893 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,893 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,893 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,893 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,893 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,893 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,893 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,894 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:59:22,894 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,894 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,894 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,894 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,894 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,894 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,894 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,894 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:59:22,894 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,894 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,894 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,895 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,895 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,895 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,895 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,895 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,895 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,895 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,895 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,895 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:59:22,895 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,895 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,896 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,896 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,896 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,896 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,896 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,896 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,896 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,896 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:59:22,896 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,896 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,896 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,897 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,897 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,897 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,897 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,897 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,897 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,897 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,897 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,897 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,897 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,897 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,898 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,898 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,898 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,898 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,898 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,898 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,898 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,898 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,898 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,898 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,898 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,898 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,899 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,899 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,899 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,899 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,899 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,899 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,899 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,899 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,899 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,899 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,899 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,900 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,900 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,900 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,900 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,900 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,900 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,900 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,900 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,900 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,901 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,901 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,901 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,901 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,901 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,901 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,901 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,901 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,901 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,901 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,901 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,902 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,902 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,902 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,902 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,902 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,902 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,902 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,902 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,903 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,903 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,903 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,903 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,903 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,903 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,903 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,903 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,903 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,903 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:59:22,903 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,904 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,904 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,904 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:59:22,904 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,904 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,904 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,904 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,904 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,904 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,904 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,905 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,905 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,905 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,905 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,905 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,905 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,905 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,905 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,905 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,905 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,905 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,906 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,906 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,906 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,906 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,906 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,906 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,906 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,906 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,906 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,906 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,906 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,907 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,907 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,907 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,907 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,907 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,907 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,907 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,907 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,907 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,907 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,907 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,908 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,908 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,908 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,908 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,908 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,908 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,908 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,908 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,908 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,908 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,908 matplotlib.font_manager DEBUG findfont: Matching cmss10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to cmss10 ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf') with score of 0.050000.
2022-01-04 12:59:22,909 matplotlib.font_manager DEBUG findfont: Matching cmex10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:59:22,909 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,909 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,910 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:22,910 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,910 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,910 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,910 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,910 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,910 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,910 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,910 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,910 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,910 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,910 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,911 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,911 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,911 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,911 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,911 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,911 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,911 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,911 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,911 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,911 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,911 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,912 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,912 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,912 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,912 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,912 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,912 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,912 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,912 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,912 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,912 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,913 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,913 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,913 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,913 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,913 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,913 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,913 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,913 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,913 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,913 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,913 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,914 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,914 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,914 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,914 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,914 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,914 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,914 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,914 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,914 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,914 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,915 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,915 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,915 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,915 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,915 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,915 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,915 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,915 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,915 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,915 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,915 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,916 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,916 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,916 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,916 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,916 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,916 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,916 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,916 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,916 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,916 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,916 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,917 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,917 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,917 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,917 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,917 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,917 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,917 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,917 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,918 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,918 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,918 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,918 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,918 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,918 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,918 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,918 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,918 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,918 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,918 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,919 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,919 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,919 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,919 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,919 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,919 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,919 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,919 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,920 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,920 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,920 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,920 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,920 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,920 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,920 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,920 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,920 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,920 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,921 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,921 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,921 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,921 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,921 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,921 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,921 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,921 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,921 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,921 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,922 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,922 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,922 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,922 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,922 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,922 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,923 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,923 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,923 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,923 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,923 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,923 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:59:22,923 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,923 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,923 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,923 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,924 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,924 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,924 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,924 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,924 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,924 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,924 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,924 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,924 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,924 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,925 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,925 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,925 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,925 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,925 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:59:22,925 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,925 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,925 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,925 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,925 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,925 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,926 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,926 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,926 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,926 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,926 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,926 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,926 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,926 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,926 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,926 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,926 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,927 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,927 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,927 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,927 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,927 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,927 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,927 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,927 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,927 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,927 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,928 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,928 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,928 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,928 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,928 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,928 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,928 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,928 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,928 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,929 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,929 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,929 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,929 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,929 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,929 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,929 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,929 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,929 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,929 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,929 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,930 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,930 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,930 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,930 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,930 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,930 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,930 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,930 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,931 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,931 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,931 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,931 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,931 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,932 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,932 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,932 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,932 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,933 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,933 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,933 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,933 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,933 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,933 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,933 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,933 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,934 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,934 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,934 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:59:22,934 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,934 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,934 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,934 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,934 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,934 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,935 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,935 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:59:22,935 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,935 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,935 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,935 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,935 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,935 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,935 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,936 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,936 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,936 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,936 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,936 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:59:22,936 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,936 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,936 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,936 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,937 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,937 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,937 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,937 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,937 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,937 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:59:22,937 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,937 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,937 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,937 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,937 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,938 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,938 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,938 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,938 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,938 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,938 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,938 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,938 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,938 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,938 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,938 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,938 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,939 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,939 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,939 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,939 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,939 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,939 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,939 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,939 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,939 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,939 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,939 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,940 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,940 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,940 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,940 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,940 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,940 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,940 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,940 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,940 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,940 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,941 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,941 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,941 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,941 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,941 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,941 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,941 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,941 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,941 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,941 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,941 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,941 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,942 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,942 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,942 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,942 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,942 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,942 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,942 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,942 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,942 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,942 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,942 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,943 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,943 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,943 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,943 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,943 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,943 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,943 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,943 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,943 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,943 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,944 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,944 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,944 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,944 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:59:22,944 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,944 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,944 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,944 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:59:22,944 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,944 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,945 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,945 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,945 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,945 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,945 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,945 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,945 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,945 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,945 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,945 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,945 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,946 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,946 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,946 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,946 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,946 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,946 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,946 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,946 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,946 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,946 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,947 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,947 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,947 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,947 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,947 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,947 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,947 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,947 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,947 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,947 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,947 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,948 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,948 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,948 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,948 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,948 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,948 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,948 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,948 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,948 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,948 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,948 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,949 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,949 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,949 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,949 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,949 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,949 matplotlib.font_manager DEBUG findfont: Matching cmex10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to cmex10 ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf') with score of 0.050000.
2022-01-04 12:59:22,950 matplotlib.font_manager DEBUG findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:59:22,950 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,950 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:22,950 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,950 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-01-04 12:59:22,951 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,951 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,951 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,951 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,951 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,951 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,951 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,951 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,951 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-01-04 12:59:22,951 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,952 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:59:22,952 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,952 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,952 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,952 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,952 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,952 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,953 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,953 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,953 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,953 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,953 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,953 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,953 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,953 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,953 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,953 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,953 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,953 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,954 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,954 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,954 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,954 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,954 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,954 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,954 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,954 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,954 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,954 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,954 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,955 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,955 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,955 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,955 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,955 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,955 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,955 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,955 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,955 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,955 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,955 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,956 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,956 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,956 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,956 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,956 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,956 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,956 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,956 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,956 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,956 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,956 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,957 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,957 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,957 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,957 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,957 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,957 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,957 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,957 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,957 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,957 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,957 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,958 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,958 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,958 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,958 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,958 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,958 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,958 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,958 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,958 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,958 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,958 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,958 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,959 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,959 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,959 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,959 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,959 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,959 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,959 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,959 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,959 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,959 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,959 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,959 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,960 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,960 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,960 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,960 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,960 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,960 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,960 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,960 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,960 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,960 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,960 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,961 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,961 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,961 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,961 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,961 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,961 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,961 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,961 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,961 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,961 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,961 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,961 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,962 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,962 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,962 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,962 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,962 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,962 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,962 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,962 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,962 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,962 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,962 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,963 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,963 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:59:22,963 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,963 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,963 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,963 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,963 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,963 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,964 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,964 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,964 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,964 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,964 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,964 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,964 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,964 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,964 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,964 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,964 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,965 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,965 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:59:22,965 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,965 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,965 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,965 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,965 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,965 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,965 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,965 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,965 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,965 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,966 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,966 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,966 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,966 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,966 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,966 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,966 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,966 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,966 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,966 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,966 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,967 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,967 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,967 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,967 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,967 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,967 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,967 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,967 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,967 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,967 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,968 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,968 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,968 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,968 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,968 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,968 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,968 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,968 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,968 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,968 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,968 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:59:22,969 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,969 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,969 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,969 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,969 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,969 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,969 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,969 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,969 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,970 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,970 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,970 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,970 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,970 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,970 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,970 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,970 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,970 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,970 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,970 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,971 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,971 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,971 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,971 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,971 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,971 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,971 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,971 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,971 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,971 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,971 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,971 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,972 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:59:22,972 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,972 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,972 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,972 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,972 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,972 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,972 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,972 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:59:22,972 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,972 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,973 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,973 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,973 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,973 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,973 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,973 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,973 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,973 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,973 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,973 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:59:22,973 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,973 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,974 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,974 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,974 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,974 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,974 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,974 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,974 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,974 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:59:22,974 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,974 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,974 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,974 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,975 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,975 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,975 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,975 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,975 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,975 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,975 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,975 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,975 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,975 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,975 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,976 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,976 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,976 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,976 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,976 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,976 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,976 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,976 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,976 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:22,976 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,976 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,977 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,977 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,977 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,977 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,977 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,977 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,977 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,977 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,977 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,977 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,977 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,977 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:22,978 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,978 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,978 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,978 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,978 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,978 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,978 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,978 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,978 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,978 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,978 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:22,979 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,979 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,979 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,979 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,979 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,979 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,979 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,979 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:22,979 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,979 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,979 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:22,979 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,980 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,980 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,980 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,980 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,980 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,980 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,980 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,980 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,980 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,980 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,980 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,981 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,981 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,981 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:59:22,981 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,981 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,981 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,981 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:59:22,981 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,981 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,981 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,981 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,982 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,982 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:22,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,983 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,983 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,983 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,983 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,983 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,983 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:22,983 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,983 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,983 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:22,983 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:22,984 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,984 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,984 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,984 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,984 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,984 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,984 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:22,984 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,984 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:22,985 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,985 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,985 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,985 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:22,985 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,985 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:22,985 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,985 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:22,985 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,985 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,986 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:22,986 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,986 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:22,986 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,986 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:22,986 matplotlib.font_manager DEBUG findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-01-04 12:59:22,987 matplotlib.font_manager DEBUG findfont: Matching DejaVu Sans:style=italic:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:59:22,987 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,987 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 1.05
2022-01-04 12:59:22,987 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,987 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 0.15000000000000002
2022-01-04 12:59:22,987 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,987 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,988 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,988 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,988 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,988 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,988 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,988 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,988 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 0.43499999999999994
2022-01-04 12:59:22,988 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,988 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 1.335
2022-01-04 12:59:22,988 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,989 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,989 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,989 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,989 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,989 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,989 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,989 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,989 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,989 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,989 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,989 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,990 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,990 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,990 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,990 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,990 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,990 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,990 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,990 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,990 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,990 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,990 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,990 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,991 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,991 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,991 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,991 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,991 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,991 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,991 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,991 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,991 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,991 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,992 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,992 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,992 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,992 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,992 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,992 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,992 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,992 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,992 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,992 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,992 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,993 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,993 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,993 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,993 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,993 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,993 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,993 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,993 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,993 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,993 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,993 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,993 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,994 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 11.145
2022-01-04 12:59:22,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,995 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,995 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 10.34
2022-01-04 12:59:22,995 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,995 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,995 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,995 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:22,995 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 11.145
2022-01-04 12:59:22,995 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,995 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,995 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,996 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,996 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,996 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:22,996 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,996 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,996 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,996 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,996 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,996 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,996 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,997 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,997 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,997 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,997 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,997 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,997 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,997 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,997 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,997 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,997 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 11.25
2022-01-04 12:59:22,997 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,998 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,998 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,998 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,998 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,998 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:22,998 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,998 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,998 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,998 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,998 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2022-01-04 12:59:22,998 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,998 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,999 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,999 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,999 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:22,999 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,999 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,999 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,999 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,999 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:22,999 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:22,999 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:22,999 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 10.54
2022-01-04 12:59:23,0 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,0 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,0 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:23,0 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,0 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:23,0 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,0 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 11.145
2022-01-04 12:59:23,1 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:23,1 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,1 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:23,1 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,1 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,1 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 11.25
2022-01-04 12:59:23,1 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:23,1 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,1 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 10.35
2022-01-04 12:59:23,1 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 10.145
2022-01-04 12:59:23,1 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:23,2 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 10.535
2022-01-04 12:59:23,2 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:23,2 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,2 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,2 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:23,2 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,2 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,3 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:23,3 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,3 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,3 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,3 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,3 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,3 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 11.25
2022-01-04 12:59:23,3 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,3 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,3 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,4 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:23,4 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,4 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 10.34
2022-01-04 12:59:23,4 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,4 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:23,4 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,4 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,4 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:23,4 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,4 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,5 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:23,5 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:23,5 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,5 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:23,5 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,5 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 11.24
2022-01-04 12:59:23,5 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:23,5 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,5 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:23,5 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,5 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,6 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,6 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:23,6 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,6 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,6 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 1.335
2022-01-04 12:59:23,6 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,6 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,6 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,6 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,7 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,7 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,7 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:23,7 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,7 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,7 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:23,7 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,7 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:23,7 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:23,7 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,8 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:23,8 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:23,8 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 11.24
2022-01-04 12:59:23,8 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:23,8 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,8 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,8 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,8 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:23,9 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:23,9 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,9 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,9 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:23,9 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,9 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 11.535
2022-01-04 12:59:23,9 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,9 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,9 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:23,9 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,9 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 11.44
2022-01-04 12:59:23,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,10 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:23,10 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 11.145
2022-01-04 12:59:23,10 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 11.24
2022-01-04 12:59:23,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:23,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 10.25
2022-01-04 12:59:23,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,10 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,10 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:23,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:23,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 10.145
2022-01-04 12:59:23,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:23,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:23,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 10.634999999999998
2022-01-04 12:59:23,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:23,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,12 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:23,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:23,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 11.1925
2022-01-04 12:59:23,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,13 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:23,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:23,13 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2022-01-04 12:59:23,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,13 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:23,13 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:23,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:23,14 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,14 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:23,14 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:23,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 11.535
2022-01-04 12:59:23,15 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:23,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:23,15 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:23,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,15 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,15 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:23,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:23,16 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 11.145
2022-01-04 12:59:23,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,16 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:23,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,17 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:23,17 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:23,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,17 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 1.05
2022-01-04 12:59:23,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,18 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,18 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,18 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 10.34
2022-01-04 12:59:23,18 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:23,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,18 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 11.24
2022-01-04 12:59:23,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:23,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,18 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:23,19 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,19 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,19 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:23,19 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,19 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,19 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:23,19 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,19 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,20 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:23,20 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,20 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 10.245
2022-01-04 12:59:23,20 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:23,20 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:23,20 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:23,20 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 10.24
2022-01-04 12:59:23,20 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:23,20 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:23,21 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,21 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,21 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:23,21 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:23,21 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,21 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:23,21 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:23,21 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,21 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:23,21 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 10.35
2022-01-04 12:59:23,21 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,21 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,22 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:23,22 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,22 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,22 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,22 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:23,22 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:23,22 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,22 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 11.25
2022-01-04 12:59:23,22 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,22 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:23,22 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 10.145
2022-01-04 12:59:23,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 10.145
2022-01-04 12:59:23,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,23 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:23,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 11.335
2022-01-04 12:59:23,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:23,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:59:23,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:23,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:59:23,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:23,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,24 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,24 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:59:23,24 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,24 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:59:23,24 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:23,24 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:59:23,24 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,24 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,24 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 11.335
2022-01-04 12:59:23,24 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,25 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:59:23,25 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,25 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:59:23,25 matplotlib.font_manager DEBUG findfont: Matching DejaVu Sans:style=italic:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf') with score of 0.150000.
2022-01-04 12:59:23,26 matplotlib.font_manager DEBUG findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=bold:stretch=normal:size=12.0.
2022-01-04 12:59:23,26 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,26 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.33499999999999996
2022-01-04 12:59:23,26 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,26 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.335
2022-01-04 12:59:23,27 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,27 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,27 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,27 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,27 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,27 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,27 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,27 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,27 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.05
2022-01-04 12:59:23,27 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:23,27 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.05
2022-01-04 12:59:23,28 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,28 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,28 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,28 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,28 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,28 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:23,28 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,28 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,28 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,28 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,29 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,29 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,29 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,29 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,29 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,29 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:23,29 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:23,29 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,29 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,29 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,29 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,29 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,30 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,30 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,30 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,30 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,30 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,30 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:23,30 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,30 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,30 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,30 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,30 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,31 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,31 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,31 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,31 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,31 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,31 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,31 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:23,31 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,31 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,31 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,31 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,32 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,32 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:23,32 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,32 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,32 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:23,32 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,32 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:23,32 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,32 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,32 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,33 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,33 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,33 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,33 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,33 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,33 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,33 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:23,33 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,33 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,33 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,33 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,34 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,34 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.43
2022-01-04 12:59:23,34 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:23,34 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,34 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.145
2022-01-04 12:59:23,34 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,34 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,34 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,34 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:23,34 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.43
2022-01-04 12:59:23,35 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,35 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,35 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:23,35 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,35 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,35 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,35 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,35 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,35 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,36 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,36 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,36 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,36 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,36 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,36 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,36 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,36 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,36 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,36 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,37 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,37 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,37 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,37 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.535
2022-01-04 12:59:23,37 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,37 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,37 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,37 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,37 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,37 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:23,37 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,37 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2022-01-04 12:59:23,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.344999999999999
2022-01-04 12:59:23,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,39 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.43
2022-01-04 12:59:23,40 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,40 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,40 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,40 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,40 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,40 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.535
2022-01-04 12:59:23,40 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:23,40 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,40 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.535
2022-01-04 12:59:23,40 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.24
2022-01-04 12:59:23,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:23,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.25
2022-01-04 12:59:23,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,41 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,42 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,42 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,42 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,42 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.535
2022-01-04 12:59:23,42 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,42 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,42 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,42 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,42 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,42 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.145
2022-01-04 12:59:23,42 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,42 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,43 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:23,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:23,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.145
2022-01-04 12:59:23,44 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,44 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,44 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,44 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,44 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,44 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,44 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,44 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,44 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,44 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.05
2022-01-04 12:59:23,45 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,45 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,45 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,45 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,45 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,45 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,45 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,45 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,45 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,45 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:23,45 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,45 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,46 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:23,46 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,46 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,46 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,46 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.145
2022-01-04 12:59:23,46 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,46 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,46 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,46 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,46 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,46 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:23,47 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,47 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,47 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:23,47 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,47 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.25
2022-01-04 12:59:23,47 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,47 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,47 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,47 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,47 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.344999999999999
2022-01-04 12:59:23,47 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,47 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,48 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.43
2022-01-04 12:59:23,48 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.145
2022-01-04 12:59:23,48 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,48 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,48 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,48 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.535
2022-01-04 12:59:23,48 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,48 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,48 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:23,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.43
2022-01-04 12:59:23,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:23,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:23,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.25
2022-01-04 12:59:23,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:23,50 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,50 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,50 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:23,50 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,50 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,50 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,50 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,50 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.4775
2022-01-04 12:59:23,50 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,50 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,51 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,51 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,51 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:23,51 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,51 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2022-01-04 12:59:23,51 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,51 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,51 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,51 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,51 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,51 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,52 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:23,52 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,52 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,52 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,52 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,52 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,52 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,52 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,52 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,53 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:23,53 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.25
2022-01-04 12:59:23,53 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,53 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:23,53 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:23,53 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,53 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,53 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,53 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,53 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,53 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,54 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,54 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:23,54 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,54 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,54 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.43
2022-01-04 12:59:23,54 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,54 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,54 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,54 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,54 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,54 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,54 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,55 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,55 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,55 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,55 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.33499999999999996
2022-01-04 12:59:23,55 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,55 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,55 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,55 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,55 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,55 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,55 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,56 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.145
2022-01-04 12:59:23,56 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,56 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,56 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.145
2022-01-04 12:59:23,56 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,56 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,56 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,56 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:23,56 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,56 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,56 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,57 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,57 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,57 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,57 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,57 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,57 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,57 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,57 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.43
2022-01-04 12:59:23,57 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,57 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,57 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,58 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.145
2022-01-04 12:59:23,58 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,58 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,58 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,58 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,58 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,58 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,58 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,58 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,58 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,58 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,58 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:23,59 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.535
2022-01-04 12:59:23,59 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,59 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,59 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,59 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,59 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,59 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,59 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,59 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:23,59 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,59 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.535
2022-01-04 12:59:23,60 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,60 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,60 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.43
2022-01-04 12:59:23,60 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.24
2022-01-04 12:59:23,60 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,60 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,60 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,60 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.62
2022-01-04 12:59:23,60 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,60 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,61 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:59:23,61 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:23,61 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:59:23,61 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,61 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,61 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,61 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:59:23,61 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,61 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:59:23,61 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:23,61 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:59:23,61 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,62 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,62 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.62
2022-01-04 12:59:23,62 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,62 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:59:23,62 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,62 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:59:23,62 matplotlib.font_manager DEBUG findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=bold:stretch=normal:size=12.0 to DejaVu Sans ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf') with score of 0.050000.
2022-01-04 12:59:23,63 matplotlib.font_manager DEBUG findfont: Matching DejaVu Sans Mono:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:59:23,63 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,63 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,63 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,63 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,63 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,64 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,64 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,64 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,64 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,64 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,64 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,64 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,64 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,64 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,64 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,64 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:23,65 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,65 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-01-04 12:59:23,65 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,65 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,65 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,65 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,65 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,65 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,65 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,65 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,65 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,66 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,66 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,66 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:59:23,66 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-01-04 12:59:23,66 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,66 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,66 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,66 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,66 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,66 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,66 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,67 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,67 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,67 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,67 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,67 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,67 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,67 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,67 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,68 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:23,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,68 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,69 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,69 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,69 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,69 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,69 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,69 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,69 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,69 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,71 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:23,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,71 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,71 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:23,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,72 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:23,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,72 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,72 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,73 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,73 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,74 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,74 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,74 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,74 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:23,74 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,74 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,74 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,74 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,74 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,74 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,74 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,74 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:23,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:59:23,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,76 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,77 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:23,77 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,77 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,77 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,77 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,77 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,77 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:23,77 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,77 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,77 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:23,77 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:23,77 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,78 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:59:23,78 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,78 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,78 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,78 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,78 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,78 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,78 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,78 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,78 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,78 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,79 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,79 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,79 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:23,79 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,79 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,79 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,79 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,79 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,79 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:23,79 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,79 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,80 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,80 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,80 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,80 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,80 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,80 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,80 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,80 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,80 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,80 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,80 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:23,81 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,81 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,81 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,81 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,81 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,81 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,81 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,81 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,81 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,81 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,81 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,82 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,82 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,82 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,82 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,82 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,82 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,82 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,82 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,82 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,82 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,82 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,83 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,83 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,83 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,83 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,83 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:23,83 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,83 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,83 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,83 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,83 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,83 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,84 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,84 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,84 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,84 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,84 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:23,84 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,84 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,84 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,84 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,85 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:59:23,85 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,85 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,85 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:23,85 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:23,85 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,85 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,85 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,85 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:59:23,85 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,86 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,86 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,86 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,86 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:23,86 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,86 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,86 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,86 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,86 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,86 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,87 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:59:23,87 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,87 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,87 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,87 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,87 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,87 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,87 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,87 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,87 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,87 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:59:23,88 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,88 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,88 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,88 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,88 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,88 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,88 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:23,88 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,88 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,88 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,88 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,89 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,89 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,89 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,89 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,89 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,89 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,89 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,89 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,89 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,89 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,89 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,90 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,90 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:23,90 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,90 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,90 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,90 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,90 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,90 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,90 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,90 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,90 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,90 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,91 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:23,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,91 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,91 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,92 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,92 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,92 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,92 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,92 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,92 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,92 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,92 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,92 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,92 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,92 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,93 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:23,93 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,93 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,93 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:23,93 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,93 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,93 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,93 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,93 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,93 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,93 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,93 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,94 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,94 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,94 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,94 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,94 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,94 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,94 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:59:23,94 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,94 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,94 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,94 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:59:23,95 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,95 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,95 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,95 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,95 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,95 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,95 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,95 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,95 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,95 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,95 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,96 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:23,96 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,96 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,96 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,96 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,96 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,96 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,96 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,96 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,96 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,96 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:23,97 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,97 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,97 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:23,97 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:23,97 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,97 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,97 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,97 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:23,97 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,98 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,98 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,98 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,98 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,98 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,98 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,98 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,98 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,99 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,99 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,99 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,99 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,99 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,99 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,99 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:23,99 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,99 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,99 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,100 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:59:23,100 matplotlib.font_manager DEBUG findfont: Matching DejaVu Sans Mono:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans Mono ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf') with score of 0.050000.
2022-01-04 12:59:23,101 matplotlib.font_manager DEBUG findfont: Matching DejaVu Sans Display:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:59:23,101 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,101 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,101 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,101 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,101 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,101 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,101 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:23,102 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,102 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,102 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,102 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,102 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,102 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,102 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,102 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,102 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,103 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,103 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,103 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,103 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,103 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,103 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,103 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,103 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,103 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,103 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,103 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,104 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,104 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,104 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,104 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,104 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,104 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,104 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,104 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,104 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,105 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,105 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,105 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,105 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,105 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,105 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,105 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,105 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,105 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,105 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,105 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,106 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,106 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,106 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,106 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,106 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,106 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,106 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,106 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,106 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,106 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,107 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,107 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,107 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,107 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,107 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,107 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,107 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,107 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,107 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,107 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,107 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,107 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,108 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,108 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,108 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,108 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,108 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,108 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,108 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,108 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,108 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,108 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,109 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,109 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,109 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:23,109 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,109 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,109 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:23,109 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,109 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,109 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,109 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,109 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:23,109 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,110 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,110 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,110 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,110 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,110 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,110 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,110 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,110 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,110 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,110 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,111 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,111 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,111 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,111 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,111 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,111 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,111 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,111 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,111 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,111 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,111 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,112 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:23,112 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,112 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,112 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,112 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,112 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,112 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,112 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,112 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,112 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,112 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,113 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:23,113 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,113 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,113 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,113 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,113 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,113 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,113 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,113 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,113 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,113 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:59:23,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,114 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:23,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:23,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:23,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:23,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:59:23,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,116 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,116 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,116 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,116 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,116 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,116 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,116 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,116 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,116 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,116 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,117 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,117 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:23,117 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,117 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,117 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,117 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,117 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,117 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:23,117 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,118 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,118 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,118 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,118 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,118 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,118 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,118 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,118 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,118 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,118 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,118 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,118 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:23,119 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,119 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,119 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,119 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,119 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,119 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,119 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,119 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,119 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,120 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,120 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,120 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,120 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,120 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,120 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,120 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,120 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,120 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,120 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,121 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,121 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,121 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,121 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,121 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,121 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,121 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,121 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:23,121 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,121 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,121 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,121 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,122 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,122 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,122 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,122 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,122 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,122 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,122 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:23,122 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,122 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,122 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,122 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,123 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:59:23,123 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,123 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,123 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:23,123 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:23,123 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,123 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,123 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,123 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:59:23,123 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,123 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,123 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:23,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:59:23,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,125 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,125 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,125 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,125 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,125 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,125 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,125 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,125 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:59:23,125 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,125 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,125 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,126 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,126 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,126 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,126 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:23,126 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,126 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,126 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,126 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,126 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,126 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,126 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,127 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,127 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,127 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,127 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,127 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,127 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,127 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,127 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,127 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,127 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:23,127 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,127 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,128 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,128 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,128 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,128 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,128 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,128 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,128 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,128 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,128 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,128 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,129 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,129 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:23,129 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,129 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,129 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,129 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,129 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,129 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,129 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,129 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,129 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,130 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,130 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,130 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,130 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,130 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,130 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,130 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,130 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,130 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,130 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:23,130 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,131 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,131 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:23,131 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,131 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,131 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,131 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,131 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,131 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,131 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,131 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,131 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,132 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,132 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,132 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,132 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,132 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,132 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:59:23,132 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,132 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,132 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,132 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:59:23,132 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,133 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,133 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,133 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,133 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,133 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,133 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,133 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,133 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,133 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,133 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,133 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:23,134 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,134 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,134 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,134 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,134 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,134 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,134 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,134 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,134 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,135 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:23,135 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,135 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,135 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:23,135 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:23,135 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,135 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,135 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,135 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:23,136 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,136 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,136 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,136 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,136 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,136 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,136 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,136 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,136 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,136 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,137 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,137 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,137 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,137 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,137 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,137 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:23,137 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,137 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,137 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,137 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,138 matplotlib.font_manager DEBUG findfont: Matching DejaVu Sans Display:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans Display ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf') with score of 0.050000.
2022-01-04 12:59:23,554 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F2' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf'
2022-01-04 12:59:23,559 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:59:23,559 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,559 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:23,559 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,559 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-01-04 12:59:23,560 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,560 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,560 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,560 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,560 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,560 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,560 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,560 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,560 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-01-04 12:59:23,560 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,561 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:59:23,561 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,561 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,561 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,561 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,561 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,561 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,561 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,561 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,561 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,562 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,562 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,562 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,562 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,562 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,562 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,562 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,562 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,562 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,562 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,562 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,563 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,563 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,563 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,563 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,563 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,563 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,563 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,563 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,563 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,563 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,564 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,564 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,564 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,564 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,564 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,564 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,564 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,564 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,564 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,565 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,565 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,565 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,565 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,565 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,565 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,565 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,565 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,565 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,565 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,566 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,566 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,566 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,566 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,566 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,566 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,566 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,566 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,566 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,566 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,566 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,567 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,567 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,567 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,567 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,567 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,567 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,567 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:23,567 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,568 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,568 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:23,568 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,568 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,568 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,568 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,568 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:23,568 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,568 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,569 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,569 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,569 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,569 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,569 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,569 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,569 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,569 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,569 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,570 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,570 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,571 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:23,571 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,571 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,571 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,571 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,571 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,571 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,571 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,571 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,571 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,572 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,572 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:23,572 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,572 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,572 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,572 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,572 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,572 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,572 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,572 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,573 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,573 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,573 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,573 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,573 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:59:23,573 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,573 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,573 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,573 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,573 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,574 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,574 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:23,574 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,574 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,574 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,574 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,574 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,574 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:23,574 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,575 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,575 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:23,575 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:23,575 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,575 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:59:23,575 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,575 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,575 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,575 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,575 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,576 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,576 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,576 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,576 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,576 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,576 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,576 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,576 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:23,576 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,576 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,577 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,577 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,577 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,577 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:23,577 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,577 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,577 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,577 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,577 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,577 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,578 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,578 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,578 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,578 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,578 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,578 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,578 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:23,578 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,578 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,579 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,579 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,579 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,579 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,579 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,579 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,579 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,579 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:59:23,579 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,579 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,580 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,580 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,580 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,580 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,580 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,580 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,580 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,580 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,580 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,581 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,581 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,581 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,581 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,581 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,581 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:23,581 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,581 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,581 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,581 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,581 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,582 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,582 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,582 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,582 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,582 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,582 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:23,582 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,582 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,582 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,582 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,582 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:59:23,583 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,583 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,583 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:23,583 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:23,583 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,583 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,583 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,583 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:59:23,583 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,584 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,584 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,584 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,584 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:23,584 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,584 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,584 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,584 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,584 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,585 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,585 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:59:23,585 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,585 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,585 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,585 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,585 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,585 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,586 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,586 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,586 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,586 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:59:23,586 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,586 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,586 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,586 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,586 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,586 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,586 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:23,587 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,587 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,587 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,587 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,587 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,587 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,587 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,587 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,587 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,587 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,587 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,588 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,588 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,588 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,588 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,588 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,588 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:23,588 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,588 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,588 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,589 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,589 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,589 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,589 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,589 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,589 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,589 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,589 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,589 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,589 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,590 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:23,590 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,590 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,590 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,590 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,590 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,590 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,590 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,590 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,590 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,591 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:23,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,591 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,591 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,591 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:23,592 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,592 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,592 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:23,592 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,592 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,592 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,592 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,592 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,592 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,592 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,593 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,593 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,593 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,593 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,593 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,593 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,593 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,593 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:59:23,593 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,593 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,594 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,594 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:59:23,594 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,594 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,594 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,594 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,594 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,594 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,594 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,594 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,595 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:23,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,595 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,595 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,596 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,596 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,596 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:23,596 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,596 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,596 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:23,596 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:23,596 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,596 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,596 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,597 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:23,597 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,597 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,597 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:23,597 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,597 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:23,597 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,597 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,597 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,597 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:23,598 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,598 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:23,598 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,598 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:23,598 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,598 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,598 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:23,599 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,599 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:23,599 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,599 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:23,599 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-01-04 12:59:24,941 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf.
2022-01-04 12:59:24,941 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:59:24,953 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf.
2022-01-04 12:59:24,953 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:59:26,711 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:26,711 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:59:26,730 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:26,730 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:59:26,731 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:26,731 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2022-01-04 12:59:26,973 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F1' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf'
2022-01-04 12:59:26,996 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:26,996 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:59:26,998 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:26,998 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:59:26,999 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:26,999 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2022-01-04 12:59:27,74 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F2' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf'
2022-01-04 12:59:27,91 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:59:27,91 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:27,122 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:59:27,122 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:27,123 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:59:27,123 matplotlib.ticker DEBUG ticklocs array([2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:59:27,576 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:59:27,576 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:27,578 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:59:27,578 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:27,579 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:59:27,579 matplotlib.ticker DEBUG ticklocs array([2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:59:27,675 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:59:27,675 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:27,708 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:59:27,708 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:27,709 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:59:27,709 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:59:28,112 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:59:28,112 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:28,114 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:59:28,114 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:28,115 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:59:28,115 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:59:28,217 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:59:28,217 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:59:28,237 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:59:28,237 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:59:28,238 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:59:28,238 matplotlib.ticker DEBUG ticklocs array([], dtype=float64)
2022-01-04 12:59:28,249 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:59:28,249 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:59:28,250 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:59:28,250 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:59:28,251 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:59:28,251 matplotlib.ticker DEBUG ticklocs array([], dtype=float64)
2022-01-04 12:59:28,311 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:59:28,311 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:28,331 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:59:28,331 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:28,332 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:59:28,332 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:28,589 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:59:28,589 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:28,591 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:59:28,591 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:28,592 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:59:28,592 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:28,679 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:59:28,679 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:28,703 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:59:28,703 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:28,704 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:59:28,704 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:28,997 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:59:28,998 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:28,999 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:59:28,999 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:29,1 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:59:29,1 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:29,89 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:59:29,90 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:29,115 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:59:29,115 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:29,116 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:59:29,116 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:29,410 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:59:29,410 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:29,412 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:59:29,412 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:29,413 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:59:29,413 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:29,664 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:59:29,664 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:29,694 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:59:29,694 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:29,695 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:59:29,695 matplotlib.ticker DEBUG ticklocs array([2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:30,70 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:59:30,70 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:30,73 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:59:30,73 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:30,74 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:59:30,74 matplotlib.ticker DEBUG ticklocs array([2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:30,174 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:59:30,174 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:59:30,202 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:59:30,202 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:59:30,203 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:59:30,233 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:59:30,233 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:59:30,235 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:59:30,236 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:59:30,237 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:59:30,308 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:59:30,308 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:59:30,337 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:59:30,337 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:59:30,338 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:59:30,338 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:30,668 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:59:30,669 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:59:30,671 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:59:30,671 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:59:30,672 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:59:30,672 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:30,772 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:59:30,772 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:59:30,787 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:59:30,787 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:59:30,788 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:59:30,788 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2022-01-04 12:59:30,960 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:59:30,960 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:59:30,962 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:59:30,962 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:59:30,962 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:59:30,963 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2022-01-04 12:59:31,34 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:59:31,34 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:31,58 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:59:31,59 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:31,59 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:59:31,60 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:31,348 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:59:31,348 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:31,350 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:59:31,350 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:31,351 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:59:31,351 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:31,454 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:59:31,454 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:59:31,464 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:59:31,465 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:59:31,465 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:59:31,465 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2022-01-04 12:59:31,684 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:59:31,685 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:59:31,686 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:59:31,686 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:59:31,687 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:59:31,687 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2022-01-04 12:59:31,763 matplotlib.ticker DEBUG vmin 0.0003710217466768338 vmax 0.0019405870584376617
2022-01-04 12:59:31,764 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:59:31,774 matplotlib.ticker DEBUG vmin 0.0003710217466768338 vmax 0.0019405870584376617
2022-01-04 12:59:31,774 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:59:31,777 matplotlib.ticker DEBUG vmin 0.0003710217466768338 vmax 0.0019405870584376617
2022-01-04 12:59:31,777 matplotlib.ticker DEBUG ticklocs array([2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01])
2022-01-04 12:59:31,950 matplotlib.ticker DEBUG vmin 0.0003710217466768338 vmax 0.0019405870584376617
2022-01-04 12:59:31,950 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:59:31,952 matplotlib.ticker DEBUG vmin 0.0003710217466768338 vmax 0.0019405870584376617
2022-01-04 12:59:31,952 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:59:31,953 matplotlib.ticker DEBUG vmin 0.0003710217466768338 vmax 0.0019405870584376617
2022-01-04 12:59:31,953 matplotlib.ticker DEBUG ticklocs array([2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01])
2022-01-04 12:59:32,19 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf.
2022-01-04 12:59:32,37 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:59:32,53 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf.
2022-01-04 12:59:32,54 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:59:32,99 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:32,99 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:59:32,101 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:32,101 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:59:32,102 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:32,102 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2022-01-04 12:59:32,178 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:32,178 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:59:32,180 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:32,180 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:59:32,180 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:32,181 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2022-01-04 12:59:32,245 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:59:32,245 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:32,247 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:59:32,247 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:32,248 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:59:32,248 matplotlib.ticker DEBUG ticklocs array([2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:59:32,408 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:59:32,408 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:32,410 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:59:32,410 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:32,411 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:59:32,411 matplotlib.ticker DEBUG ticklocs array([2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:59:32,477 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:59:32,478 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:32,480 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:59:32,480 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:32,481 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:59:32,481 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:59:32,560 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:59:32,561 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:32,563 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:59:32,563 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:32,564 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:59:32,564 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:59:32,639 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:59:32,639 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:59:32,640 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:59:32,641 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:59:32,641 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:59:32,642 matplotlib.ticker DEBUG ticklocs array([], dtype=float64)
2022-01-04 12:59:32,649 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:59:32,649 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:59:32,651 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:59:32,651 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:59:32,652 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:59:32,652 matplotlib.ticker DEBUG ticklocs array([], dtype=float64)
2022-01-04 12:59:32,686 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:59:32,686 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:32,688 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:59:32,688 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:32,689 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:59:32,689 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:32,740 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:59:32,740 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:32,742 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:59:32,742 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:32,742 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:59:32,743 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:32,796 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:59:32,796 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:32,798 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:59:32,798 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:32,799 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:59:32,799 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:32,850 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:59:32,850 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:32,852 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:59:32,852 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:32,853 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:59:32,853 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:32,914 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:59:32,914 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:32,916 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:59:32,916 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:32,917 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:59:32,917 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:32,969 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:59:32,969 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:32,971 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:59:32,971 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:32,972 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:59:32,972 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:33,35 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:59:33,35 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:33,37 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:59:33,37 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:33,38 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:59:33,38 matplotlib.ticker DEBUG ticklocs array([2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:33,122 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:59:33,122 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:33,124 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:59:33,124 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:33,125 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:59:33,125 matplotlib.ticker DEBUG ticklocs array([2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:33,193 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:59:33,194 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:59:33,195 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:59:33,195 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:59:33,196 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:59:33,221 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:59:33,221 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:59:33,223 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:59:33,223 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:59:33,224 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:59:33,262 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:59:33,263 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:59:33,264 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:59:33,264 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:59:33,265 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:59:33,265 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:33,327 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:59:33,328 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:59:33,329 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:59:33,329 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:59:33,330 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:59:33,330 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:33,394 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:59:33,394 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:59:33,396 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:59:33,396 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:59:33,396 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:59:33,396 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2022-01-04 12:59:33,417 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:59:33,417 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:59:33,418 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:59:33,418 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:59:33,419 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:59:33,419 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2022-01-04 12:59:33,463 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:59:33,463 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:33,464 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:59:33,465 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:33,465 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:59:33,466 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:33,517 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:59:33,517 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:33,519 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:59:33,519 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:33,520 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:59:33,520 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:33,587 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:59:33,587 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:59:33,589 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:59:33,589 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:59:33,590 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:59:33,590 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2022-01-04 12:59:33,683 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:59:33,683 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:59:33,685 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:59:33,685 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:59:33,686 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:59:33,686 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2022-01-04 12:59:33,734 matplotlib.ticker DEBUG vmin 0.0003710217466768338 vmax 0.0019405870584376617
2022-01-04 12:59:33,734 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:59:33,736 matplotlib.ticker DEBUG vmin 0.0003710217466768338 vmax 0.0019405870584376617
2022-01-04 12:59:33,737 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:59:33,737 matplotlib.ticker DEBUG vmin 0.0003710217466768338 vmax 0.0019405870584376617
2022-01-04 12:59:33,738 matplotlib.ticker DEBUG ticklocs array([2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01])
2022-01-04 12:59:33,789 matplotlib.ticker DEBUG vmin 0.0003710217466768338 vmax 0.0019405870584376617
2022-01-04 12:59:33,789 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:59:33,790 matplotlib.ticker DEBUG vmin 0.0003710217466768338 vmax 0.0019405870584376617
2022-01-04 12:59:33,791 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:59:33,791 matplotlib.ticker DEBUG vmin 0.0003710217466768338 vmax 0.0019405870584376617
2022-01-04 12:59:33,791 matplotlib.ticker DEBUG ticklocs array([2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01])
2022-01-04 12:59:35,148 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:35,148 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:59:35,170 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:35,170 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:59:35,171 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:35,171 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2022-01-04 12:59:35,410 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F1' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf'
2022-01-04 12:59:35,432 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:35,433 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:59:35,434 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:35,434 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:59:35,435 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:35,436 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2022-01-04 12:59:35,513 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F2' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf'
2022-01-04 12:59:35,613 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:59:35,613 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:35,647 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:59:35,647 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:35,648 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:59:35,648 matplotlib.ticker DEBUG ticklocs array([2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:59:36,121 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:59:36,121 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:36,123 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:59:36,123 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:36,124 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:59:36,124 matplotlib.ticker DEBUG ticklocs array([2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:59:36,395 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:59:36,395 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:36,441 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:59:36,441 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:36,443 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:59:36,443 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:59:36,844 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:59:36,844 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:36,846 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:59:36,846 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:36,847 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:59:36,847 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:59:36,977 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:59:36,977 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:59:36,997 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:59:36,997 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:59:36,998 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:59:36,998 matplotlib.ticker DEBUG ticklocs array([], dtype=float64)
2022-01-04 12:59:37,11 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:59:37,11 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:59:37,13 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:59:37,13 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:59:37,14 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:59:37,14 matplotlib.ticker DEBUG ticklocs array([], dtype=float64)
2022-01-04 12:59:37,111 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:59:37,111 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:37,133 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:59:37,133 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:37,134 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:59:37,134 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:37,394 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:59:37,395 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:37,396 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:59:37,396 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:37,397 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:59:37,397 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:37,512 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:59:37,512 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:37,536 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:59:37,536 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:37,537 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:59:37,537 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:37,835 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:59:37,835 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:37,837 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:59:37,837 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:37,838 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:59:37,838 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:37,955 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:59:37,955 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:37,980 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:59:37,980 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:37,981 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:59:37,981 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:38,278 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:59:38,278 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:38,280 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:59:38,280 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:38,281 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:59:38,281 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:38,399 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:59:38,399 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:38,429 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:59:38,429 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:38,430 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:59:38,430 matplotlib.ticker DEBUG ticklocs array([2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:38,810 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:59:38,810 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:38,812 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:59:38,812 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:38,813 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:59:38,813 matplotlib.ticker DEBUG ticklocs array([2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:38,947 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:59:38,947 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:59:38,975 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:59:38,975 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:59:38,976 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:59:39,7 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:59:39,7 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:59:39,9 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:59:39,9 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:59:39,10 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:59:39,115 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:59:39,116 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:59:39,143 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:59:39,143 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:59:39,144 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:59:39,144 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:39,476 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:59:39,476 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:59:39,478 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:59:39,478 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:59:39,479 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:59:39,479 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:39,605 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:59:39,605 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:59:39,620 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:59:39,620 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:59:39,621 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:59:39,621 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2022-01-04 12:59:39,797 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:59:39,797 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:59:39,799 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:59:39,799 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:59:39,800 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:59:39,800 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2022-01-04 12:59:39,896 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:59:39,897 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:39,921 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:59:39,921 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:39,922 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:59:39,922 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:40,217 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:59:40,217 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:40,219 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:59:40,219 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:40,220 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:59:40,220 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:40,352 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:59:40,352 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:59:40,363 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:59:40,363 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:59:40,364 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:59:40,364 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2022-01-04 12:59:40,581 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:59:40,581 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:59:40,583 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:59:40,583 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:59:40,584 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:59:40,584 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2022-01-04 12:59:40,691 matplotlib.ticker DEBUG vmin 0.0002742923480285484 vmax 0.001968702385907597
2022-01-04 12:59:40,691 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:59:40,702 matplotlib.ticker DEBUG vmin 0.0002742923480285484 vmax 0.001968702385907597
2022-01-04 12:59:40,702 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:59:40,703 matplotlib.ticker DEBUG vmin 0.0002742923480285484 vmax 0.001968702385907597
2022-01-04 12:59:40,703 matplotlib.ticker DEBUG ticklocs array([2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01])
2022-01-04 12:59:40,897 matplotlib.ticker DEBUG vmin 0.0002742923480285484 vmax 0.001968702385907597
2022-01-04 12:59:40,897 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:59:40,899 matplotlib.ticker DEBUG vmin 0.0002742923480285484 vmax 0.001968702385907597
2022-01-04 12:59:40,899 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:59:40,900 matplotlib.ticker DEBUG vmin 0.0002742923480285484 vmax 0.001968702385907597
2022-01-04 12:59:40,900 matplotlib.ticker DEBUG ticklocs array([2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01])
2022-01-04 12:59:40,987 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf.
2022-01-04 12:59:40,987 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:59:40,993 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf.
2022-01-04 12:59:40,993 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:59:41,58 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:41,58 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:59:41,60 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:41,60 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:59:41,61 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:41,61 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2022-01-04 12:59:41,142 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:41,143 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:59:41,144 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:41,144 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:59:41,145 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:41,145 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2022-01-04 12:59:41,285 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:59:41,285 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:41,287 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:59:41,287 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:41,288 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:59:41,288 matplotlib.ticker DEBUG ticklocs array([2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:59:41,449 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:59:41,450 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:41,452 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:59:41,452 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:41,453 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:59:41,453 matplotlib.ticker DEBUG ticklocs array([2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:59:41,547 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:59:41,548 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:41,550 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:59:41,550 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:41,552 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:59:41,552 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:59:41,630 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:59:41,630 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:41,632 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:59:41,632 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:59:41,633 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:59:41,634 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:59:41,733 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:59:41,734 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:59:41,736 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:59:41,736 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:59:41,737 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:59:41,737 matplotlib.ticker DEBUG ticklocs array([], dtype=float64)
2022-01-04 12:59:41,744 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:59:41,744 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:59:41,746 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:59:41,746 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:59:41,747 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:59:41,747 matplotlib.ticker DEBUG ticklocs array([], dtype=float64)
2022-01-04 12:59:41,810 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:59:41,810 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:41,811 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:59:41,811 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:41,812 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:59:41,812 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:41,859 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:59:41,859 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:41,860 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:59:41,861 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:41,861 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:59:41,861 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:41,945 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:59:41,945 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:41,946 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:59:41,947 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:41,947 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:59:41,947 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:42,2 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:59:42,2 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:42,4 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:59:42,4 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:42,5 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:59:42,5 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:42,93 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:59:42,94 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:42,95 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:59:42,96 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:42,97 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:59:42,97 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:42,154 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:59:42,154 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:42,156 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:59:42,156 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:42,157 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:59:42,157 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:42,240 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:59:42,240 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:42,242 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:59:42,242 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:42,243 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:59:42,243 matplotlib.ticker DEBUG ticklocs array([2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:42,516 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:59:42,517 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:42,519 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:59:42,519 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:59:42,520 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:59:42,520 matplotlib.ticker DEBUG ticklocs array([2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:42,621 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:59:42,621 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:59:42,623 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:59:42,623 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:59:42,624 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:59:42,662 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:59:42,662 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:59:42,664 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:59:42,664 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:59:42,665 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:59:42,733 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:59:42,734 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:59:42,736 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:59:42,736 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:59:42,737 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:59:42,737 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:42,799 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:59:42,799 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:59:42,802 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:59:42,802 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:59:42,802 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:59:42,803 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:42,898 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:59:42,898 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:59:42,900 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:59:42,900 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:59:42,901 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:59:42,901 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2022-01-04 12:59:42,923 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:59:42,923 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:59:42,924 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:59:42,924 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:59:42,925 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:59:42,925 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2022-01-04 12:59:42,997 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:59:42,998 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:42,999 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:59:43,0 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:43,1 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:59:43,1 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:43,57 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:59:43,57 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:43,59 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:59:43,59 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:59:43,60 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:59:43,60 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:59:43,157 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:59:43,157 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:59:43,159 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:59:43,159 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:59:43,160 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:59:43,160 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2022-01-04 12:59:43,254 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:59:43,254 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:59:43,256 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:59:43,256 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:59:43,257 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:59:43,257 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2022-01-04 12:59:43,330 matplotlib.ticker DEBUG vmin 0.0002742923480285484 vmax 0.001968702385907597
2022-01-04 12:59:43,330 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:59:43,332 matplotlib.ticker DEBUG vmin 0.0002742923480285484 vmax 0.001968702385907597
2022-01-04 12:59:43,332 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:59:43,333 matplotlib.ticker DEBUG vmin 0.0002742923480285484 vmax 0.001968702385907597
2022-01-04 12:59:43,333 matplotlib.ticker DEBUG ticklocs array([2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01])
2022-01-04 12:59:43,405 matplotlib.ticker DEBUG vmin 0.0002742923480285484 vmax 0.001968702385907597
2022-01-04 12:59:43,405 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:59:43,407 matplotlib.ticker DEBUG vmin 0.0002742923480285484 vmax 0.001968702385907597
2022-01-04 12:59:43,407 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:59:43,407 matplotlib.ticker DEBUG vmin 0.0002742923480285484 vmax 0.001968702385907597
2022-01-04 12:59:43,408 matplotlib.ticker DEBUG ticklocs array([2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01])
2022-01-04 12:59:43,561 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:43,561 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:59:43,582 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:43,582 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:59:43,584 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:43,584 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2022-01-04 12:59:43,852 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F1' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf'
2022-01-04 12:59:43,874 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:43,874 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:59:43,876 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:43,876 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:59:43,876 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:43,877 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2022-01-04 12:59:43,965 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F2' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf'
2022-01-04 12:59:43,992 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf.
2022-01-04 12:59:43,993 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:59:43,999 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf.
2022-01-04 12:59:43,999 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:59:44,23 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:44,23 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:59:44,25 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:44,25 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:59:44,26 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:44,26 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2022-01-04 12:59:44,112 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:44,112 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:59:44,114 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:44,114 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:59:44,116 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:59:44,116 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2022-01-04 12:59:44,316 matplotlib.ticker DEBUG vmin 0.8348143654846168 vmax 44.321230598998106
2022-01-04 12:59:44,317 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:59:44,333 matplotlib.ticker DEBUG vmin 0.8348143654846168 vmax 44.321230598998106
2022-01-04 12:59:44,333 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:59:44,334 matplotlib.ticker DEBUG vmin 0.8348143654846168 vmax 44.321230598998106
2022-01-04 12:59:44,334 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2022-01-04 12:59:44,546 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F1' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf'
2022-01-04 12:59:44,561 matplotlib.ticker DEBUG vmin 0.8348143654846168 vmax 44.321230598998106
2022-01-04 12:59:44,561 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:59:44,563 matplotlib.ticker DEBUG vmin 0.8348143654846168 vmax 44.321230598998106
2022-01-04 12:59:44,563 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:59:44,564 matplotlib.ticker DEBUG vmin 0.8348143654846168 vmax 44.321230598998106
2022-01-04 12:59:44,564 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2022-01-04 12:59:44,637 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F2' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf'
2022-01-04 12:59:44,655 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf.
2022-01-04 12:59:44,655 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:59:44,661 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf.
2022-01-04 12:59:44,661 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:59:44,684 matplotlib.ticker DEBUG vmin 0.8348143654846168 vmax 44.321230598998106
2022-01-04 12:59:44,685 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:59:44,687 matplotlib.ticker DEBUG vmin 0.8348143654846168 vmax 44.321230598998106
2022-01-04 12:59:44,687 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:59:44,688 matplotlib.ticker DEBUG vmin 0.8348143654846168 vmax 44.321230598998106
2022-01-04 12:59:44,689 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2022-01-04 12:59:44,744 matplotlib.ticker DEBUG vmin 0.8348143654846168 vmax 44.321230598998106
2022-01-04 12:59:44,744 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:59:44,746 matplotlib.ticker DEBUG vmin 0.8348143654846168 vmax 44.321230598998106
2022-01-04 12:59:44,746 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:59:44,747 matplotlib.ticker DEBUG vmin 0.8348143654846168 vmax 44.321230598998106
2022-01-04 12:59:44,747 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2022-01-04 12:59:45,57 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=6.0.
2022-01-04 12:59:45,57 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,58 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:45,58 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,58 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-01-04 12:59:45,58 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,58 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,58 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,58 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,58 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,58 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,58 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,59 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,59 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-01-04 12:59:45,59 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,59 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:59:45,59 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,59 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,59 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,59 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,59 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,59 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,60 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,60 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,60 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,60 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,60 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,60 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,60 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,60 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,60 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,60 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,61 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,61 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,61 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,61 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,61 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,61 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,61 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,61 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,61 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,61 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,62 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,62 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,62 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,62 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,62 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,62 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,62 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,62 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,62 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,62 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,62 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,63 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,63 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,63 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,63 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,63 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,63 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,63 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,63 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,63 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,63 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,64 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,64 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,64 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,64 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,64 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,64 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,64 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,64 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,64 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,64 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,65 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,65 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,65 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,65 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,65 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,65 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,65 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,65 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,65 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,65 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:45,66 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,66 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,66 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:45,66 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,66 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,66 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,66 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,66 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:45,66 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,67 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,67 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,67 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,67 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,67 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,67 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,67 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,67 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,67 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,67 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,68 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,69 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,69 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,69 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,69 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:45,69 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,69 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,69 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,69 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,69 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,70 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:45,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:59:45,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,72 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:45,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:45,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:45,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:45,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:59:45,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,74 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,74 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,74 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,74 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,74 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,74 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,74 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,74 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,74 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,74 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:45,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,75 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:45,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,76 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:45,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,77 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,77 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,77 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,77 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,77 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,77 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,77 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,77 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:59:45,77 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,77 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,78 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,78 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,78 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,78 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,78 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,78 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,78 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,78 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,78 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,78 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,78 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,79 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,79 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,79 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,79 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:45,79 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,79 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,79 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,79 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,79 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,79 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,80 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,80 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,80 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,80 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,80 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:45,80 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,80 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,80 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,80 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,80 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:59:45,81 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,81 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,81 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:45,81 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:45,81 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,81 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,81 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,81 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:59:45,81 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,81 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,82 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,82 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,82 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:45,82 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,82 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,82 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,82 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,82 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,82 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,82 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:59:45,83 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,83 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,83 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,83 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,83 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,83 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,83 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,83 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,83 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,84 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:59:45,84 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,84 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,84 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,84 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,84 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,84 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,84 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:45,84 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,85 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,85 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,85 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,85 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,85 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,85 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,85 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,85 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,85 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,86 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,86 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,86 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,86 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,86 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,86 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,86 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:45,86 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,86 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,87 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,87 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,87 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,87 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,87 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,87 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,87 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,87 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,87 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,87 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,87 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,88 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:45,88 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,88 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,88 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,88 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,88 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,88 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,88 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,88 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,88 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,89 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,89 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:45,89 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,89 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,89 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,89 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,89 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,89 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,89 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,89 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:45,89 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,90 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,90 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:45,90 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,90 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,90 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,90 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,90 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,90 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,90 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,90 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,91 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,91 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:59:45,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,91 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:59:45,92 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,92 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,92 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,92 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,92 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,92 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,92 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,92 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,92 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,92 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,93 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,93 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:45,93 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,93 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,93 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,93 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,93 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,93 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,93 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,93 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,94 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,94 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:45,94 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,94 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,94 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:45,94 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:45,94 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,94 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,94 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,94 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:45,94 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,95 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,95 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,95 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,95 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,95 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,95 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,95 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,95 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,95 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,95 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,96 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,96 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,96 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,96 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,96 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:45,96 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,96 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,96 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,96 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,96 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=6.0 to DejaVu Sans ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-01-04 12:59:45,704 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=3.0.
2022-01-04 12:59:45,704 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,704 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:45,705 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,705 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-01-04 12:59:45,705 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,705 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,705 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,705 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,705 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,705 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,705 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,706 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,706 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-01-04 12:59:45,706 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,706 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:59:45,706 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,706 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,706 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,706 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,706 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,706 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,707 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,707 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,707 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,707 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,707 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,707 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,707 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,707 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,707 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,708 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,708 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,708 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,708 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,708 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,708 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,708 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,708 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,708 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,708 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,709 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,709 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,709 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,709 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,709 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,710 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,711 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,711 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,711 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,711 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,713 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:45,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,713 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,713 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:45,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,714 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:45,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,714 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,714 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,715 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,715 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,716 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:45,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,716 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,717 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,717 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,717 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,717 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,717 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,717 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,717 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,717 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:45,717 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,717 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:59:45,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,719 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:45,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:45,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:45,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:45,721 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,721 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:59:45,721 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,721 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,721 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,721 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,721 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,721 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,721 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,721 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:45,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,722 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:45,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,723 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:45,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,724 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,724 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,724 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,725 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,725 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,725 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,725 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:59:45,725 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,725 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,725 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,725 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,725 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,725 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,725 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,726 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,726 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,726 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,726 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,726 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,726 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,726 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,726 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,726 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,726 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:45,726 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,727 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,727 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,727 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,727 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,727 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,727 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,727 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,727 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,727 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,727 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:45,728 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,728 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,728 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,728 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,728 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:59:45,728 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,728 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,728 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:45,728 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:45,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:59:45,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,729 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,729 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:45,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:59:45,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,730 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:59:45,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,731 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,732 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:45,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,732 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,732 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,733 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,733 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,733 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:45,734 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,734 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,734 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,734 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,735 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:45,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,735 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,736 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,736 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,736 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:45,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,737 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,737 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,737 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:45,737 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,737 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:45,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,738 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,738 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,738 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:59:45,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,739 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:59:45,739 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,739 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,740 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,740 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:45,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,741 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,741 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:45,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,741 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:45,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:45,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,742 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:45,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:45,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:45,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:45,743 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:45,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:45,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:45,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:45,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,744 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:45,744 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=3.0 to DejaVu Sans ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-01-04 12:59:46,4 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=4.0.
2022-01-04 12:59:46,5 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,5 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:46,5 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,5 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-01-04 12:59:46,5 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,5 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,6 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,6 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,6 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,6 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,6 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,6 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,6 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-01-04 12:59:46,6 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:46,6 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:59:46,6 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,7 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,7 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,7 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,7 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,7 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:46,7 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,7 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,7 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,7 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,7 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,8 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,8 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,8 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,8 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,8 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:46,8 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:46,8 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,8 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,9 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,9 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,9 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,9 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,9 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,9 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,9 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,9 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,9 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:46,9 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,9 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,10 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,10 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,10 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:46,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,11 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:46,11 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,11 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:46,11 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:46,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:46,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,13 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:46,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:46,13 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,13 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:46,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,14 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:46,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:46,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,14 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:46,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,15 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,15 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,16 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,16 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:46,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,17 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,17 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,17 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:46,17 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:46,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,19 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,19 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,19 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,19 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,19 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,19 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:59:46,19 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,19 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,19 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,19 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,19 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,20 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,20 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:46,20 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,20 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,20 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,20 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,20 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,20 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:46,20 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:46,20 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,21 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:46,21 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:46,21 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:46,21 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:59:46,21 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,21 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,21 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,21 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,21 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,21 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,22 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,22 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,22 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,22 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,22 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,22 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,22 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:46,22 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,22 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,22 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:46,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,24 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,24 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:46,24 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,24 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:46,24 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,24 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:46,24 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,24 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,24 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,24 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,25 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,25 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,25 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,25 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,25 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,25 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:59:46,25 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,25 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,25 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,25 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,25 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,26 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,26 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,26 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,26 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,26 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:46,26 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,26 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,26 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:46,26 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,26 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,26 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,27 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:46,27 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,27 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,27 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,27 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,27 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,27 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:46,27 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,27 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,27 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:46,28 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,28 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:46,28 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,28 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,28 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,28 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,28 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:59:46,28 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,28 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,28 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:46,28 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:46,29 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,29 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,29 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,29 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:59:46,29 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,29 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,29 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,29 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:46,29 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:46,29 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,30 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,30 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:46,30 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,30 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,30 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:46,30 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:59:46,30 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,30 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:46,30 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,30 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,30 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:46,31 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,31 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,31 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,31 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,31 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:59:46,31 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,31 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,31 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,31 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,31 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:46,31 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,32 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:46,32 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,32 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,32 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,32 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,32 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,32 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,32 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:46,32 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,32 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,33 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,33 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,33 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,33 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,33 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,33 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,33 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:46,33 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:46,34 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,34 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:46,34 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:46,34 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,34 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,35 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,35 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,35 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,35 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,35 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,35 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:46,35 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,36 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,36 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:46,36 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,36 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,36 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,36 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,36 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,36 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,36 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,37 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,37 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,37 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,37 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:46,37 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,37 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,37 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,37 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,37 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,37 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,38 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,38 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:46,38 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,38 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:46,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,38 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:46,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,39 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,39 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:59:46,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,40 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,40 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:59:46,40 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,40 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,40 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,40 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,40 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,40 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,40 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,41 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:46,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:46,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,41 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,41 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,42 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,42 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:46,42 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,42 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:46,42 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,42 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,42 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:46,42 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:46,42 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,42 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,43 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:46,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:46,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:46,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:46,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,43 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:46,44 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,44 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:46,44 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:46,44 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:46,44 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,44 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,44 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:46,44 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,44 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:46,44 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,45 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:46,45 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=4.0 to DejaVu Sans ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-01-04 12:59:46,326 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F1' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf'
2022-01-04 12:59:46,728 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf.
2022-01-04 12:59:46,729 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:59:48,749 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F1' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf'
2022-01-04 12:59:49,271 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf.
2022-01-04 12:59:49,271 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:59:50,271 matplotlib.colorbar DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fd5c8e75e50>
2022-01-04 12:59:50,271 matplotlib.colorbar DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fd5c8e75e50> on colorbar
2022-01-04 12:59:50,271 matplotlib.colorbar DEBUG Setting pcolormesh
2022-01-04 12:59:50,321 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F1' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf'
2022-01-04 12:59:50,516 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf.
2022-01-04 12:59:50,516 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:59:51,53 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,55 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,56 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,57 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,58 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,59 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,60 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,61 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,62 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,63 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,64 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,65 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,122 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,124 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,125 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,126 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,127 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,128 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,128 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,129 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,130 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,131 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,132 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,133 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,203 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,205 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,208 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,209 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,210 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,211 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,212 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,213 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,214 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,215 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,217 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,218 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,277 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,279 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,280 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,281 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,281 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,282 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,284 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,285 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,286 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,287 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,288 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,289 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,344 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,346 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,347 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,348 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,349 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,351 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,352 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,353 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,355 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,356 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,357 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,358 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,415 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,418 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,419 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,420 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,421 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,422 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,423 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,424 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,425 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,426 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,427 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,428 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,486 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,488 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,489 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,490 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,491 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,492 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,493 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,494 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,495 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,496 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,497 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,498 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,556 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,558 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,559 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,560 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,561 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,562 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,563 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,564 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,565 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,567 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,568 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,569 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,627 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,629 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,629 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,631 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,631 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,633 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,634 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,635 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,636 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,637 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,638 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,639 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,697 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,699 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,700 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,701 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,702 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,703 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,704 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,705 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,706 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,707 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,708 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,709 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,769 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,771 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,771 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,773 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,773 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,774 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,775 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,776 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,777 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,778 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,779 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,780 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,838 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,840 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,841 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,842 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,843 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,844 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,845 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,846 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,847 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,848 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,849 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,850 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,911 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,913 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,914 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,915 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,916 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,917 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,918 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,919 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,920 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,921 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,922 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:51,923 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:52,140 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:52,142 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:52,143 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:52,144 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:52,145 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:52,146 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:52,147 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:52,148 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:52,149 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:52,150 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:52,151 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:52,152 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:59:52,172 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F1' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf'
2022-01-04 12:59:53,272 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf.
2022-01-04 12:59:53,272 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:59:54,598 matplotlib.colorbar DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fd5bac17520>
2022-01-04 12:59:54,599 matplotlib.colorbar DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fd5bac17520> on colorbar
2022-01-04 12:59:54,600 matplotlib.colorbar DEBUG Setting pcolormesh
2022-01-04 12:59:54,973 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2022-01-04 12:59:54,974 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,974 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:54,974 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,974 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-01-04 12:59:54,974 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,974 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,974 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,975 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,975 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,975 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,975 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,975 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:54,975 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-01-04 12:59:54,975 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:54,975 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:59:54,975 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,976 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,976 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:54,976 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,976 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,976 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:54,976 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,976 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,976 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,976 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,977 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:54,977 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,977 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,977 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,977 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,977 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:54,977 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:54,977 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,977 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,978 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,978 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,978 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:54,978 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,978 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,978 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,978 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,978 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:54,978 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:54,978 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:54,979 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,979 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:54,979 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:54,979 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,979 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:54,979 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,979 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:54,979 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:54,979 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,979 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,980 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:54,980 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,980 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,980 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,980 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,980 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,980 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:54,980 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,981 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:54,981 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:54,981 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:54,981 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:54,981 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:54,981 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:54,981 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,981 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,981 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,981 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:54,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:54,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,982 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,983 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,983 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:54,983 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:54,983 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,983 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:54,983 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,983 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,983 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:54,984 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:54,984 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:54,984 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,984 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,984 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:54,984 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,984 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,985 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:54,985 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,985 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,985 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,985 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,985 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:54,985 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,985 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:54,985 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,986 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,986 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,986 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:54,986 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:54,986 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,986 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,986 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,986 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:54,986 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:54,986 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,987 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:54,987 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,987 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,987 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,987 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:54,987 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,987 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:54,987 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,987 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,988 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:54,988 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,988 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,988 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,988 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,988 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:54,988 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,988 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,988 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,989 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:54,989 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:54,989 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,989 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,989 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:59:54,989 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,989 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,989 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:54,989 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,989 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:54,990 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,990 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:54,990 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:54,990 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,990 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:54,990 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,990 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,990 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:54,990 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:54,990 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,991 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:54,991 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:54,991 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:54,991 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:59:54,991 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:54,991 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,991 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,991 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:54,991 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,991 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,992 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:54,992 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,992 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,992 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,992 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,992 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,992 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:54,992 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,992 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,993 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,993 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:54,993 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,993 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:54,993 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,993 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:54,993 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,993 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,993 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:54,993 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,994 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:54,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:54,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:54,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:54,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:54,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:54,995 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,995 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,995 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,995 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:54,995 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,995 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,995 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:59:54,995 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,995 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,996 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,996 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,996 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,996 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,996 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:54,996 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,996 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,996 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:54,997 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,997 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:54,997 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:54,997 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,997 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:54,997 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:54,997 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:54,997 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:54,997 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,998 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,998 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,998 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:54,998 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:54,998 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,998 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,998 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:54,998 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,998 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:54,998 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,999 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:54,999 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:54,999 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,999 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:59:54,999 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:54,999 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:55,0 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:55,0 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:55,0 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:55,0 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,0 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,0 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:59:55,0 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,1 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,1 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:55,1 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:55,1 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:55,1 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,1 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,2 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:55,2 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,2 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,2 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:55,2 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:59:55,2 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,2 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:55,3 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,3 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,3 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:55,3 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:55,3 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,3 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,3 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,3 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:59:55,3 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,4 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:55,4 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,4 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,4 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:55,4 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,4 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:55,4 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,4 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:55,4 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,5 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:55,5 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,5 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,5 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:55,5 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,5 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,5 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,5 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,5 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,5 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,6 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:55,6 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,6 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:55,6 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:59:55,6 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,6 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:55,6 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:55,6 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:55,6 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,6 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,7 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,7 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,7 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,7 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:55,7 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:55,7 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,7 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,7 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:59:55,7 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,7 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:55,8 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,8 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,8 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,8 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,8 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,8 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:55,8 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:55,8 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,9 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:59:55,9 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,9 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,9 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,9 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,9 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,9 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,9 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,10 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:59:55,10 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:55,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,10 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:59:55,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:55,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,10 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:55,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:55,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,11 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:55,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,11 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:55,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:59:55,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:55,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:55,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:55,12 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:59:55,12 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:55,12 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:55,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:55,13 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:55,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:55,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:55,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,13 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:55,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:59:55,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:55,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,14 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,14 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:55,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:55,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:59:55,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:55,15 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:59:55,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:59:55,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,15 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:55,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:55,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:55,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:59:55,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:55,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:59:55,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:55,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:59:55,17 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:59:55,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:55,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:59:55,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:59:55,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:59:55,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,18 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:59:55,18 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to DejaVu Sans ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-01-04 12:59:55,674 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F1' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf'
2022-01-04 12:59:56,80 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf.
2022-01-04 12:59:56,80 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:59:58,63 matplotlib.colorbar DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fd5c99a03d0>
2022-01-04 12:59:58,63 matplotlib.colorbar DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fd5c99a03d0> on colorbar
2022-01-04 12:59:58,63 matplotlib.colorbar DEBUG Setting pcolormesh
2022-01-04 12:59:59,360 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F1' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf'
2022-01-04 12:59:59,809 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf.
2022-01-04 12:59:59,809 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
