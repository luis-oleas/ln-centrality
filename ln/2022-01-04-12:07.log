2022-01-04 12:07:57,995 root INFO Starting
2022-01-04 12:08:00,371 root DEBUG Processing
2022-01-04 12:08:02,229 root DEBUG Computing centrality metrics
2022-01-04 12:08:04,58 root DEBUG Degree for unrestricted/restricted graph with/out weight computed
2022-01-04 12:08:04,214 root DEBUG In degree for unrestricted/restricted graphs with/out weight computed
2022-01-04 12:08:04,362 root DEBUG Out degree for unrestricted/restricted graphs with/out weight computed
2022-01-04 12:09:20,251 root DEBUG Betweenness for unrestricted/restricted graphs with/out weight computed
2022-01-04 12:10:20,523 root DEBUG Current flow betweenness for unrestricted/restricted graphs with weight computed
2022-01-04 12:14:36,587 root DEBUG Closeness for unrestricted and restricted graphs with and without weight computed
2022-01-04 12:14:36,587 root DEBUG Flow betweenness for unrestricted/restricted graphs with weight computed
2022-01-04 12:14:42,322 root DEBUG Pagerank for unrestricted and restricted graphs with and without weight computed
2022-01-04 12:14:43,273 root DEBUG Saving graphs into pickle files
2022-01-04 12:14:43,973 root DEBUG Computing centrality metrics
2022-01-04 12:14:45,738 root DEBUG Degree for unrestricted/restricted graph with/out weight computed
2022-01-04 12:14:45,906 root DEBUG In degree for unrestricted/restricted graphs with/out weight computed
2022-01-04 12:14:46,70 root DEBUG Out degree for unrestricted/restricted graphs with/out weight computed
2022-01-04 12:16:26,523 root DEBUG Betweenness for unrestricted/restricted graphs with/out weight computed
2022-01-04 12:17:48,572 root DEBUG Current flow betweenness for unrestricted/restricted graphs with weight computed
2022-01-04 12:23:31,25 root DEBUG Closeness for unrestricted and restricted graphs with and without weight computed
2022-01-04 12:23:31,25 root DEBUG Flow betweenness for unrestricted/restricted graphs with weight computed
2022-01-04 12:23:37,874 root DEBUG Pagerank for unrestricted and restricted graphs with and without weight computed
2022-01-04 12:23:38,836 root DEBUG Saving graphs into pickle files
2022-01-04 12:24:05,263 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
2022-01-04 12:24:05,264 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,264 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:05,264 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,264 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-01-04 12:24:05,264 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,264 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,264 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,264 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,265 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,265 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,265 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,265 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,265 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-01-04 12:24:05,265 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,265 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:24:05,265 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,265 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,265 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,266 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,266 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,266 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,266 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,266 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,266 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,266 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,266 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,266 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,266 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,267 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,267 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,267 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,267 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,267 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,267 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,267 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,267 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,267 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,267 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,268 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,268 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,268 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,268 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,268 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,268 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,268 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,268 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,268 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,268 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,269 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,269 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,269 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,269 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,269 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,269 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,269 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,269 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,269 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,269 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,270 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,270 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,270 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,270 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,270 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,270 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,270 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,270 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,270 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,270 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,271 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,271 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,271 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,271 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,271 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,271 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,271 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,271 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,271 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,271 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,272 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,272 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,272 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,272 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,272 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,272 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,272 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,272 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,272 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,272 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,273 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,273 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,273 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,273 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,273 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,273 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,273 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,273 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,273 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,273 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,274 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,274 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,274 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,274 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,274 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,274 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,274 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,274 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,274 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,274 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,275 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,275 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,275 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,275 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,275 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,275 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,275 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,275 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,275 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,275 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,276 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,277 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,277 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,277 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,277 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,277 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,277 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,277 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,277 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,277 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:24:05,277 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,278 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,278 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,278 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,278 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,278 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,278 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,278 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,278 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,278 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,278 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:05,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:05,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:24:05,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,280 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,280 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,280 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,280 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,280 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,280 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,280 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,280 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,280 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,280 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,281 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,282 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,283 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,283 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,283 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,283 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,283 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,283 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,283 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,283 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,283 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,284 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:24:05,284 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,284 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,284 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,284 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,284 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,284 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,284 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,284 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,284 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,285 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,285 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,285 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,285 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,285 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,285 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,285 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,285 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,285 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,285 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,285 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,286 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,286 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,286 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,286 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,286 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,286 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,286 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,286 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:05,286 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,287 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,287 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,287 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,287 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:24:05,287 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,287 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,287 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,287 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,287 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,287 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,288 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,288 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:24:05,288 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,288 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,288 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,288 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,288 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:05,288 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,288 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,288 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,289 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,289 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,289 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,289 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:24:05,289 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,289 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,289 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,289 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,289 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,289 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,290 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,290 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,290 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,290 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:24:05,290 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,290 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,290 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,290 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,290 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,290 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,291 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,291 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,291 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,291 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,291 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,291 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,291 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,291 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,291 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,291 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,292 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,292 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,292 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,292 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,292 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,292 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,292 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,292 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:05,292 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,292 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,293 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,293 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,293 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,293 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,293 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,293 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,293 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,293 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,293 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,293 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,294 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,294 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,294 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,294 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,294 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,294 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,294 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,294 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,294 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,294 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,294 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,295 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,295 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:05,295 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,295 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,295 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,295 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,295 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,295 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,295 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,296 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,296 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,296 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,296 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,296 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,296 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,296 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,296 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,296 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,296 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,297 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,297 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,297 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,297 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,297 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,297 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,297 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,297 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,297 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:24:05,297 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,298 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,298 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,298 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:24:05,298 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,298 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,298 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,298 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,298 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,298 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,298 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,299 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,299 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,299 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,299 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,299 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:05,299 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,299 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,299 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,299 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,299 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,300 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,300 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,300 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,300 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,300 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,300 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,300 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,300 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:05,300 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:05,300 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,301 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,301 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,301 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:05,301 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,301 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,301 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,301 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,301 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,301 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,301 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,302 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,302 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,302 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,302 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,302 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,302 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,302 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,302 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,302 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:05,302 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,303 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,303 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,303 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,303 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to DejaVu Sans ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-01-04 12:24:05,323 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-01-04 12:24:05,323 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,324 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:05,324 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,324 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-01-04 12:24:05,324 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,324 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,324 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,324 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,325 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,325 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,325 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,325 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,325 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-01-04 12:24:05,325 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,325 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:24:05,325 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,325 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,325 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,326 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,326 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,326 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,326 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,326 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,326 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,326 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,326 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,326 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,326 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,327 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,327 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,327 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,327 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,327 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,327 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,327 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,327 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,327 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,327 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,328 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,328 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,328 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,328 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,328 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,328 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,328 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,328 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,328 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,329 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,329 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,329 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,329 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,329 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,329 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,329 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,329 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,329 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,329 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,330 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,330 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,330 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,330 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,330 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,330 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,330 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,330 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,330 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,330 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,331 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,331 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,331 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,331 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,331 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,331 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,331 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,331 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,331 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,332 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,332 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,332 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,332 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,332 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,332 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,332 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,332 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,333 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,333 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,333 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,333 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,333 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,333 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,333 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,333 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,334 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,334 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,334 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,334 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,334 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,334 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,334 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,334 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,335 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,335 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,335 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,335 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,335 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,335 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,335 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,335 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,336 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,336 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,336 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,336 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,336 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,336 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,336 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,336 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,337 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,337 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,337 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,337 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,337 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,337 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,337 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,337 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,337 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,338 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,338 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,338 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,338 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,338 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,338 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,338 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,338 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,339 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,339 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,339 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,339 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:24:05,339 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,339 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,339 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,339 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,340 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,340 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,340 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,340 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,340 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,340 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,340 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,340 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,341 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,341 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,341 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,341 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:05,341 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:05,341 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,341 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:24:05,341 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,342 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,342 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,342 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,342 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,342 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,342 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,342 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,342 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,343 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,343 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,343 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,343 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,343 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,343 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,343 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,343 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,343 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,344 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,344 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,344 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,344 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,344 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,344 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,344 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,344 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,344 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,345 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,345 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,345 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,345 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,345 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,345 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,345 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,345 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,345 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,345 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,346 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,346 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,346 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,346 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,346 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:24:05,346 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,346 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,346 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,346 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,347 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,347 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,347 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,347 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,347 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,347 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,347 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,347 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,347 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,347 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,348 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,348 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,348 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,348 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,348 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,348 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,348 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,348 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,348 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,348 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,349 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,349 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,349 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,349 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:05,349 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,349 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,349 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,349 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,349 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:24:05,349 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,350 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,350 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,350 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,350 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,350 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,350 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,350 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:24:05,350 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,350 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,351 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,351 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,351 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:05,351 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,351 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,351 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,351 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,351 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,351 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,351 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:24:05,352 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,352 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,352 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,352 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,352 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,352 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,352 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,352 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,352 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,353 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:24:05,353 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,353 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,353 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,353 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,353 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,353 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,353 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,353 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,353 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,354 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,354 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,354 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,354 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,354 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,354 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,354 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,354 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,354 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,354 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,355 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,355 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,355 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,355 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,355 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:05,355 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,355 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,355 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,355 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,355 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,356 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,356 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,356 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,356 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,356 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,356 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,356 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,356 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,357 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,357 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,357 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,357 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,357 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,357 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,357 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,357 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,357 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,358 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,358 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,358 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:05,358 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,358 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,358 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,358 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,358 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,358 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,358 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,359 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,359 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,359 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,359 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,359 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,359 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,359 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,359 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,359 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,359 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,360 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,360 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,360 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,360 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,360 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,360 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,360 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,360 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,360 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:24:05,361 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,361 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,361 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,361 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:24:05,361 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,361 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,361 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,361 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,361 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,361 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,362 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,362 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,362 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,362 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,362 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,362 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:05,362 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,362 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,362 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,363 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,363 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,363 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,363 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,363 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,363 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,363 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,363 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,363 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,363 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:05,364 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:05,364 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,364 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,364 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,364 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:05,364 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,364 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,364 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,364 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,365 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,365 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,365 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,365 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,365 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,365 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,365 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,365 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,365 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,365 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,366 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,366 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:05,366 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,366 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,366 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,366 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,366 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-01-04 12:24:05,371 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F1' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf'
2022-01-04 12:24:05,430 matplotlib.font_manager DEBUG findfont: Matching STIXGeneral:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:24:05,430 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,430 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,431 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,431 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,431 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,431 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,431 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,431 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:24:05,431 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,431 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,431 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,431 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 1.05
2022-01-04 12:24:05,431 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,432 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 1.335
2022-01-04 12:24:05,432 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,432 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,432 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,432 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,432 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:05,432 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,432 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,432 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,432 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,432 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,433 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,433 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,433 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,433 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,433 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,433 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,433 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,433 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,433 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,433 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,434 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,434 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,434 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,434 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,434 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,434 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,434 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,434 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,434 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,434 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,434 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,435 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,435 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,435 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,435 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,435 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,435 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,435 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,435 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,435 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,435 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,435 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,436 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,436 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,436 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,436 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,436 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,436 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,436 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,436 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,436 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,436 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,436 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,437 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,437 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,437 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,437 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,437 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,437 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,437 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,437 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,437 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,437 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,438 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,438 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,438 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,438 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,438 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,438 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,438 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,438 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,438 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,438 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,438 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,439 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,439 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,439 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,439 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,439 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,439 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,439 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,439 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,439 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,439 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,439 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,440 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,440 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,440 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,440 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,440 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,440 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,440 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,440 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,440 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,440 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,441 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,441 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,441 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,441 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,441 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,441 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,441 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,441 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,441 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,441 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,441 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,442 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,442 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,442 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,442 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,442 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,442 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,442 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,442 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,442 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,442 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,443 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,443 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,443 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,443 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,443 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,443 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,443 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:24:05,443 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,443 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,443 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,443 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,444 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,444 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,444 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,444 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,444 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,444 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,444 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,444 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,444 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,444 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,444 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,445 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:05,445 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:05,445 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,445 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:24:05,445 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,445 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,445 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,445 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,445 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,445 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,446 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,446 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,446 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,446 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,446 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,446 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,446 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,446 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,446 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,446 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,446 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,447 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,447 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,447 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,447 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,447 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,447 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,447 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,447 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,447 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,447 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,448 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,448 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,448 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,448 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,448 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,448 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,448 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,448 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,448 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,448 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,448 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,449 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,449 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,449 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,449 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,449 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,449 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,449 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,449 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,449 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,449 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,450 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,450 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,450 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,450 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,450 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,450 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,450 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,450 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,450 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,450 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,451 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,451 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,451 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,451 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,451 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,451 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,451 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,451 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,451 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,451 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,451 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,452 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:05,452 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,452 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,452 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,452 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,452 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:24:05,452 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,452 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,452 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,452 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,453 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,453 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,453 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,453 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:24:05,453 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,453 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,453 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,453 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,453 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:05,453 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,453 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,454 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,454 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,454 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,454 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,454 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:24:05,454 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,454 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,454 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,454 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,454 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,454 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,455 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,455 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,455 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,455 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:24:05,455 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,455 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,455 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,455 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,455 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,455 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,456 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,456 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,456 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,456 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,456 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,456 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,456 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,456 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,456 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,456 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,456 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,457 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,457 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,457 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,457 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,457 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,457 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,457 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:05,457 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,457 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,457 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,458 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,458 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,458 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,458 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,458 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,458 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,458 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,458 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,458 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,458 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,458 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,459 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,459 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,459 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,459 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,459 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,459 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,459 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,459 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,459 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,459 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,459 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,460 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,460 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,460 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,460 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,460 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,460 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,460 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,460 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,460 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,460 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,461 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,461 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,461 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,462 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:24:05,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,462 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:24:05,462 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,463 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,463 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,463 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,463 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,463 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,463 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,463 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,463 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,463 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,463 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,463 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:05,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,464 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,464 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,465 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:05,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:05,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,465 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:05,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,466 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:05,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,467 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,467 matplotlib.font_manager DEBUG findfont: Matching STIXGeneral:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to STIXGeneral ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf') with score of 0.050000.
2022-01-04 12:24:05,468 matplotlib.font_manager DEBUG findfont: Matching STIXGeneral:style=italic:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:24:05,468 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,468 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,469 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,469 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,469 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,469 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,469 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,469 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 1.335
2022-01-04 12:24:05,469 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,469 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,469 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,469 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 0.05
2022-01-04 12:24:05,469 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,470 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 0.33499999999999996
2022-01-04 12:24:05,470 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,470 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,470 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,470 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,470 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 1.05
2022-01-04 12:24:05,470 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,470 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,470 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,470 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,471 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,471 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,471 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,471 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,471 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,471 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,471 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,471 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,471 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,471 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,471 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,472 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,472 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,472 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,472 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,472 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,472 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,472 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,472 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,472 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,472 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,473 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,473 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,473 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,473 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,473 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,473 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,473 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,473 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,473 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,473 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,474 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,474 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,474 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,474 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,474 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,474 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,474 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,474 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,474 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,474 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,474 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,476 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 11.145
2022-01-04 12:24:05,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,476 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,476 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 10.34
2022-01-04 12:24:05,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,477 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,477 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,477 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 11.145
2022-01-04 12:24:05,477 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,477 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,477 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,477 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,477 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,477 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,477 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,477 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,478 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,478 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,478 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,478 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,478 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,478 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,478 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,478 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,478 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,478 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,479 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,479 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,479 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,479 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,479 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 11.25
2022-01-04 12:24:05,479 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,479 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,479 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,479 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,479 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,479 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,480 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2022-01-04 12:24:05,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 10.54
2022-01-04 12:24:05,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,481 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 11.145
2022-01-04 12:24:05,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 11.25
2022-01-04 12:24:05,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 10.35
2022-01-04 12:24:05,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 10.145
2022-01-04 12:24:05,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 10.535
2022-01-04 12:24:05,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,483 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 11.25
2022-01-04 12:24:05,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,484 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 10.34
2022-01-04 12:24:05,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,486 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,486 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,486 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,486 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,486 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,486 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 11.24
2022-01-04 12:24:05,486 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,486 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,486 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,486 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,486 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,487 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,487 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,487 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,487 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,487 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,487 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,487 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,487 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,487 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,487 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,488 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,488 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,489 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 11.24
2022-01-04 12:24:05,489 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,489 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,489 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,489 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,489 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,489 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,489 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,489 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,489 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,490 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,490 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 11.535
2022-01-04 12:24:05,490 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,490 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,490 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,490 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,490 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 11.44
2022-01-04 12:24:05,490 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,490 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,490 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 11.145
2022-01-04 12:24:05,490 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 11.24
2022-01-04 12:24:05,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 10.25
2022-01-04 12:24:05,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,491 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,491 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 10.145
2022-01-04 12:24:05,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 10.634999999999998
2022-01-04 12:24:05,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,492 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 11.1925
2022-01-04 12:24:05,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,493 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,493 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,494 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2022-01-04 12:24:05,494 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,494 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,494 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,494 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,494 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,494 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,494 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,494 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,494 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,495 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,495 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 11.535
2022-01-04 12:24:05,495 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,496 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,496 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,496 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,496 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,496 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,496 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,496 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,496 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,496 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,496 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,497 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 11.145
2022-01-04 12:24:05,497 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,497 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,497 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,497 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,497 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,497 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,497 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,497 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,497 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,497 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,498 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,498 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,498 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,498 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,498 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,498 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,498 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,498 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,498 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 10.34
2022-01-04 12:24:05,498 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,499 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,499 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 11.24
2022-01-04 12:24:05,499 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,499 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,499 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,499 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,499 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,499 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,499 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,499 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,500 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,500 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,500 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,500 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,500 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,500 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,500 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 10.245
2022-01-04 12:24:05,500 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,500 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,500 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,500 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 10.24
2022-01-04 12:24:05,501 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,501 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,501 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,501 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,501 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,501 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,501 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,501 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,501 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,501 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,502 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,502 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 10.35
2022-01-04 12:24:05,502 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,502 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,502 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,502 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,502 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,502 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,502 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,502 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,502 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,503 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 11.25
2022-01-04 12:24:05,503 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,503 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,503 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 10.145
2022-01-04 12:24:05,503 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 10.145
2022-01-04 12:24:05,503 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,503 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,503 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,503 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 11.335
2022-01-04 12:24:05,503 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,504 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,504 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,504 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,504 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,504 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,504 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,504 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,504 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,504 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,504 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,505 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,505 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,505 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,505 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,505 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 11.335
2022-01-04 12:24:05,505 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,505 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,505 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,505 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,505 matplotlib.font_manager DEBUG findfont: Matching STIXGeneral:style=italic:variant=normal:weight=normal:stretch=normal:size=12.0 to STIXGeneral ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf') with score of 0.050000.
2022-01-04 12:24:05,507 matplotlib.font_manager DEBUG findfont: Matching STIXGeneral:style=normal:variant=normal:weight=bold:stretch=normal:size=12.0.
2022-01-04 12:24:05,507 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,507 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,507 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,507 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,507 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,507 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,508 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,508 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 0.05
2022-01-04 12:24:05,508 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,508 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,508 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,508 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 1.335
2022-01-04 12:24:05,508 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,508 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 1.05
2022-01-04 12:24:05,508 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,508 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,509 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,509 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,509 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 0.33499999999999996
2022-01-04 12:24:05,509 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,509 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,509 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,509 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,509 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,509 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,509 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,509 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,510 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,510 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,510 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,510 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,510 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,510 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,510 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,510 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,510 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,510 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,511 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,511 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,511 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,511 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,511 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,511 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,511 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,511 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,511 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,511 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,511 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,512 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,512 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,512 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,512 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,512 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,512 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,512 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,512 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,512 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,512 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,513 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,513 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,513 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,513 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,513 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,514 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,514 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,514 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,514 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,514 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,514 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,515 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,515 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,515 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,515 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,515 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,515 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,515 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,515 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,515 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,515 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,515 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,516 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,516 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.43
2022-01-04 12:24:05,516 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,516 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,516 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.145
2022-01-04 12:24:05,516 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,516 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,516 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,516 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,516 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.43
2022-01-04 12:24:05,517 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,517 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,517 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,517 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,517 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,517 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,517 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,517 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,517 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,517 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,518 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,518 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,518 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,518 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,518 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,518 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,518 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,518 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,518 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,518 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,518 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,519 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,519 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.535
2022-01-04 12:24:05,519 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,519 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,519 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,519 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,519 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,519 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,519 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,519 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,519 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,520 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,520 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2022-01-04 12:24:05,520 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,520 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,520 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,520 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,520 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,520 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,520 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,520 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,521 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,521 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,521 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,521 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,521 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.344999999999999
2022-01-04 12:24:05,521 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,521 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,521 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,521 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,521 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,521 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,522 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.43
2022-01-04 12:24:05,522 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,522 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,522 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,522 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,522 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,522 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.535
2022-01-04 12:24:05,522 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,522 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,522 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.535
2022-01-04 12:24:05,523 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.24
2022-01-04 12:24:05,523 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,523 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.25
2022-01-04 12:24:05,523 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,523 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,523 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,523 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,523 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,523 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,523 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,523 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,524 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,524 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,524 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,524 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,524 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.535
2022-01-04 12:24:05,524 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,524 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,524 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,524 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,524 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,525 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.145
2022-01-04 12:24:05,525 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,525 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,525 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,525 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,525 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,525 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,525 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,525 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,526 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,526 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,526 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,526 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,526 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.145
2022-01-04 12:24:05,526 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,526 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,526 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,526 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,526 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,527 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,527 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,527 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,527 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,527 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,527 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,527 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,527 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,527 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,527 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,527 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,528 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,528 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,528 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,528 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,528 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,528 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,528 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,528 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,528 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,528 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,529 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.145
2022-01-04 12:24:05,529 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,529 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,529 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,529 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,529 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.25
2022-01-04 12:24:05,530 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,530 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.344999999999999
2022-01-04 12:24:05,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,530 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,530 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.43
2022-01-04 12:24:05,530 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.145
2022-01-04 12:24:05,530 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.535
2022-01-04 12:24:05,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,531 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,531 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.43
2022-01-04 12:24:05,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,531 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.25
2022-01-04 12:24:05,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,532 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,532 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.4775
2022-01-04 12:24:05,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,533 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,533 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,534 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2022-01-04 12:24:05,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,534 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,534 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,534 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,534 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,535 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,535 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.25
2022-01-04 12:24:05,535 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,535 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,536 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,536 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,536 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,536 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,536 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,537 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,537 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.43
2022-01-04 12:24:05,537 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,537 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,537 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,537 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,537 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,537 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,537 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,537 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,537 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,538 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,538 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,538 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,538 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,538 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,538 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,538 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,538 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,538 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,538 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.145
2022-01-04 12:24:05,539 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,539 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,539 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.145
2022-01-04 12:24:05,539 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,539 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,539 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,539 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,539 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,539 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,539 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,539 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,540 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,540 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,540 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,540 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,540 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,540 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,540 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.43
2022-01-04 12:24:05,540 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,540 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,540 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,541 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.145
2022-01-04 12:24:05,541 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,541 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,541 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,541 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,541 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,541 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,541 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,541 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,541 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,541 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,542 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,542 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.535
2022-01-04 12:24:05,542 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,542 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,542 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,542 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,542 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,542 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,542 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,542 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,543 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,543 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.535
2022-01-04 12:24:05,543 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,543 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,543 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.43
2022-01-04 12:24:05,543 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.24
2022-01-04 12:24:05,543 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,543 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,543 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,543 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.62
2022-01-04 12:24:05,543 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,544 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,544 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,544 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,544 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,544 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,544 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,544 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,544 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,544 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,544 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.62
2022-01-04 12:24:05,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,545 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,545 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,545 matplotlib.font_manager DEBUG findfont: Matching STIXGeneral:style=normal:variant=normal:weight=bold:stretch=normal:size=12.0 to STIXGeneral ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf') with score of 0.050000.
2022-01-04 12:24:05,546 matplotlib.font_manager DEBUG findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:24:05,546 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:24:05,547 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,547 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,547 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,547 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,547 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,547 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,547 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,547 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,547 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,547 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,548 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,548 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,548 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,548 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,548 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,548 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,548 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,548 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,548 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,548 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,548 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,549 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,549 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,549 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,549 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 1.05
2022-01-04 12:24:05,549 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,549 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,549 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,549 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,549 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,549 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 1.335
2022-01-04 12:24:05,550 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,550 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,550 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,550 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,550 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,550 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:05,550 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,550 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,550 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,550 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,551 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,551 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,551 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,551 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,552 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,552 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,552 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,552 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,552 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,552 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,552 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,552 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,552 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,552 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,552 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,553 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,553 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,553 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,553 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,553 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,553 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,553 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,553 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,553 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,553 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,554 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,554 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,554 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,554 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,554 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,554 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,554 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,554 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,554 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,554 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,554 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,555 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,555 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,555 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,555 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,555 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,555 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,555 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,555 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,555 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,555 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,555 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,556 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,556 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,556 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,556 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,556 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,556 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,556 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,556 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,556 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,556 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,557 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,557 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,557 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,557 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,557 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,557 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,557 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,557 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,557 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,557 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,557 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,558 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,558 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,558 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,558 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,558 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,558 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,558 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,558 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,558 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,558 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,559 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,559 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,559 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,559 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,559 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,559 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,559 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,559 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,559 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,559 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:24:05,559 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,560 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,560 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,560 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,560 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,560 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,560 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,560 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,560 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,560 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,560 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,560 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,561 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,561 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,561 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,561 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:05,561 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:05,561 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,561 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:24:05,561 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,561 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,561 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,562 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,562 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,562 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,562 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,562 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,562 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,562 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,562 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,562 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,562 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,562 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,563 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,563 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,563 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,563 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,563 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,563 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,563 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,563 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,563 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,563 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,564 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,564 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,564 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,564 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,564 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,564 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,564 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,564 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,564 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,564 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,564 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,565 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,565 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,565 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,565 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,565 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,565 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,565 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,565 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,565 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,565 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,565 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,566 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,566 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,566 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,566 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,566 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,566 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,566 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,566 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,566 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,566 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,567 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,567 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,567 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,567 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,567 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,567 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,567 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,567 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,567 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,567 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,567 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,568 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,568 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,568 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:05,568 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,568 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,568 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,568 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,568 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:24:05,568 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,568 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,569 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,569 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,569 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,569 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,569 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,569 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:24:05,569 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,569 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,569 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,569 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,569 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:05,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:24:05,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,570 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,571 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,571 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,571 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,571 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,571 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,571 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,571 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:24:05,571 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,571 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,571 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,571 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,572 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,572 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,572 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,572 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,572 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,572 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,572 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,572 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,572 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,572 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,572 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,573 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,573 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,573 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,573 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,573 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,573 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,573 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,573 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,573 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:05,573 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,574 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,574 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,574 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,574 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,574 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,574 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,574 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,574 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,574 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,574 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,574 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,575 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,575 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,575 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,575 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,575 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,575 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,575 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,575 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,575 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,575 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,575 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,576 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,576 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,576 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,576 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,576 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,576 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,576 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,576 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,576 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,576 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,577 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,577 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,577 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,577 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,577 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,577 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,577 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,577 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,577 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,577 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,578 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,578 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,578 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,578 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,578 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,578 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,578 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,578 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:24:05,578 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,578 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,578 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,579 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:24:05,579 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,579 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,579 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,579 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,579 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,579 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,579 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,579 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,579 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,580 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,580 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,580 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:05,580 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,580 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,580 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,580 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,580 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,580 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,580 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,580 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,581 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,581 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,581 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,581 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,581 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:05,581 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:05,581 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,581 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,581 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,581 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:05,581 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,582 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,582 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,582 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,582 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,582 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,582 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,582 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,582 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,582 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,582 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,583 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,583 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,583 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,583 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,583 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:05,583 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,583 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,583 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,583 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,583 matplotlib.font_manager DEBUG findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to STIXNonUnicode ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf') with score of 0.050000.
2022-01-04 12:24:05,584 matplotlib.font_manager DEBUG findfont: Matching STIXNonUnicode:style=italic:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:24:05,585 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 1.335
2022-01-04 12:24:05,585 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,585 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,585 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,585 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,585 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,585 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,585 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,585 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,585 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,586 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,586 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,586 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,586 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,586 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,586 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,586 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,586 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,586 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,586 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,587 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,587 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,587 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,587 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,587 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,587 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 0.05
2022-01-04 12:24:05,587 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,587 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,587 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,587 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,587 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,588 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 0.33499999999999996
2022-01-04 12:24:05,588 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,588 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,588 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,588 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,588 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,588 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 1.05
2022-01-04 12:24:05,588 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,588 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,588 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,589 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,589 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,589 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,589 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,589 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,589 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,589 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,589 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,589 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,589 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,589 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,590 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,590 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,590 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,590 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,590 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,590 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,590 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,590 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,590 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,590 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,591 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,591 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,591 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,592 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,592 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,592 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,592 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,592 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,592 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,592 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,592 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,592 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 11.145
2022-01-04 12:24:05,592 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,593 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,593 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 10.34
2022-01-04 12:24:05,593 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,593 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,593 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,593 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,593 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 11.145
2022-01-04 12:24:05,593 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,593 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,593 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,593 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,594 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,594 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,594 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,594 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,594 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,594 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,594 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,594 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,594 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,594 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,595 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,595 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 11.25
2022-01-04 12:24:05,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,595 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,596 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,596 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,596 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,596 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,596 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,596 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,596 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,596 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,596 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2022-01-04 12:24:05,596 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,597 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,597 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,597 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,597 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,597 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,597 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,597 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,597 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,597 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,597 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,597 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,598 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 10.54
2022-01-04 12:24:05,598 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,598 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,598 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,598 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,598 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,598 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,598 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 11.145
2022-01-04 12:24:05,598 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,598 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,599 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,599 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,599 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,599 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 11.25
2022-01-04 12:24:05,599 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,599 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,599 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 10.35
2022-01-04 12:24:05,599 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 10.145
2022-01-04 12:24:05,599 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,599 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 10.535
2022-01-04 12:24:05,599 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,600 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,600 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,600 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,600 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,600 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,600 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,600 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,600 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,600 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,600 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,601 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,601 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 11.25
2022-01-04 12:24:05,601 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,601 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,601 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,601 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,601 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,601 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 10.34
2022-01-04 12:24:05,601 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,601 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,601 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,602 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,602 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,602 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,602 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,602 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,602 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,602 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,602 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,602 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,602 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 11.24
2022-01-04 12:24:05,603 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,603 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,603 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,603 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,603 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,603 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,603 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,603 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,603 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,603 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,603 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,604 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,604 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,604 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,604 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,604 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,604 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,604 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,604 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,604 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,604 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,605 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,605 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,605 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,605 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,605 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,605 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 11.24
2022-01-04 12:24:05,605 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,605 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,605 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,605 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,605 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,606 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,606 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,606 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,606 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,606 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,606 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 11.535
2022-01-04 12:24:05,606 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,606 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,606 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,606 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,607 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 11.44
2022-01-04 12:24:05,607 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,607 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,607 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 11.145
2022-01-04 12:24:05,607 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 11.24
2022-01-04 12:24:05,607 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,607 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,607 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,607 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 10.25
2022-01-04 12:24:05,607 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,607 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,608 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,608 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,608 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 10.145
2022-01-04 12:24:05,608 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,608 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,608 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,608 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,608 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,608 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,608 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 10.634999999999998
2022-01-04 12:24:05,609 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,609 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,609 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,609 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,609 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,609 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,609 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,609 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,609 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,609 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 11.1925
2022-01-04 12:24:05,609 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,610 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,610 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,610 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,610 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,610 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,610 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2022-01-04 12:24:05,610 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,610 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,610 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,610 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,611 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,611 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,611 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,611 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,611 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,611 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,611 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,611 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,611 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,611 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,611 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,612 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,612 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 11.535
2022-01-04 12:24:05,612 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,612 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,612 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,612 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,612 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,612 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,612 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,612 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,613 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,613 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,613 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,613 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,613 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,613 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 11.145
2022-01-04 12:24:05,613 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,613 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,613 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,613 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,613 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,614 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,614 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,614 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,614 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,614 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,614 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,614 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,614 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,614 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,614 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,615 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,615 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,615 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,615 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 10.34
2022-01-04 12:24:05,615 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,615 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,615 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 11.24
2022-01-04 12:24:05,615 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,615 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,615 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,615 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,616 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,616 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,616 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,616 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,616 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,616 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,616 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,616 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,616 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,616 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,617 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 10.245
2022-01-04 12:24:05,617 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,617 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,617 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,617 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 10.24
2022-01-04 12:24:05,617 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,617 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,617 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,617 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,617 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,617 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,618 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,618 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,618 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,618 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,618 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,618 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 10.35
2022-01-04 12:24:05,618 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,618 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,618 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,618 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,618 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,619 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,619 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,619 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,619 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,619 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 11.25
2022-01-04 12:24:05,619 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,619 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,619 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 10.145
2022-01-04 12:24:05,619 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 10.145
2022-01-04 12:24:05,619 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,620 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,620 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,620 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 11.335
2022-01-04 12:24:05,620 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,620 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,620 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:05,620 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,620 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:05,620 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,620 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,620 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,621 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:05,621 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,621 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:05,621 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,621 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:05,621 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,621 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,621 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 11.335
2022-01-04 12:24:05,621 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,621 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:05,622 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,622 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:05,622 matplotlib.font_manager DEBUG findfont: Matching STIXNonUnicode:style=italic:variant=normal:weight=normal:stretch=normal:size=12.0 to STIXNonUnicode ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf') with score of 0.050000.
2022-01-04 12:24:05,623 matplotlib.font_manager DEBUG findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=bold:stretch=normal:size=12.0.
2022-01-04 12:24:05,623 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 0.05
2022-01-04 12:24:05,623 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,623 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,623 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,623 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,623 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,624 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,624 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,624 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,624 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,624 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,624 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,624 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,624 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,624 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,624 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,625 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,625 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,625 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,625 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,625 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,625 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,625 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,625 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,625 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,625 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 1.335
2022-01-04 12:24:05,626 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,626 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,626 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,626 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,626 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,626 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 1.05
2022-01-04 12:24:05,626 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,626 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,626 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,627 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,627 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,627 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 0.33499999999999996
2022-01-04 12:24:05,627 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,627 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,627 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,627 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,627 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,627 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,627 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,627 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,628 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,628 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,628 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,628 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,628 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,628 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,628 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,628 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,628 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,628 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,629 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,629 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,629 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,629 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,629 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,629 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,629 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,629 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,629 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,629 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,630 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,630 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,630 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,630 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,630 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,630 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,630 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,630 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,630 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,630 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,630 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,631 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,631 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,631 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,631 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,631 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.43
2022-01-04 12:24:05,631 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,631 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,631 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.145
2022-01-04 12:24:05,631 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,631 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,632 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,632 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,632 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.43
2022-01-04 12:24:05,632 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,632 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,632 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,632 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,632 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,632 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,632 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,632 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,633 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,633 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,633 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,633 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,633 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,633 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,633 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,633 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,633 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,633 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,634 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,634 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,634 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,634 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,634 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.535
2022-01-04 12:24:05,634 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,634 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,634 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,634 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,634 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,634 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,635 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,635 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,635 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,635 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,635 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2022-01-04 12:24:05,635 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,635 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,635 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,635 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,635 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,635 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,636 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,636 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,636 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,636 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,636 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,636 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,636 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.344999999999999
2022-01-04 12:24:05,636 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,636 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,636 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,637 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,637 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,637 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,637 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.43
2022-01-04 12:24:05,637 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,637 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,637 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,637 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,637 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,637 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.535
2022-01-04 12:24:05,637 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,638 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,638 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.535
2022-01-04 12:24:05,638 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.24
2022-01-04 12:24:05,638 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,638 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.25
2022-01-04 12:24:05,638 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,638 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,638 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,638 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,638 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,639 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,639 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,639 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,639 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,639 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,639 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,639 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,639 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.535
2022-01-04 12:24:05,639 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,639 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,639 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,640 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,640 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,640 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.145
2022-01-04 12:24:05,640 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,640 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,640 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,640 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,640 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,640 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,640 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,640 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,641 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,641 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,641 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,641 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,641 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.145
2022-01-04 12:24:05,641 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,641 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,641 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,641 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,641 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,642 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,642 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,642 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,642 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,642 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,642 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,642 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,642 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,642 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,642 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,642 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,643 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,643 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,643 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,643 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,643 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,643 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,643 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,643 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,643 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,643 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,644 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.145
2022-01-04 12:24:05,644 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,644 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,644 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,644 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,644 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,644 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,644 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,644 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,644 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,644 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,645 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.25
2022-01-04 12:24:05,645 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,645 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,645 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,645 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,645 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.344999999999999
2022-01-04 12:24:05,645 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,645 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,645 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.43
2022-01-04 12:24:05,645 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.145
2022-01-04 12:24:05,646 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,646 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,646 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,646 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.535
2022-01-04 12:24:05,646 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,646 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,646 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,646 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,646 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.43
2022-01-04 12:24:05,646 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,646 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,647 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,647 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,647 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,647 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,647 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.25
2022-01-04 12:24:05,647 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,647 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,647 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,647 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,647 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,647 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,648 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,648 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,648 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,648 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.4775
2022-01-04 12:24:05,648 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,648 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,648 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,648 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,648 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,648 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,649 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2022-01-04 12:24:05,649 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,649 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,649 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,649 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,649 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,649 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,649 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,649 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,649 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,649 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,650 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,650 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,650 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,650 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,650 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,650 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,650 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.25
2022-01-04 12:24:05,650 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,650 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,650 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,650 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,651 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,651 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,651 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,651 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,651 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,651 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,651 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,651 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,651 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,651 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.43
2022-01-04 12:24:05,652 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,652 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,652 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,652 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,652 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,652 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,652 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,652 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,652 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,652 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,653 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,653 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,653 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,653 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,653 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,653 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,653 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,653 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,653 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.145
2022-01-04 12:24:05,653 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,653 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,654 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.145
2022-01-04 12:24:05,654 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,654 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,654 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,654 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,654 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,654 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,654 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,654 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,654 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,655 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,655 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,655 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,655 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,655 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,655 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.43
2022-01-04 12:24:05,655 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,655 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,655 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,655 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.145
2022-01-04 12:24:05,655 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,656 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,656 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,656 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,656 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,656 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,656 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,656 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,656 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,656 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,656 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,656 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.535
2022-01-04 12:24:05,657 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,657 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,657 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,657 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,657 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,657 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,657 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,657 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,658 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,658 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.535
2022-01-04 12:24:05,658 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,658 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,658 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.43
2022-01-04 12:24:05,658 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.24
2022-01-04 12:24:05,658 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,658 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,658 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,658 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.62
2022-01-04 12:24:05,658 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,659 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,659 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:05,659 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,659 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:05,659 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,659 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,659 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,659 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:05,659 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,659 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:05,660 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,660 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:05,660 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,660 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,660 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.62
2022-01-04 12:24:05,660 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,660 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:05,660 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,660 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:05,660 matplotlib.font_manager DEBUG findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=bold:stretch=normal:size=12.0 to STIXNonUnicode ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf') with score of 0.050000.
2022-01-04 12:24:05,661 matplotlib.font_manager DEBUG findfont: Matching STIXSizeOneSym:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:24:05,661 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,661 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,662 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,662 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,662 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:24:05,662 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,662 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,662 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,662 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,662 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,662 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,662 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,663 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,663 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,663 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,663 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,663 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,663 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,663 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,663 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,663 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,663 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,663 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,664 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,664 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,664 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,664 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,664 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:05,664 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,664 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,664 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,664 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,664 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,665 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,665 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,665 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,665 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,665 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,665 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,665 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,665 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,665 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,666 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,666 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,666 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,667 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,667 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,667 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,667 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,669 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,669 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,669 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,670 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,670 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,670 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,670 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,670 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,670 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,670 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,670 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,670 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,670 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,671 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,671 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,672 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,672 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,672 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,672 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,673 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:24:05,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,674 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:05,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:05,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:24:05,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,676 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,677 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,679 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,679 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,679 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,680 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,680 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,680 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,680 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,680 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,680 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,680 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,680 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,680 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,680 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,681 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,681 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,682 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,682 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,682 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,682 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,682 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,683 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,683 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:05,683 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,683 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,683 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,683 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,683 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:24:05,683 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,683 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,683 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,683 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:24:05,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,684 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,684 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:05,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:24:05,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,685 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:24:05,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,686 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,686 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,687 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,687 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,687 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,688 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,688 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,688 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,688 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,688 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,688 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,688 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:05,688 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,688 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,688 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,689 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,689 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,689 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,689 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,689 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,689 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,689 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,689 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,689 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,689 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,690 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,690 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,690 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,690 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,690 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,690 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,690 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,690 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,690 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,690 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,690 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,691 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,691 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,691 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,691 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,691 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,691 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,691 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,691 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,691 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,691 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,691 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,692 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,692 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,693 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,693 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:24:05,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,693 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:24:05,693 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,694 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,694 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,694 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,694 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,694 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,694 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,694 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,694 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,694 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,694 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,694 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:05,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,695 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,695 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,696 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,696 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,696 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:05,696 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:05,696 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,696 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,696 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,696 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:05,696 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,696 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,696 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,697 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:05,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,698 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,698 matplotlib.font_manager DEBUG findfont: Matching STIXSizeOneSym:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to STIXSizeOneSym ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf') with score of 0.050000.
2022-01-04 12:24:05,699 matplotlib.font_manager DEBUG findfont: Matching STIXSizeTwoSym:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:24:05,699 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,699 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,699 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,699 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,699 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,700 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,700 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,700 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,700 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,700 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:24:05,700 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,700 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,700 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,700 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,700 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,701 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,701 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,701 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,701 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,701 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,701 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,701 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,701 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,701 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,701 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,702 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,702 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,702 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,702 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,702 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,702 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,702 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,702 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,702 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,702 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:05,702 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,703 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,703 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,703 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,703 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,703 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,703 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,703 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,703 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,703 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,703 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,704 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,704 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,705 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,705 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,705 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,705 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,705 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,705 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,705 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,705 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,705 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,705 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,707 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,707 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,707 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,707 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,707 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,707 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,707 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,707 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,707 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,707 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,708 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,708 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,708 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,708 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,708 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,708 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,708 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,708 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,708 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,708 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,708 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,709 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,709 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,710 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,710 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,710 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,710 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,711 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:24:05,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,712 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:05,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:05,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:24:05,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,714 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,716 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,717 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,717 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,717 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,717 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,717 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,717 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,717 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,717 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,717 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,717 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,718 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,718 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,718 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,718 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,718 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,718 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,719 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,719 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,720 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,720 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,720 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,720 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,720 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,721 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,721 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:05,721 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,721 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,721 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,721 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,721 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:24:05,721 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,721 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,721 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,722 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:24:05,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,722 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,722 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:05,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:24:05,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,723 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:24:05,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,724 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,725 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,725 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,725 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,725 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,725 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,725 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,725 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,725 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,725 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,725 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,726 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,726 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,726 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,726 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,726 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,726 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,726 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,726 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,726 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:05,726 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,726 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,727 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,727 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,727 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,727 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,727 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,727 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,727 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,727 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,727 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,727 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,728 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,728 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,728 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,728 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,728 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,728 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,728 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,728 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,728 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,728 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,728 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,729 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,729 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,729 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,729 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,730 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,730 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,730 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,731 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,731 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:24:05,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,732 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:24:05,732 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,732 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,732 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,733 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:05,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,733 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,733 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,734 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:05,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:05,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,734 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:05,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,735 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:05,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,736 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,736 matplotlib.font_manager DEBUG findfont: Matching STIXSizeTwoSym:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to STIXSizeTwoSym ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf') with score of 0.050000.
2022-01-04 12:24:05,737 matplotlib.font_manager DEBUG findfont: Matching STIXSizeThreeSym:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:24:05,737 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,737 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,738 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,738 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,738 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,738 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,738 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,738 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,738 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,738 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,738 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,738 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,738 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,739 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,739 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,739 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,739 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,739 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,739 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,739 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,739 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,739 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,739 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:05,740 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,740 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:24:05,740 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,740 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,740 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,740 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,740 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,740 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,740 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,740 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,740 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,741 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,741 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,741 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,741 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,741 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,741 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,741 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,741 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,742 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,742 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,742 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,743 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,743 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,743 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,743 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,745 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,745 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,745 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,746 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,746 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,746 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,747 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,747 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,748 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,748 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,748 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,748 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,749 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:24:05,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,751 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:05,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:05,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:24:05,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,752 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,754 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,755 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,755 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,756 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,756 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,756 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,756 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,756 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,757 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,757 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,757 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,758 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,758 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,758 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,758 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,758 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:05,759 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,759 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:24:05,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,759 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,759 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,759 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:24:05,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,760 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,760 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:05,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:24:05,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,761 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:24:05,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,762 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,763 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,763 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,763 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,763 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,764 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,764 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:05,764 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,765 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,765 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,765 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,765 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,765 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,765 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,765 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,765 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,765 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,765 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,765 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,766 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,766 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,766 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,766 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,766 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,766 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,766 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,766 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,766 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,766 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,767 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,767 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,767 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,767 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,767 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,767 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,767 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,767 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,767 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,767 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,767 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,768 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,768 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,768 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,768 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,768 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,768 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,768 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,768 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,768 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,768 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,768 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,769 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,769 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,769 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,769 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,769 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,769 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:24:05,769 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,769 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,769 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,769 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:24:05,769 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,770 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,770 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,770 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,770 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,770 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,770 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,770 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,770 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,770 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,770 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,771 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:05,771 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,771 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,771 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,771 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,771 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,771 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,771 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,771 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,771 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,772 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,772 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,772 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,772 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:05,772 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:05,772 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,772 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,772 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,772 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:05,772 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,772 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,773 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,773 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,773 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,773 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,773 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,773 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,773 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,773 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,773 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,773 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,773 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,774 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,774 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,774 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:05,774 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,774 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,774 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,774 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,774 matplotlib.font_manager DEBUG findfont: Matching STIXSizeThreeSym:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to STIXSizeThreeSym ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf') with score of 0.050000.
2022-01-04 12:24:05,775 matplotlib.font_manager DEBUG findfont: Matching STIXSizeFourSym:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:24:05,775 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,775 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,775 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,775 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,776 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,776 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,776 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,776 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,776 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,776 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,776 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,776 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,776 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,776 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,777 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,777 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,777 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,777 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,777 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,777 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,777 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,777 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,777 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,777 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,777 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,778 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,778 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,778 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,778 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,778 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,778 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,778 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,778 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:05,778 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,778 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,779 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:24:05,779 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,779 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,779 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,779 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,779 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,779 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,779 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,779 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,779 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,779 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,780 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,780 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,780 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,780 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,780 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,780 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,780 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,780 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,780 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,780 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,781 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,781 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,781 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,781 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,781 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,781 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,781 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,781 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,781 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,781 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,781 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,782 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,782 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,782 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,782 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,782 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,782 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,782 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,782 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,782 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,782 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,782 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,783 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,783 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,783 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,783 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,783 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,783 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,783 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,783 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,783 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,783 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,784 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,784 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,784 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,784 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,784 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,784 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,784 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,784 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,784 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,784 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,784 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,785 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,785 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,785 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,785 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,785 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,785 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,785 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,785 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,785 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,785 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,785 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,786 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,786 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,786 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,786 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,786 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,786 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,786 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,786 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,786 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,786 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,788 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,788 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,788 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,788 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,788 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,788 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:24:05,788 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,788 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,788 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,788 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:05,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:05,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:24:05,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,790 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,791 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,791 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,791 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,791 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,791 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,791 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,791 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,791 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,791 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,791 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,791 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,792 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,793 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,793 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,793 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,793 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,793 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,793 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,793 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,793 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,793 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,793 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,794 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,794 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,794 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,794 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,794 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,794 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,794 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,794 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,794 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,794 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,794 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,795 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,795 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,795 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,795 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,795 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,795 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,795 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,795 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,795 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,795 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,796 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,796 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,796 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,796 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,796 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,796 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,796 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,796 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,796 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,796 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,796 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:05,797 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,797 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,797 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,797 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,797 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:24:05,797 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,797 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,797 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,797 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,797 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,797 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,798 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,798 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:24:05,798 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,798 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,798 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,798 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,798 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:05,798 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,798 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,798 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,799 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,799 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,799 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,799 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:24:05,799 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,799 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,799 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,799 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,799 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,799 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,799 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,800 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,800 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,800 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:24:05,800 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,800 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,800 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,800 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,800 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,800 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,800 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,800 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,801 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,801 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,801 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,801 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,801 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,801 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,801 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,801 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,801 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,801 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,802 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,802 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,802 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,802 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,802 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,802 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:05,802 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,802 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,802 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,802 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,802 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,803 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,803 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,803 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,803 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,803 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,803 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,803 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,803 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,803 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,803 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,804 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,804 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,804 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,804 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,804 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,804 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,804 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,804 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,804 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,804 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,804 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,805 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,805 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,805 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,805 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,805 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,805 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,805 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,805 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,805 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,805 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,805 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,806 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,806 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,806 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,806 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,806 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,806 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,806 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,806 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,806 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,806 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,807 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,807 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,807 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,807 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:24:05,807 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,807 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,807 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,807 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:24:05,807 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,807 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,808 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,808 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,808 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,808 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,808 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,808 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,808 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,808 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,808 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,808 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:05,808 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,809 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,809 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,809 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,809 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,809 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,809 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,809 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,809 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,809 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,809 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,809 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,810 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:05,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:05,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,810 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:05,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,811 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,812 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:05,812 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,812 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,812 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,812 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,812 matplotlib.font_manager DEBUG findfont: Matching STIXSizeFourSym:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to STIXSizeFourSym ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf') with score of 0.050000.
2022-01-04 12:24:05,813 matplotlib.font_manager DEBUG findfont: Matching STIXSizeFiveSym:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:24:05,813 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,813 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,813 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,813 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,813 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,813 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,814 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,814 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,814 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,814 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,814 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,814 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,814 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,814 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,814 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,814 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,815 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,815 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,815 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,815 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,815 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,815 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,815 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,815 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:05,815 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,815 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,815 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,816 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,816 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,816 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,816 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,816 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,816 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,816 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,816 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,816 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,816 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,817 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,817 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,817 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,817 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,817 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,817 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,817 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,817 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,817 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,817 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,817 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,818 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,818 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,818 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,818 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,818 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,818 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,818 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,818 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,818 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,818 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,818 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,819 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,819 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,819 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,819 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,819 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,819 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,819 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,819 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,819 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,819 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,820 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,820 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,820 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,820 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,820 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,820 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,820 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,820 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,820 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,820 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,820 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,821 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,821 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,821 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,821 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,821 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,821 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,821 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,821 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,821 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,821 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,822 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,822 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,822 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,822 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,822 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,822 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,822 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,822 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,822 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,822 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,822 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,823 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,823 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,823 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,823 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,823 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,823 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,823 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,823 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,823 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,823 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,823 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,824 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,824 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,824 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,824 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,824 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,824 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,824 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,824 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,824 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,824 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,825 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,825 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,825 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,825 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,825 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,825 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,825 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,825 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,825 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,825 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,825 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,826 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,826 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,826 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,826 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:24:05,826 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,826 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,826 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,826 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,826 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,826 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,827 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,827 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,827 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,827 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,827 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,827 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,827 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,827 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,827 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,827 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:05,828 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:05,828 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,828 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:24:05,828 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,828 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,828 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,828 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,828 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,828 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,828 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,828 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,829 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,829 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,829 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,829 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,829 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,829 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,829 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,829 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,829 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,829 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,830 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,830 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,830 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,830 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,830 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,830 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,830 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,830 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,830 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,830 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,830 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,831 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,831 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,831 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,831 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,831 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,831 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,831 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,831 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,831 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,831 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,832 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,832 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,832 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,832 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,832 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,832 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,832 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,832 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,832 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,832 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,833 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,833 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,833 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,833 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,833 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,833 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,833 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,833 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,833 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,833 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,833 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,834 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,834 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,834 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,834 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,834 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,834 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,834 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,834 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,834 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,834 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:05,834 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,835 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,835 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,835 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,835 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:24:05,835 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,835 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,835 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,835 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,835 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,835 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,836 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,836 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:24:05,836 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,836 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,836 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,836 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,836 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:05,836 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,836 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,836 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,836 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,837 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,837 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,837 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:24:05,837 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,837 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,837 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,837 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,837 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,837 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,837 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,838 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,838 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,838 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:24:05,838 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,838 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,838 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,838 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,838 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,838 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,838 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,838 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,839 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,839 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,839 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,839 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,839 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,839 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,839 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,839 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,839 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,839 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,839 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,840 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,840 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,840 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,840 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,840 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:05,840 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,840 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,840 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,840 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,840 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,841 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,841 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,841 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,841 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,841 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,841 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,841 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,841 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,841 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,841 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,841 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,842 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,842 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,842 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,842 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,842 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,842 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,842 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,842 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,842 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,842 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,842 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,843 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,843 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,843 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,843 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,843 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,843 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,843 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,843 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,843 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,843 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,844 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,844 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,844 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,844 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,844 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,844 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,844 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,844 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,844 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,844 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,844 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,845 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,845 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,845 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:24:05,845 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,845 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,845 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,845 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:24:05,845 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,845 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,845 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,846 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,846 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,846 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,846 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,846 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,846 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,846 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,846 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,846 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:05,846 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,846 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,847 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,847 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,847 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,847 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,847 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,847 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,847 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,847 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,847 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,847 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,848 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:05,848 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:05,848 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,848 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,848 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,848 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:05,848 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,848 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,848 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,848 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,848 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,849 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,849 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,849 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,849 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,849 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,849 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,849 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,849 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,849 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,849 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,850 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:05,850 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,850 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,850 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,850 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,850 matplotlib.font_manager DEBUG findfont: Matching STIXSizeFiveSym:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to STIXSizeFiveSym ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf') with score of 0.050000.
2022-01-04 12:24:05,851 matplotlib.font_manager DEBUG findfont: Matching cmsy10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:24:05,851 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,852 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,852 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,852 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,852 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,852 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,852 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,852 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,852 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,852 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,852 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,853 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,853 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,853 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,853 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,853 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,853 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,853 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,853 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,853 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,853 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,853 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,854 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,854 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,854 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,854 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,854 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,854 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,854 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:05,854 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,854 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,854 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,855 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,855 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,855 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,855 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,855 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,855 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,855 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,855 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,855 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,855 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,855 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,856 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,856 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,856 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,856 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,856 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,856 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,856 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,856 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,856 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,856 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,857 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,857 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,857 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,857 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,857 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,857 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,857 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,857 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,857 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,857 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,857 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,858 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,858 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,858 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,858 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,858 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,858 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,858 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,858 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,858 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,858 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,858 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,859 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,859 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,859 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,859 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,859 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,859 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,859 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,859 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,859 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,859 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,860 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,860 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,860 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,860 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,860 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,860 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,860 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,860 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,860 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,860 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,860 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,861 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,861 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,861 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,861 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,861 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,861 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,861 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,861 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,861 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,861 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,861 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,862 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,862 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,862 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,862 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,862 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,862 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,862 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,862 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,862 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,862 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,862 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,863 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,863 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,863 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,863 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,863 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,863 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,863 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,863 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,863 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,863 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,864 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,864 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,864 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,864 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,864 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,864 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,864 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,864 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,864 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:24:05,864 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,865 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,865 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,865 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,865 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,865 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,865 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,865 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,865 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,865 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,865 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,865 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,866 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,866 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,866 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,866 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:05,866 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:05,866 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,866 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:24:05,866 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,866 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,866 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,866 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,867 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,867 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,867 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,867 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,867 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,867 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,867 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,867 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,867 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,867 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,868 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,868 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,868 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,868 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,868 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,868 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,868 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,868 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,868 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,868 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,868 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,869 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,869 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,869 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,869 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,869 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,869 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,869 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,869 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,869 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,869 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,870 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,870 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,870 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,870 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,870 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,870 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,870 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,870 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,870 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,870 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,870 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,871 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,871 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,871 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,871 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,871 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,871 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,871 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,871 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,871 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,871 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,871 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,872 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,872 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,872 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,872 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,872 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,872 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,872 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,872 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,872 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,872 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,873 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,873 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,873 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:05,873 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,873 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,873 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,873 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,873 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:24:05,873 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,873 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,873 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,874 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,874 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,874 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,874 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,874 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:24:05,874 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,874 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,874 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,874 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,874 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:05,874 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,875 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,875 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,875 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,875 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,875 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,875 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:24:05,875 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,875 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,875 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,875 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,876 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,876 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,876 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,876 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,876 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,876 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:24:05,876 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,876 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,876 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,876 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,876 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,877 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,877 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,877 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,877 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,877 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,877 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,877 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,877 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,877 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,877 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,878 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,878 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,878 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,878 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,878 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,878 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,878 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,878 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,878 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:05,878 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,878 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,879 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,879 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,879 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,879 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,879 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,879 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,879 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,879 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,879 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,879 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,879 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,880 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,880 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,880 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,880 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,880 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,880 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,880 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,880 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,880 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,880 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,881 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,881 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,881 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,881 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,881 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,881 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,881 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,881 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,881 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,881 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,881 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,882 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,882 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,882 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,882 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,882 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,882 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,882 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,882 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,882 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,882 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,882 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,883 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,883 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,883 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,883 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,883 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,883 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:24:05,883 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,883 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,883 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,883 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:24:05,884 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,884 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,884 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,884 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,884 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,884 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,884 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,884 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,884 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,884 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,884 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,885 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:05,885 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,885 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,885 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,885 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,885 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,885 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,885 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,885 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,885 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,885 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,886 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,886 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,886 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:05,886 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:05,886 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,886 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,886 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,886 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:05,886 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,886 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,886 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,887 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,887 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,887 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,887 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,887 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,887 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,887 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,887 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,887 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,887 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,888 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,888 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,888 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:05,888 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,888 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,888 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,888 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,888 matplotlib.font_manager DEBUG findfont: Matching cmsy10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to cmsy10 ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf') with score of 0.050000.
2022-01-04 12:24:05,889 matplotlib.font_manager DEBUG findfont: Matching cmr10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:24:05,889 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,889 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,889 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,890 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,890 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,890 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:05,890 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,890 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,890 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,890 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,890 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,890 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,890 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,891 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,891 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,891 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,891 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,891 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,891 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,891 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,891 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,891 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,891 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,891 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,892 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,892 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,892 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,892 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,892 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,892 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,892 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,892 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,892 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,892 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,893 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,893 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,893 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,893 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,893 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,893 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,893 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,893 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,893 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,893 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,893 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,894 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,894 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,894 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,894 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,894 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,894 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,894 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,894 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,894 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,894 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,894 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,895 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,895 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,895 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,895 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,895 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,895 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,895 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,895 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,895 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,895 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,895 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,896 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,896 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,896 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,896 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,896 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,896 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,896 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,896 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,896 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,896 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,897 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,897 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,897 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,897 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,897 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,897 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,897 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,897 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,897 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,897 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,898 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,898 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,898 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,898 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,898 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,898 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,898 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,898 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,898 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,898 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,898 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,899 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,899 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,899 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,899 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,899 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,899 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,899 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,899 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,899 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,899 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,900 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,900 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,900 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,900 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,900 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,900 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,900 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,900 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,900 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,900 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,901 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,901 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,901 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,901 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,901 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,901 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,901 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,901 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,901 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,901 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,901 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,902 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,902 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,902 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,902 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,902 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,902 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,902 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,902 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:24:05,902 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,902 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,902 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,903 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,903 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,903 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,903 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,903 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,903 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,903 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,903 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,903 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,903 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,903 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,904 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,904 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:05,904 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:05,904 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,904 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:24:05,904 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,904 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,904 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,904 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,904 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,905 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,905 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,905 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,905 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,905 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,905 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,905 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,905 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,905 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,905 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,905 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,906 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,906 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,906 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,906 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,906 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,906 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,906 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,906 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,906 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,906 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,907 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,907 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,907 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,907 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,907 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,907 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,907 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,907 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,907 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,907 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,907 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,908 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,908 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,908 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,908 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,908 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,908 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,908 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,908 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,908 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,908 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,909 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,909 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,909 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,909 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,909 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,909 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,909 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,909 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,909 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,909 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,909 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,910 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,910 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,910 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,910 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,910 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,910 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,910 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,910 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,910 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,910 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,910 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,911 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:05,911 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,911 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,911 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,911 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,911 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:24:05,911 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,911 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,911 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,911 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,912 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,912 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,912 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,912 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:24:05,912 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,912 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,912 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,912 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,912 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:05,912 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,912 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,913 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,913 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,913 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,913 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,913 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:24:05,913 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,913 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,913 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,913 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,913 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,914 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,914 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,914 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,914 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,914 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:24:05,914 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,914 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,914 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,914 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,914 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,914 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,915 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,915 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,915 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,915 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,915 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,915 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,915 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,915 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,915 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,915 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,915 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,916 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,916 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,916 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,916 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,916 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,916 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,916 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:05,916 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,916 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,916 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,917 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,917 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,917 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,917 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,917 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,917 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,917 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,917 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,917 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,917 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,917 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,918 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,918 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,918 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,918 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,918 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,918 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,918 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,918 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,918 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,918 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,919 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,919 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,919 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,919 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,919 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,919 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,919 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,919 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,919 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,919 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,919 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,920 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,920 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,920 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,920 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,920 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,920 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,920 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,920 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,920 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,920 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,921 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,921 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,921 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,921 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,921 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,921 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:24:05,921 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,921 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,921 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,921 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:24:05,921 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,922 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,922 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,922 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,922 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,922 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,922 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,922 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,922 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,922 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,922 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,923 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:05,923 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,923 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,923 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,923 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,923 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,923 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,923 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,923 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,923 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,923 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,924 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,924 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,924 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:05,924 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:05,924 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,924 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,924 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,924 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:05,924 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,924 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,924 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,925 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,925 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,925 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,925 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,925 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,925 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,925 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,925 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,925 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,925 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,926 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,926 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,926 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:05,926 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,926 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,926 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,926 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,926 matplotlib.font_manager DEBUG findfont: Matching cmr10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to cmr10 ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf') with score of 0.050000.
2022-01-04 12:24:05,927 matplotlib.font_manager DEBUG findfont: Matching cmtt10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:24:05,927 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,927 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,927 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,927 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,928 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,928 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,928 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,928 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,928 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,928 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,928 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,928 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,928 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,928 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,928 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,929 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,929 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:05,929 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,929 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,929 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,929 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,929 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,929 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,929 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,929 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,930 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,930 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,930 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,930 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,930 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,930 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,930 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,930 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,930 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,930 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,930 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,931 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,931 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,931 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,931 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,931 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,931 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,931 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,931 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,931 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,931 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,932 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,932 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,932 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,932 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,932 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,932 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,932 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,932 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,932 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,932 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,932 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,933 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,933 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,933 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,933 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,933 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,933 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,933 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,933 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,933 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,933 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,933 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,934 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,934 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,934 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,934 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,934 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,934 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,934 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,934 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,934 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,934 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,935 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,935 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,935 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,935 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,935 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,935 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,935 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,935 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,935 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,935 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,935 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,936 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,936 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,936 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,936 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,936 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,936 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,936 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,936 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,936 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,936 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,936 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,937 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,937 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,937 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,937 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,937 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,937 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,937 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,937 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,937 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,937 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,938 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,938 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,938 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,938 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,938 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,938 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,938 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,938 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,938 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,938 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,938 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,939 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,939 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,939 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,939 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,939 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,939 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,939 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,939 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,939 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,939 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,940 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,940 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,940 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,940 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,940 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,940 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:24:05,940 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,940 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,940 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,940 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,940 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,941 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,941 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,941 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,941 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,941 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,941 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,941 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,941 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,941 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,941 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,941 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:05,942 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:05,942 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,942 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:24:05,942 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,942 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,942 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,942 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,942 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,942 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,942 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,942 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,943 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,943 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,943 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,943 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,943 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,943 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,943 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,943 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,943 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,943 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,944 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,944 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,944 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,944 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,944 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,944 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,944 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,944 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,944 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,944 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,944 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,945 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,945 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,945 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,945 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,945 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,945 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,945 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,945 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,945 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,945 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,946 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,946 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,946 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,946 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,946 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,946 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,946 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,946 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,946 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,946 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,946 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,947 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,947 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,947 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,947 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,947 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,947 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,947 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,947 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,947 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,947 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,948 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,948 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,948 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,948 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,948 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,948 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,948 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,948 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,948 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,948 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:05,948 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,949 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,949 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,949 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,949 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:24:05,949 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,949 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,949 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,949 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,949 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,949 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,949 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,950 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:24:05,950 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,950 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,950 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,950 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,950 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:05,950 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,950 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,950 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,950 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,951 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,951 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,951 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:24:05,951 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,951 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,951 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,951 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,951 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,951 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,951 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,951 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,952 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,952 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:24:05,952 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,952 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,952 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,952 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,952 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,952 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,952 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,952 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,953 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,953 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,953 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,953 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,953 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,953 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,953 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,953 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,953 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,953 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,953 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,954 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,954 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,954 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,954 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,954 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:05,954 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,954 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,954 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,954 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,954 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,954 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,955 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,955 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,955 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,955 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,955 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,955 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,955 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,955 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,955 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,955 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,956 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,956 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,956 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,956 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,956 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,956 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,956 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,956 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,956 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,956 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,956 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,957 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,957 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,957 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,957 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,957 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,957 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,957 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,957 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,957 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,957 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,957 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,958 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,958 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,958 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,958 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,958 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,958 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,958 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,958 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,958 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,958 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,959 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,959 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,959 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:24:05,959 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,959 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,959 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,959 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:24:05,959 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,959 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,959 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,960 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,960 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,960 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,960 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,960 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,960 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,960 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,960 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,960 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:05,960 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,960 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,961 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,961 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,961 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,961 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,961 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,961 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,961 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,961 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,961 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,961 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,961 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:05,962 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:05,962 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,962 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,962 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,962 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:05,962 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,962 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,962 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,962 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,962 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,963 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,963 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,963 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,963 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,963 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,963 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,963 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,963 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,963 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,963 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,963 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:05,964 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,964 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,964 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,964 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,964 matplotlib.font_manager DEBUG findfont: Matching cmtt10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to cmtt10 ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf') with score of 0.050000.
2022-01-04 12:24:05,965 matplotlib.font_manager DEBUG findfont: Matching cmmi10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:24:05,965 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,965 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,965 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,965 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,965 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,965 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,965 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,966 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,966 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,966 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,966 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,966 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,966 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,966 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,966 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,966 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,966 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,967 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,967 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,967 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:05,967 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,967 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,967 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,967 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,967 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,967 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,967 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,967 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,968 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,968 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,968 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,968 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,968 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,968 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,968 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,968 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,968 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,968 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,969 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,969 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,969 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,969 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,969 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,969 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,969 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,969 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,969 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,969 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,970 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,970 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,970 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,970 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,970 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,970 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,970 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,970 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,970 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,970 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,970 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,971 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,971 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,971 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,971 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,971 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,971 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,971 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,971 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,971 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,971 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,971 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,972 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,972 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,972 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,972 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,972 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,972 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,972 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,972 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,972 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,972 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,973 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,973 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,973 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,973 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,973 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,973 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,973 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,973 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,973 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,973 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,973 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,974 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,974 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,974 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,974 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,974 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,974 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,974 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,974 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,974 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,974 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,975 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,975 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,975 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,975 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,975 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,975 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,975 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,975 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,975 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,975 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,975 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,976 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,976 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,976 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,976 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,976 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,976 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,976 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,976 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,976 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,976 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,977 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,977 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,977 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,977 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,977 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,977 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,977 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,977 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,977 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,977 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,977 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,978 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,978 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,978 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,978 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:24:05,978 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,978 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,978 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,978 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,978 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,978 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,978 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,979 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,979 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,979 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,979 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,979 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,979 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,979 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,979 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,979 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:05,979 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:05,980 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,980 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:24:05,980 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,980 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,980 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,980 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,980 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,980 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,980 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,980 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,980 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,981 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,981 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,981 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,981 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,981 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,981 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,981 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,981 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,981 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,981 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,982 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,982 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,983 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,983 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,983 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,983 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,983 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,983 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,983 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,983 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,983 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,983 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,983 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,984 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,984 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,984 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,984 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,984 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,984 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,984 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,984 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,984 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,984 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,984 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,985 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,985 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,985 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,985 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,985 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,985 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,985 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,985 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,985 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,985 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,985 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,986 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,986 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,986 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,986 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,986 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,986 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,986 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:05,986 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,986 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,986 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,987 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,987 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:24:05,987 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,987 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,987 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,987 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,987 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,987 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,987 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,987 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:24:05,988 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,988 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,988 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,988 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,988 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:05,988 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,988 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,988 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,988 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,988 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,988 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,989 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:24:05,989 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,989 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,989 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,989 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,989 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,989 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,989 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,989 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,989 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,989 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:24:05,990 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,990 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,990 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,990 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,990 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,990 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,990 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,990 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,990 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,990 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,991 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,991 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,991 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,991 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,991 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,991 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,991 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,991 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,991 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,991 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,991 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,992 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,992 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,992 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:05,992 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,992 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,992 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,992 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,992 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,992 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,992 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,993 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,993 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,993 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,993 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,993 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,993 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,993 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:05,993 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,993 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,993 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,993 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,994 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,994 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,994 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,994 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,995 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,995 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,995 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,995 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:05,995 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,995 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,995 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:05,995 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,995 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,995 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,996 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:05,996 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,996 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,996 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,996 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,996 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,996 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,996 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,996 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,996 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,996 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,997 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:24:05,997 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,997 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,997 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,997 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:24:05,997 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,997 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,997 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,997 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,997 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,998 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,998 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,998 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:05,998 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,998 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,998 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,998 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:05,998 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,998 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,998 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:05,998 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,999 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,999 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,999 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,999 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:05,999 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:05,999 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:05,999 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:05,999 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:05,999 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:05,999 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:05,999 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,0 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,0 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,0 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:06,0 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,0 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,0 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,0 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,0 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,0 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,0 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,1 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,1 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,1 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,1 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,1 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,1 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,1 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,1 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,1 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:06,1 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,1 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,2 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,2 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,2 matplotlib.font_manager DEBUG findfont: Matching cmmi10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to cmmi10 ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf') with score of 0.050000.
2022-01-04 12:24:06,2 matplotlib.font_manager DEBUG findfont: Matching cmb10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:24:06,3 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,3 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,3 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,3 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,3 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,3 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,3 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,3 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,4 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,4 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,4 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,4 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,4 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,4 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,4 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,4 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,4 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,4 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,5 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,5 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,5 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,5 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,5 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,5 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,5 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,5 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,5 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,5 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,5 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,6 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,6 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,6 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,6 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,6 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:06,6 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,6 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,6 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,6 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,6 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,7 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,7 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,7 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,7 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,7 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,7 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,7 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,7 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,7 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,7 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,7 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,8 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,8 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,8 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,8 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,8 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,8 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,8 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,8 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,8 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,8 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,9 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,9 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,9 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,9 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,9 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,9 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,9 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,9 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,9 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,9 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,9 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,10 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,10 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,11 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,11 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:06,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,11 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,11 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,12 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,12 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,12 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,12 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,13 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,13 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,13 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,14 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,14 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,14 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,14 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,14 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,15 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:24:06,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,16 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,16 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:06,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:06,17 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:24:06,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,18 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,18 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,19 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,19 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,19 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,19 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,19 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,19 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,19 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,19 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,19 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:06,19 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,20 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,20 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,20 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,20 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,20 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,20 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,20 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,20 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,20 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,20 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,20 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,21 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,21 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,21 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,21 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,21 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,21 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,21 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,21 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,21 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,21 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,22 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,22 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,22 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,22 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,22 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,22 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,22 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,22 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,22 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,22 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,22 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,23 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,23 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,23 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,23 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,23 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,24 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,24 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,24 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,24 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,24 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,24 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,24 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:06,24 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,24 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,24 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,25 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,25 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:24:06,25 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,25 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,25 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,25 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,25 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,25 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,25 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,25 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:24:06,25 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,26 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,26 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,26 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,26 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:06,26 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,26 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,26 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,26 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,26 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,26 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,27 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:24:06,27 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,27 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,27 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,27 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,27 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,27 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,27 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,27 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,27 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,27 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:24:06,28 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,28 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,28 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,28 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,28 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,28 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,28 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,28 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,28 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,28 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,29 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,29 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,29 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,29 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,29 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,29 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,29 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,29 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,29 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,29 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,29 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,30 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,30 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,30 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:06,30 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,30 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,30 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,30 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,30 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,30 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,30 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,31 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,31 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,31 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,31 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,31 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,31 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,31 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,31 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,31 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,31 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,31 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,32 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,32 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,32 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,32 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,32 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,32 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,32 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,32 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,32 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,32 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,33 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,33 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,33 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,33 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,33 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:06,33 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,33 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,33 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,33 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,33 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,33 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,34 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,34 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,34 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,34 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,34 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,34 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,34 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,34 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,34 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,34 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,34 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,35 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:24:06,35 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,35 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,35 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,35 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:24:06,35 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,35 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,35 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,35 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,35 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,36 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,36 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,36 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,36 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,36 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,36 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,36 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:06,36 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,36 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,36 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,36 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,37 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,37 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,37 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,37 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,37 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,37 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,37 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,37 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,37 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:06,37 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:06,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,38 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:06,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,38 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,39 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:06,39 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,40 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,40 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,40 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,40 matplotlib.font_manager DEBUG findfont: Matching cmb10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to cmb10 ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf') with score of 0.050000.
2022-01-04 12:24:06,41 matplotlib.font_manager DEBUG findfont: Matching cmss10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:24:06,41 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,41 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,41 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,41 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,41 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,41 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,41 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,42 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,42 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,42 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,42 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,42 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,42 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,42 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,42 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,42 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,42 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,42 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,43 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,43 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,43 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,43 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,43 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,43 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,43 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,43 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,43 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:06,43 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,44 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,44 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,44 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,44 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,44 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,44 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,44 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,44 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,44 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,44 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,44 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,45 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,45 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,45 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,45 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,45 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,45 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,45 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,45 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,45 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,45 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,46 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,46 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,46 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,46 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,46 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,46 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,46 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,46 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,46 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,46 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,46 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,47 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,47 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,47 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,47 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,47 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,47 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,47 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,47 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,47 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,47 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,47 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,48 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,48 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,48 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,48 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,48 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,48 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,48 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,48 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,48 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,48 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,49 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,49 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:06,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,49 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,49 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,50 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,50 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,50 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,50 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,50 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,50 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,50 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,50 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,50 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,50 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,50 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,51 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,51 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,51 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,51 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,51 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,51 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,51 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,51 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,51 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,51 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,52 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,52 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,52 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,52 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,52 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,52 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,52 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,52 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,52 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,52 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,52 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,53 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,53 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,53 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,53 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,53 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,53 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,53 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,53 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,53 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,53 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,54 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,54 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,54 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:24:06,54 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,54 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,54 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,54 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,54 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,54 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,54 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,54 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,55 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,55 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,55 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,55 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,55 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,55 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,55 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,55 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:06,55 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:06,55 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,56 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:24:06,56 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,56 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,56 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,56 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,56 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,56 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,56 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,56 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,56 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,56 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,57 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,57 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,57 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,57 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,57 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,57 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,57 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,57 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,57 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:06,57 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,58 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,58 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,58 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,58 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,58 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,58 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,58 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,58 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,58 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,58 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,58 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,59 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,59 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,59 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,59 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,59 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,59 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,59 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,59 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,59 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,59 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,59 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,60 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,60 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,60 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,60 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,60 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,60 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,60 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,60 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,60 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,60 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,61 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,61 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,61 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,61 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,61 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,61 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,61 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,61 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,61 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,61 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,61 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,62 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,62 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,62 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,62 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,62 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,62 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,62 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:06,62 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,62 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,62 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,63 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,63 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:24:06,63 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,63 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,63 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,63 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,63 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,63 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,63 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,63 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:24:06,63 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,64 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,64 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,64 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,64 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:06,64 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,64 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,64 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,64 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,64 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,64 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,64 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:24:06,65 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,65 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,65 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,65 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,65 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,65 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,65 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,65 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,65 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,65 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:24:06,66 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,66 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,66 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,66 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,66 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,66 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,66 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,66 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,66 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,66 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,66 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,67 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,67 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,67 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,67 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,67 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,67 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,67 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,67 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,67 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,67 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,68 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:06,68 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,68 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,68 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,68 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,68 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,69 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,69 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,69 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,69 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,69 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,69 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,69 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,69 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,69 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,69 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,69 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,70 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,70 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,70 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,70 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,71 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,71 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,71 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:06,71 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,71 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,71 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,71 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,72 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,72 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,72 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:24:06,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,73 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:24:06,73 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,73 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,73 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,73 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,74 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,74 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,74 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,74 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,74 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,74 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:06,74 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,74 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,74 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,74 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,74 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,75 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,75 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,75 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:06,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:06,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,75 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,76 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:06,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,76 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,77 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,77 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,77 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,77 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,77 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,77 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,77 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:06,77 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,77 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,77 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,78 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,78 matplotlib.font_manager DEBUG findfont: Matching cmss10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to cmss10 ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf') with score of 0.050000.
2022-01-04 12:24:06,78 matplotlib.font_manager DEBUG findfont: Matching cmex10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:24:06,79 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,79 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,79 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:06,79 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,79 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,79 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,79 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,79 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,79 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,79 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,80 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,80 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,80 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,80 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,80 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,80 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,80 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,80 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,80 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,80 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,81 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,81 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,81 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,81 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,81 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,81 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,81 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,81 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,81 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,81 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,81 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,82 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,82 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,82 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,82 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,82 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,82 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,82 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,82 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,82 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,82 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,83 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,83 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,83 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,83 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,83 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,83 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,83 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,83 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,83 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,83 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,83 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,84 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,84 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,84 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,84 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,84 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,84 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,84 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,84 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,84 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,84 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,84 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,85 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,85 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,85 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,85 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,85 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,85 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,85 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,85 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,85 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,85 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,86 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,86 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,86 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,86 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,86 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,86 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,86 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,86 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,86 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,86 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,86 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,87 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:06,87 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,87 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,87 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,87 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,87 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,87 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,87 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,87 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,87 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,88 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,88 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,88 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,88 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,88 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,88 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,88 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,88 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,88 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,88 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,88 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,89 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,89 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,89 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,89 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,89 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,89 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,89 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,89 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,89 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,89 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,89 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,90 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,90 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,90 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,90 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,90 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,90 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,90 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,90 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,90 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,90 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,91 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:24:06,92 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,92 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,92 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,92 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,92 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,92 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,92 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,92 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,92 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,92 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,93 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,93 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,93 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,93 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,93 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,93 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:06,93 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:06,93 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,93 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:24:06,93 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,93 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,94 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,94 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,94 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,94 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,94 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,94 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,94 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,94 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,94 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,94 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,95 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,95 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,95 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,95 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,95 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,95 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,95 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:06,95 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,95 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,95 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,95 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,96 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,96 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,96 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,96 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,96 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,96 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,96 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,96 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,96 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,96 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,97 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,97 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,97 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,97 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,97 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,97 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,97 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,97 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,97 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,97 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,97 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,98 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,98 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,98 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,98 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,98 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,98 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,98 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,98 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,98 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,98 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,98 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,99 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,99 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,99 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,99 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,99 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,99 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,99 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,99 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,99 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,99 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,99 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,100 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,100 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,100 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,100 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:06,100 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,100 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,100 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,100 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,100 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:24:06,100 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,100 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,101 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,101 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,101 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,101 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,101 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,101 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:24:06,101 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,101 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,101 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,101 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,102 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:06,102 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,102 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,102 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,102 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,102 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,102 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,102 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:24:06,102 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,102 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,103 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,103 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,103 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,103 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,103 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,103 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,103 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,103 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:24:06,103 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,103 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,103 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,104 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,104 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,104 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,104 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,104 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,104 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,104 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,104 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,104 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,104 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,105 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,105 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,105 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,105 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,105 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,105 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,105 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,105 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,105 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,105 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,105 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:06,106 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,106 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,106 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,106 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,106 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,106 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,106 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,106 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,106 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,106 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,107 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,107 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,107 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,107 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,107 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,107 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,107 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,107 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,107 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,107 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,108 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,108 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,108 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,108 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,108 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,108 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,108 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,108 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,108 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,108 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,108 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,109 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,109 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:06,109 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,109 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,109 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,109 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,109 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,109 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,109 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,109 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,109 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,110 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,110 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,110 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,110 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,110 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,110 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,110 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,110 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,110 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:24:06,110 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,111 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,111 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,111 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:24:06,111 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,111 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,111 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,111 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,111 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,111 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,111 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,112 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,112 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,112 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,112 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,112 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:06,112 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,112 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,112 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,112 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,112 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,112 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,113 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,113 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,113 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,113 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,113 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,113 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,113 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:06,113 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:06,113 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,113 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,113 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:06,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,114 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,115 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:06,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,115 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,115 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,116 matplotlib.font_manager DEBUG findfont: Matching cmex10:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to cmex10 ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf') with score of 0.050000.
2022-01-04 12:24:06,116 matplotlib.font_manager DEBUG findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:24:06,117 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,117 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:06,117 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,117 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-01-04 12:24:06,117 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,117 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,117 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,117 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,118 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,118 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,118 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,118 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,118 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-01-04 12:24:06,118 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,118 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:24:06,118 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,118 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,118 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,118 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,119 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,119 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,119 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,119 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,119 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,119 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,119 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,119 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,119 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,119 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,119 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,120 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,120 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,120 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,120 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,120 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,120 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,120 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,120 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,120 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,120 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,120 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,121 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,121 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,121 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,121 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,121 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,121 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,121 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,121 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,121 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,121 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,122 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,122 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,122 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,122 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,122 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,122 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,122 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,122 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,122 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,122 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,123 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,123 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,123 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,123 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,123 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,123 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,123 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,123 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,123 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,123 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,123 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,124 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,124 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,125 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,125 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,125 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:06,125 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,125 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,125 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,125 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,125 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,125 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,125 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,126 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,126 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,126 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,126 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,126 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,126 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,126 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,126 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,126 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,126 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,127 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,127 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,127 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,127 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,127 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,127 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,127 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,127 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,127 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,127 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,127 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,128 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,128 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,128 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,128 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,128 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,128 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,128 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,128 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,128 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,128 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,129 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,129 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,129 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,129 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,129 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,129 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,129 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,129 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,129 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,129 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,130 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,130 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,130 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,130 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:24:06,130 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,130 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,130 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,130 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,130 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,130 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,130 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,131 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,131 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,131 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,131 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,131 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,131 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,131 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,131 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,131 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:06,131 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:06,132 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,132 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:24:06,132 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,132 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,132 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,132 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,132 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,132 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,132 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,132 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,132 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,133 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,133 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,133 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,133 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,133 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,133 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,133 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,133 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,133 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,133 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:06,134 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,134 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,134 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,134 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,134 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,134 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,134 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,134 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,134 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,134 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,135 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,135 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,135 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,135 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,135 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,135 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,135 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,135 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,135 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,135 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,135 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,136 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,136 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:24:06,136 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,136 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,136 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,136 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,136 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,136 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,136 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,136 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,137 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,137 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,137 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,137 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,137 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,137 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,137 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,137 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,137 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,137 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,137 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,138 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,138 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,138 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,138 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,138 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,138 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,138 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,138 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,138 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:06,138 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,138 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,139 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,139 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,139 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:24:06,139 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,139 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,139 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,139 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,139 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,139 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,139 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,140 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:24:06,140 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,140 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,140 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,140 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,140 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:06,140 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,140 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,140 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,140 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,140 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,141 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,141 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:24:06,141 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,141 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,141 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,141 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,141 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,141 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,141 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,141 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,142 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,142 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:24:06,142 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,142 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,142 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,142 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,142 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,142 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,142 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,142 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,142 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,143 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,143 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,143 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,143 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,143 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,143 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,143 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,143 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,143 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,143 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,143 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,144 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,144 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,144 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,144 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:06,144 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,144 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,144 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,144 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,144 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,144 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,145 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,145 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,145 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,145 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,145 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,145 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,145 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,145 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,145 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,145 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,145 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,146 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,146 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,146 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,146 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,146 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,146 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,146 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,146 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:06,146 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,146 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,146 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,147 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,147 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,147 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,147 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,147 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:06,147 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,147 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,147 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,147 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,147 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,148 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,148 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,148 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,148 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,148 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,148 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,148 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,148 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,148 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,148 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,148 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,149 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,149 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:24:06,149 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,149 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,149 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,149 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:24:06,149 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,149 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,149 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,149 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,149 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,150 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,150 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,150 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,150 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,150 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,150 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,150 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:06,150 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,150 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,150 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,151 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,151 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,151 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,151 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,151 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,151 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,151 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,151 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,151 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,151 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:06,151 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:06,152 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,152 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,152 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,152 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:06,152 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,152 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,152 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,152 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,152 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,152 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,153 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,153 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,153 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,153 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,153 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,153 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,153 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,153 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,153 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,153 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:06,153 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,154 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,154 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,154 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,154 matplotlib.font_manager DEBUG findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-01-04 12:24:06,155 matplotlib.font_manager DEBUG findfont: Matching DejaVu Sans:style=italic:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:24:06,155 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,155 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 1.05
2022-01-04 12:24:06,155 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,155 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 0.15000000000000002
2022-01-04 12:24:06,155 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,155 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,156 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,156 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,156 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,156 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,156 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,156 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,156 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 0.43499999999999994
2022-01-04 12:24:06,156 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:06,156 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 1.335
2022-01-04 12:24:06,156 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,156 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,157 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,157 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,157 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,157 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:06,157 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,157 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,157 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,157 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,157 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,157 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,158 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,158 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,158 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,158 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:06,158 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:06,158 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,158 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,158 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,158 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,158 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,158 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,159 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,159 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,159 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,159 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,159 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:06,159 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,159 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,159 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,159 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,159 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,159 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,160 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,160 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,160 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,160 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,160 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,160 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:06,160 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,160 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,160 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,160 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,161 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,161 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:06,161 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,161 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,161 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:06,161 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,161 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:06,161 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,161 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,161 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,161 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,162 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,162 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,162 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,162 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,162 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,162 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:06,162 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,162 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,162 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,162 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,163 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,163 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 11.145
2022-01-04 12:24:06,163 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:06,163 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,163 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 10.34
2022-01-04 12:24:06,163 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,163 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,163 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,163 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:06,163 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 11.145
2022-01-04 12:24:06,163 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,164 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,164 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:06,164 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,164 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,164 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,164 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,164 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,164 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,164 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,164 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,165 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,165 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,165 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,165 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,165 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,165 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,165 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,165 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,165 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,165 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,165 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,166 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 11.25
2022-01-04 12:24:06,166 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,166 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,166 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,166 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,166 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,166 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:06,166 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,166 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,166 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,167 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,167 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2022-01-04 12:24:06,167 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,167 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,167 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,167 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,167 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,167 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,167 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,167 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,167 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,168 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,168 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,168 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,168 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 10.54
2022-01-04 12:24:06,168 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,168 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,168 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,168 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,168 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,168 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,169 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 11.145
2022-01-04 12:24:06,169 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,169 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,169 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,169 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,169 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,169 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 11.25
2022-01-04 12:24:06,169 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:06,169 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,169 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 10.35
2022-01-04 12:24:06,169 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 10.145
2022-01-04 12:24:06,170 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:06,170 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 10.535
2022-01-04 12:24:06,170 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,170 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,170 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,170 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,170 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,170 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,170 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,170 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,170 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,171 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,171 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,171 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,171 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 11.25
2022-01-04 12:24:06,171 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,171 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,171 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,171 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,171 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,171 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 10.34
2022-01-04 12:24:06,172 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,172 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,172 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,172 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,172 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,172 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,172 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,172 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,172 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:06,172 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,173 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:06,173 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,173 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 11.24
2022-01-04 12:24:06,173 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,173 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,173 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,173 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,173 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,173 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,173 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,173 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,174 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,174 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 1.335
2022-01-04 12:24:06,174 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,174 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,174 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,174 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,174 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,174 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,174 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,174 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,175 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,175 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:06,175 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,175 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,175 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:06,175 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,175 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,175 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,175 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 11.24
2022-01-04 12:24:06,175 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,175 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,176 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,176 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,176 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,176 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:06,176 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,176 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,176 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:06,176 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,176 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 11.535
2022-01-04 12:24:06,176 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,177 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,177 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,177 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,177 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 11.44
2022-01-04 12:24:06,177 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,177 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,177 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 11.145
2022-01-04 12:24:06,177 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 11.24
2022-01-04 12:24:06,177 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,177 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,177 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,178 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 10.25
2022-01-04 12:24:06,178 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,178 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,178 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,178 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:06,178 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 10.145
2022-01-04 12:24:06,178 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,178 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,178 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:06,178 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,178 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,179 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:06,179 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 10.634999999999998
2022-01-04 12:24:06,179 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,179 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:06,179 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,179 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,179 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:06,179 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,179 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,179 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,180 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,180 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 11.1925
2022-01-04 12:24:06,180 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,180 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,180 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,180 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,180 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:06,180 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,180 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2022-01-04 12:24:06,180 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,180 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,181 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,181 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,181 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,181 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,181 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:06,181 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,181 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,181 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,181 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,181 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,182 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,182 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,182 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,182 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:06,182 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 11.535
2022-01-04 12:24:06,182 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,182 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:06,182 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:06,182 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,182 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,182 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,183 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,183 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,183 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,183 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,183 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:06,183 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,183 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,183 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 11.145
2022-01-04 12:24:06,183 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,183 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,184 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,184 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,184 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,184 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,184 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,184 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,184 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,184 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,184 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 1.05
2022-01-04 12:24:06,184 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,185 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,185 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,185 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,185 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,185 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,185 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,185 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 10.34
2022-01-04 12:24:06,185 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,185 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,185 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 11.24
2022-01-04 12:24:06,185 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,186 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,186 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,186 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:06,186 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,186 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,186 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,186 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,186 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,186 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,186 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,187 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,187 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,187 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,187 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 10.245
2022-01-04 12:24:06,187 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,187 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,187 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,187 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 10.24
2022-01-04 12:24:06,187 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,187 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,187 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,188 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,188 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,188 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,188 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,188 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,188 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,188 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,188 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:06,188 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 10.35
2022-01-04 12:24:06,188 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,188 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,189 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,189 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,189 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,189 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,189 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,189 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:06,189 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,189 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 11.25
2022-01-04 12:24:06,189 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,189 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,190 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 10.145
2022-01-04 12:24:06,190 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 10.145
2022-01-04 12:24:06,190 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,190 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,190 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,190 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 11.335
2022-01-04 12:24:06,190 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,190 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,190 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 11.145
2022-01-04 12:24:06,190 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:06,190 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-01-04 12:24:06,191 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,191 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,191 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,191 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-01-04 12:24:06,191 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,191 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 11.05
2022-01-04 12:24:06,191 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:06,191 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 10.05
2022-01-04 12:24:06,191 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,191 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,192 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 11.335
2022-01-04 12:24:06,192 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,192 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 10.335
2022-01-04 12:24:06,192 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,192 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-01-04 12:24:06,192 matplotlib.font_manager DEBUG findfont: Matching DejaVu Sans:style=italic:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf') with score of 0.150000.
2022-01-04 12:24:06,193 matplotlib.font_manager DEBUG findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=bold:stretch=normal:size=12.0.
2022-01-04 12:24:06,193 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,193 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.33499999999999996
2022-01-04 12:24:06,193 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,194 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.335
2022-01-04 12:24:06,194 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,194 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,194 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,194 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,194 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,194 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,194 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,194 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,194 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.05
2022-01-04 12:24:06,195 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:06,195 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.05
2022-01-04 12:24:06,195 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,195 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,195 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,195 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,195 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,195 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:06,195 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,195 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,195 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,196 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,196 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,196 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,196 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,196 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,196 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,196 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:06,196 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:06,196 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,196 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,197 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,197 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,197 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,197 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,197 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,197 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,197 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,197 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,197 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:06,197 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,197 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,198 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,198 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,198 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,198 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,198 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,198 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,198 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,198 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,198 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,198 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:06,199 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,199 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,199 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,199 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,199 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,199 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:06,199 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,199 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,199 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:06,199 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,199 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:06,200 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,200 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,200 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,200 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,200 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,200 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,200 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,200 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,200 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,200 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:06,201 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,201 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,201 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,201 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,201 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,201 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.43
2022-01-04 12:24:06,201 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:06,201 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,201 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.145
2022-01-04 12:24:06,201 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,201 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,202 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,202 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:06,202 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.43
2022-01-04 12:24:06,202 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,202 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,202 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:06,202 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,202 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,202 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,202 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,202 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,203 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,203 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,203 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,203 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,203 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,203 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,203 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,203 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,203 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,203 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,204 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,204 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,204 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,204 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,204 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.535
2022-01-04 12:24:06,204 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,204 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,204 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,204 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,204 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,204 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:06,205 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,205 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,205 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,205 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,205 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2022-01-04 12:24:06,205 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,205 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,205 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,205 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,205 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,206 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,206 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,206 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,206 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,206 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,206 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,206 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,206 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.344999999999999
2022-01-04 12:24:06,206 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,206 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,206 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,207 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,207 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,207 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,207 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.43
2022-01-04 12:24:06,207 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,207 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,207 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,207 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,207 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,207 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.535
2022-01-04 12:24:06,207 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:06,208 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,208 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.535
2022-01-04 12:24:06,208 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.24
2022-01-04 12:24:06,208 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:06,208 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.25
2022-01-04 12:24:06,208 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,208 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,208 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,208 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,208 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,209 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,209 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,209 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,209 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,209 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,209 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,209 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,209 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.535
2022-01-04 12:24:06,209 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,209 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,209 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,210 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,210 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,210 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.145
2022-01-04 12:24:06,210 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,210 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,210 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,210 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,210 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,210 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,210 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,211 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,211 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:06,211 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,211 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:06,211 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,211 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.145
2022-01-04 12:24:06,211 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,211 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,211 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,211 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,211 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,212 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,212 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,212 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,212 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,212 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.05
2022-01-04 12:24:06,212 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,212 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,212 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,212 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,212 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,213 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,213 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,213 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,213 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,213 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:06,213 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,213 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,213 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:06,213 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,213 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,213 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,214 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.145
2022-01-04 12:24:06,214 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,214 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,214 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,214 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,214 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,214 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:06,214 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,214 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,214 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:06,214 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,215 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.25
2022-01-04 12:24:06,215 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,215 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,215 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,215 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,215 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.344999999999999
2022-01-04 12:24:06,215 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,215 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,215 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.43
2022-01-04 12:24:06,215 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.145
2022-01-04 12:24:06,216 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,216 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,216 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,216 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.535
2022-01-04 12:24:06,216 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,216 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,216 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,216 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:06,216 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.43
2022-01-04 12:24:06,216 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,216 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,217 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:06,217 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,217 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,217 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:06,217 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.25
2022-01-04 12:24:06,217 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,217 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:06,217 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,217 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,217 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:06,218 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,218 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,218 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,218 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,218 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.4775
2022-01-04 12:24:06,218 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,218 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,218 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,218 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,218 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:06,218 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,219 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2022-01-04 12:24:06,219 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,219 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,219 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,219 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,219 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,219 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,219 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:06,219 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,219 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,219 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,220 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,220 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,220 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,220 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,220 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,220 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:06,220 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.25
2022-01-04 12:24:06,220 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,220 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:06,220 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:06,221 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,221 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,221 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,221 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,221 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,221 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,221 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,221 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:06,221 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,221 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,221 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.43
2022-01-04 12:24:06,222 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,222 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,222 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,222 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,222 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,222 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,222 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,222 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,222 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,222 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,223 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.33499999999999996
2022-01-04 12:24:06,223 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,223 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,223 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,223 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,223 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,223 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,223 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,223 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.145
2022-01-04 12:24:06,223 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,223 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,224 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.145
2022-01-04 12:24:06,224 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,224 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,224 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,224 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:06,224 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,224 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,224 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,224 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,224 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,224 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,225 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,225 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,225 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,225 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,225 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.43
2022-01-04 12:24:06,225 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,225 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,225 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,225 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.145
2022-01-04 12:24:06,225 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,226 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,226 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,226 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,226 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,226 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,226 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,226 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,226 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,226 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,226 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:06,226 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.535
2022-01-04 12:24:06,227 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,227 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,227 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,227 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,227 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,227 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,227 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,227 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:06,227 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,227 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.535
2022-01-04 12:24:06,228 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,228 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,228 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.43
2022-01-04 12:24:06,228 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.24
2022-01-04 12:24:06,228 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,228 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,228 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,228 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.62
2022-01-04 12:24:06,228 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,228 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,228 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.24
2022-01-04 12:24:06,229 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:06,229 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-01-04 12:24:06,229 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,229 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,229 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,229 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-01-04 12:24:06,229 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,229 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.335
2022-01-04 12:24:06,229 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:06,229 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.335
2022-01-04 12:24:06,230 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,230 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,230 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.62
2022-01-04 12:24:06,230 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,230 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.05
2022-01-04 12:24:06,230 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,230 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-01-04 12:24:06,230 matplotlib.font_manager DEBUG findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=bold:stretch=normal:size=12.0 to DejaVu Sans ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf') with score of 0.050000.
2022-01-04 12:24:06,231 matplotlib.font_manager DEBUG findfont: Matching DejaVu Sans Mono:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:24:06,231 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,231 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,231 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,231 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,232 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,232 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,232 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,232 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,232 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,232 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,232 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,232 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,232 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,232 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,233 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,233 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:06,233 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,233 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-01-04 12:24:06,233 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,233 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,233 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,233 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,233 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,233 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,234 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,234 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,234 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,234 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,234 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,234 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:24:06,234 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-01-04 12:24:06,234 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,234 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,234 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,234 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,235 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,235 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,235 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,235 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,235 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,235 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,235 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,235 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,235 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,235 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,235 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,236 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,236 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,236 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,236 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:06,236 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,236 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,236 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,236 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,236 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,236 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,237 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,237 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,237 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,237 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,237 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,237 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,237 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,237 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,237 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,237 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,237 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,238 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,238 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,238 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,238 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,238 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,238 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,238 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,238 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,238 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,238 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,239 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,239 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,239 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,239 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,239 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,239 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,239 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,239 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:06,239 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,239 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,239 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,240 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,240 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,240 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,240 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,240 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,240 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,240 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,240 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,240 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,240 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,241 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,241 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,241 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,241 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,241 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,241 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,241 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,241 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,241 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,241 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,241 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,242 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,242 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,242 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,242 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,242 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,242 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,242 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,242 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,242 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,242 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,242 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,243 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,243 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,243 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,243 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,243 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,243 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,243 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,243 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,243 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,243 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,243 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,244 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,244 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,244 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,244 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,244 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,244 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:24:06,244 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,244 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,244 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,244 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,244 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,245 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,245 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,245 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,245 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,245 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,245 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,245 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,245 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,245 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,245 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,246 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:06,246 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:06,246 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,246 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:24:06,246 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,246 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,246 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,246 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,246 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,246 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,247 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,247 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,247 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,247 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,247 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,247 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,247 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,247 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,247 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,247 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,247 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,248 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,248 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:06,248 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,248 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,248 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,248 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,248 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,248 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,248 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,248 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,248 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,249 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,249 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,249 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,249 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,249 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,249 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,249 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,249 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,249 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,249 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,250 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,250 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,250 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,250 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,250 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,250 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,250 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,250 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,250 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,250 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,250 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,251 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,251 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,251 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,251 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,251 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,251 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,251 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,251 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,251 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,251 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,252 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,252 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,252 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,252 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,252 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,252 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,252 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,252 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,252 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,252 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,253 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:06,253 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,253 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,253 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,253 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,253 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:24:06,253 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,253 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,253 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,253 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,253 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,254 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,254 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,254 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:24:06,254 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,254 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,254 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,254 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,254 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:06,254 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,254 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,254 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,255 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,255 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,255 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,255 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:24:06,255 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,255 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,255 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,255 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,255 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,255 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,256 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,256 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,256 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,256 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:24:06,256 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,256 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,256 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,256 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,256 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,256 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,256 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,257 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,257 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,257 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,257 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,257 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,257 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,257 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,257 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,257 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,257 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,258 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,258 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,258 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,258 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,258 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,258 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,258 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:06,258 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,258 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,258 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,259 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,259 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,259 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,259 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,259 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,259 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,259 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,259 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,259 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,259 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,259 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,260 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,260 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,260 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,260 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,260 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,260 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,260 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,260 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,260 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,260 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,261 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,261 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,261 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,261 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,261 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,261 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,261 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,261 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,261 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:06,261 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,261 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,262 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,262 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,262 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,262 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,262 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,262 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,262 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,262 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,262 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,262 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,262 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,263 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,263 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,263 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,263 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,263 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:24:06,263 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,263 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,263 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,263 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:24:06,263 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,264 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,264 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,264 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,264 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,264 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,264 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,264 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,264 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,264 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,264 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,264 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:06,265 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,265 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,265 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,265 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,265 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,265 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,265 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,265 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,265 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,265 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,265 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,266 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,266 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:06,266 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:06,266 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,266 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,266 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,266 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:06,266 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,266 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,266 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,266 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,267 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,267 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,267 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,267 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,267 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,267 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,267 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,267 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,267 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,267 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,268 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,268 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:06,268 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,268 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,268 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,268 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:24:06,268 matplotlib.font_manager DEBUG findfont: Matching DejaVu Sans Mono:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans Mono ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf') with score of 0.050000.
2022-01-04 12:24:06,269 matplotlib.font_manager DEBUG findfont: Matching DejaVu Sans Display:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:24:06,269 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,269 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,269 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,269 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,269 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,270 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,270 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:06,270 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,270 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,270 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,270 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,270 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,270 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,270 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,270 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,271 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,271 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,271 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,271 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,271 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,271 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,271 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,271 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,271 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,271 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,271 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,272 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,272 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,272 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,272 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,272 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,272 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,272 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,272 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,272 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,272 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,273 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,273 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,273 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,273 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,273 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,273 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,273 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,273 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,273 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,273 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,273 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,274 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,274 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,274 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,274 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,274 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,274 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,274 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,274 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,274 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,274 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,275 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,275 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,275 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,275 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,275 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,275 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,275 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,275 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,275 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,275 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,275 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,276 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,276 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,277 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,277 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,277 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,277 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,277 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,277 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:06,277 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,277 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,277 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,277 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,278 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,278 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,278 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,278 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,278 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,278 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,278 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,278 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,278 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,278 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,279 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,279 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,279 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,280 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,280 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,280 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,280 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,280 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,280 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,280 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,280 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,280 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,280 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,280 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,281 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:24:06,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,282 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,282 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,283 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,283 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,283 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,283 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,283 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,283 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,283 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,283 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,283 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,283 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,284 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:06,284 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:06,284 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,284 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:24:06,284 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,284 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,284 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,284 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,284 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,284 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,284 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,285 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,285 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,285 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,285 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,285 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,285 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,285 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,285 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,285 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,285 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,286 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,286 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:06,286 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,286 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,286 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,286 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,286 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,286 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,286 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,286 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,286 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,287 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,287 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,287 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,287 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,287 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,287 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,287 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,287 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,287 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,287 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,288 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,288 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,288 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,288 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,288 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,288 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,288 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,288 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,288 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,288 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,288 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,289 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,289 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,289 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,289 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,289 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,289 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,289 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,289 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,289 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,289 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,290 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,290 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,290 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,290 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,290 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,290 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,290 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,290 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,290 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,290 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,290 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:06,291 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,291 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,291 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,291 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,291 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:24:06,291 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,291 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,291 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,291 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,291 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,292 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,292 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,292 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:24:06,292 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,292 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,292 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,292 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,292 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:06,292 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,292 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,292 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,293 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,293 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,293 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,293 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:24:06,293 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,293 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,293 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,293 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,293 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,293 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,294 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,294 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,294 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,294 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:24:06,294 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,294 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,294 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,294 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,294 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,294 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,294 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,295 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,295 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,295 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,295 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,295 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,295 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,295 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,295 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,295 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,295 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,296 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,296 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,296 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,296 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,296 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,296 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,296 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:06,296 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,296 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,296 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,296 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,297 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,297 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,297 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,297 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,297 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,297 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,297 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,297 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,297 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,297 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,297 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,298 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,298 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,298 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,298 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,298 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,298 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,298 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,298 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,298 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,298 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,299 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,299 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,299 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,299 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,299 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,299 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,299 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,299 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:06,299 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,299 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,299 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,300 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,300 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,300 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,300 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,300 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,300 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,300 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,300 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,300 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,300 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,301 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,301 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,301 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,301 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,301 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:24:06,301 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,301 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,301 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,301 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:24:06,301 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,301 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,302 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,302 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,302 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,302 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,302 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,302 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,302 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,302 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,302 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,302 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:06,302 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,303 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,303 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,303 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,303 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,303 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,303 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,303 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,303 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,303 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,303 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,303 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,304 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:06,304 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:06,304 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,304 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,304 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,304 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:06,304 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,304 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,304 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,304 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,305 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,305 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,305 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,305 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,305 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,305 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,305 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,305 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,305 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,305 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,305 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,306 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:06,306 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,306 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,306 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,306 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,306 matplotlib.font_manager DEBUG findfont: Matching DejaVu Sans Display:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans Display ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf') with score of 0.050000.
2022-01-04 12:24:06,720 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F2' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf'
2022-01-04 12:24:06,725 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2022-01-04 12:24:06,725 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,725 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:06,725 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,725 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-01-04 12:24:06,725 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,725 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,725 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,726 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,726 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,726 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,726 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,726 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,726 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-01-04 12:24:06,726 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,726 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:24:06,726 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,726 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,727 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,727 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,727 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,727 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,727 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,727 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,727 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,727 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,727 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,728 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,728 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,728 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,728 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,728 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,728 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,728 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,728 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,728 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,728 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,729 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,729 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,729 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,729 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,729 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,729 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,729 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,730 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,730 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,731 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,731 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,731 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,731 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,733 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,733 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,734 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:06,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,734 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,734 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,735 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,735 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,736 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,736 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,737 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,737 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,737 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,737 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:24:06,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,739 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:06,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:06,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:24:06,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,741 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,742 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:06,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,744 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,744 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,745 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,745 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,745 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:24:06,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,745 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,745 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,746 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,746 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,746 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,747 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,747 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,747 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,747 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,747 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:06,748 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,748 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:24:06,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,749 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,749 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,749 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:24:06,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,749 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,750 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:06,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:24:06,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,751 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:24:06,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,752 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,752 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,752 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,753 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,753 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,753 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,754 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:06,754 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,754 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,755 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,755 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,755 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:06,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,756 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,756 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,756 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,757 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:06,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,757 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,757 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,757 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:06,757 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,758 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:06,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,758 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,759 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,759 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:24:06,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,760 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:24:06,760 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,760 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,760 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,761 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:06,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,761 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,762 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:06,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,762 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:06,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:06,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,763 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:06,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:06,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:06,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:06,764 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:06,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:06,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:06,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:06,765 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,765 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:06,765 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-01-04 12:24:08,94 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf.
2022-01-04 12:24:08,95 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:24:08,104 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf.
2022-01-04 12:24:08,104 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:24:09,838 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:09,838 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:24:09,856 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:09,856 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:24:09,857 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:09,857 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2022-01-04 12:24:10,89 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F1' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf'
2022-01-04 12:24:10,111 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:10,112 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:24:10,113 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:10,113 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:24:10,114 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:10,114 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2022-01-04 12:24:10,188 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F2' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf'
2022-01-04 12:24:10,205 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:24:10,205 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:10,235 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:24:10,235 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:10,236 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:24:10,236 matplotlib.ticker DEBUG ticklocs array([2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:24:10,693 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:24:10,693 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:10,695 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:24:10,695 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:10,696 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:24:10,696 matplotlib.ticker DEBUG ticklocs array([2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:24:10,790 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:24:10,790 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:10,824 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:24:10,824 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:10,825 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:24:10,825 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:24:11,224 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:24:11,224 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:11,226 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:24:11,226 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:11,227 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:24:11,227 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:24:11,326 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:24:11,326 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:24:11,346 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:24:11,347 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:24:11,347 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:24:11,348 matplotlib.ticker DEBUG ticklocs array([], dtype=float64)
2022-01-04 12:24:11,359 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:24:11,359 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:24:11,361 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:24:11,361 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:24:11,362 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:24:11,362 matplotlib.ticker DEBUG ticklocs array([], dtype=float64)
2022-01-04 12:24:11,423 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:24:11,423 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:11,443 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:24:11,443 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:11,444 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:24:11,444 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:11,706 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:24:11,706 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:11,708 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:24:11,708 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:11,709 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:24:11,709 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:11,793 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:24:11,793 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:11,816 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:24:11,816 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:11,817 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:24:11,818 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:12,109 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:24:12,109 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:12,111 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:24:12,111 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:12,112 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:24:12,112 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:12,199 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:24:12,199 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:12,223 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:24:12,223 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:12,224 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:24:12,224 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:12,517 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:24:12,517 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:12,519 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:24:12,519 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:12,520 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:24:12,520 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:12,781 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:24:12,781 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:12,810 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:24:12,810 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:12,811 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:24:12,811 matplotlib.ticker DEBUG ticklocs array([2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:13,179 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:24:13,179 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:13,181 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:24:13,182 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:13,183 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:24:13,183 matplotlib.ticker DEBUG ticklocs array([2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:13,284 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:24:13,284 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:24:13,312 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:24:13,312 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:24:13,313 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:24:13,343 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:24:13,343 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:24:13,345 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:24:13,345 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:24:13,346 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:24:13,416 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:24:13,416 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:24:13,443 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:24:13,443 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:24:13,444 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:24:13,444 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:13,774 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:24:13,775 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:24:13,776 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:24:13,777 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:24:13,777 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:24:13,778 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:13,874 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:24:13,874 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:24:13,888 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:24:13,888 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:24:13,889 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:24:13,889 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2022-01-04 12:24:14,62 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:24:14,63 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:24:14,64 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:24:14,64 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:24:14,65 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:24:14,65 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2022-01-04 12:24:14,133 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:24:14,133 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:14,157 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:24:14,157 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:14,158 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:24:14,158 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:14,448 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:24:14,448 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:14,450 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:24:14,450 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:14,451 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:24:14,451 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:14,553 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:24:14,553 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:24:14,565 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:24:14,565 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:24:14,565 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:24:14,566 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2022-01-04 12:24:14,781 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:24:14,781 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:24:14,782 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:24:14,783 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:24:14,783 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:24:14,783 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2022-01-04 12:24:14,856 matplotlib.ticker DEBUG vmin 0.0003710217466768338 vmax 0.0019405870584376617
2022-01-04 12:24:14,856 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:24:14,867 matplotlib.ticker DEBUG vmin 0.0003710217466768338 vmax 0.0019405870584376617
2022-01-04 12:24:14,867 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:24:14,870 matplotlib.ticker DEBUG vmin 0.0003710217466768338 vmax 0.0019405870584376617
2022-01-04 12:24:14,870 matplotlib.ticker DEBUG ticklocs array([2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01])
2022-01-04 12:24:15,45 matplotlib.ticker DEBUG vmin 0.0003710217466768338 vmax 0.0019405870584376617
2022-01-04 12:24:15,45 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:24:15,47 matplotlib.ticker DEBUG vmin 0.0003710217466768338 vmax 0.0019405870584376617
2022-01-04 12:24:15,47 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:24:15,48 matplotlib.ticker DEBUG vmin 0.0003710217466768338 vmax 0.0019405870584376617
2022-01-04 12:24:15,48 matplotlib.ticker DEBUG ticklocs array([2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01])
2022-01-04 12:24:15,111 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf.
2022-01-04 12:24:15,111 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:24:15,117 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf.
2022-01-04 12:24:15,117 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:24:15,157 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:15,157 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:24:15,158 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:15,158 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:24:15,159 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:15,159 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2022-01-04 12:24:15,232 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:15,232 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:24:15,234 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:15,234 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:24:15,235 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:15,235 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2022-01-04 12:24:15,299 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:24:15,299 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:15,301 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:24:15,301 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:15,302 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:24:15,302 matplotlib.ticker DEBUG ticklocs array([2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:24:15,464 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:24:15,464 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:15,466 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:24:15,466 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:15,467 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:24:15,467 matplotlib.ticker DEBUG ticklocs array([2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:24:15,533 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:24:15,534 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:15,536 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:24:15,536 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:15,537 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:24:15,537 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:24:15,614 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:24:15,615 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:15,617 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:24:15,617 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:15,618 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:24:15,618 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:24:15,689 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:24:15,689 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:24:15,691 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:24:15,691 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:24:15,692 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:24:15,692 matplotlib.ticker DEBUG ticklocs array([], dtype=float64)
2022-01-04 12:24:15,699 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:24:15,699 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:24:15,701 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:24:15,701 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:24:15,702 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:24:15,702 matplotlib.ticker DEBUG ticklocs array([], dtype=float64)
2022-01-04 12:24:15,735 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:24:15,735 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:15,737 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:24:15,737 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:15,738 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:24:15,738 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:15,785 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:24:15,785 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:15,787 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:24:15,787 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:15,788 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:24:15,788 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:15,844 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:24:15,844 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:15,846 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:24:15,846 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:15,847 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:24:15,847 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:15,900 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:24:15,900 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:15,901 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:24:15,902 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:15,902 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:24:15,903 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:15,963 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:24:15,963 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:15,965 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:24:15,965 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:15,966 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:24:15,966 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:16,19 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:24:16,19 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:16,21 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:24:16,21 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:16,22 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:24:16,22 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:16,82 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:24:16,82 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:16,84 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:24:16,84 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:16,85 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:24:16,85 matplotlib.ticker DEBUG ticklocs array([2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:16,168 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:24:16,168 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:16,170 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:24:16,170 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:16,171 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:24:16,171 matplotlib.ticker DEBUG ticklocs array([2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:16,242 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:24:16,242 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:24:16,244 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:24:16,244 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:24:16,245 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:24:16,270 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:24:16,270 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:24:16,272 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:24:16,272 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:24:16,273 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:24:16,311 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:24:16,312 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:24:16,313 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:24:16,314 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:24:16,315 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:24:16,315 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:16,375 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:24:16,375 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:24:16,377 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:24:16,377 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:24:16,378 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:24:16,378 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:16,443 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:24:16,443 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:24:16,444 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:24:16,445 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:24:16,445 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:24:16,445 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2022-01-04 12:24:16,467 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:24:16,467 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:24:16,468 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:24:16,468 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:24:16,469 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:24:16,469 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2022-01-04 12:24:16,514 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:24:16,514 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:16,515 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:24:16,516 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:16,516 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:24:16,517 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:16,569 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:24:16,569 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:16,571 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:24:16,571 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:16,572 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:24:16,572 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:16,639 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:24:16,639 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:24:16,641 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:24:16,641 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:24:16,642 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:24:16,642 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2022-01-04 12:24:16,731 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:24:16,731 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:24:16,733 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:24:16,733 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:24:16,734 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:24:16,734 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2022-01-04 12:24:16,780 matplotlib.ticker DEBUG vmin 0.0003710217466768338 vmax 0.0019405870584376617
2022-01-04 12:24:16,780 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:24:16,781 matplotlib.ticker DEBUG vmin 0.0003710217466768338 vmax 0.0019405870584376617
2022-01-04 12:24:16,782 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:24:16,782 matplotlib.ticker DEBUG vmin 0.0003710217466768338 vmax 0.0019405870584376617
2022-01-04 12:24:16,782 matplotlib.ticker DEBUG ticklocs array([2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01])
2022-01-04 12:24:16,834 matplotlib.ticker DEBUG vmin 0.0003710217466768338 vmax 0.0019405870584376617
2022-01-04 12:24:16,834 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:24:16,836 matplotlib.ticker DEBUG vmin 0.0003710217466768338 vmax 0.0019405870584376617
2022-01-04 12:24:16,836 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:24:16,837 matplotlib.ticker DEBUG vmin 0.0003710217466768338 vmax 0.0019405870584376617
2022-01-04 12:24:16,837 matplotlib.ticker DEBUG ticklocs array([2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01])
2022-01-04 12:24:18,136 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:18,136 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:24:18,153 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:18,153 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:24:18,154 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:18,154 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2022-01-04 12:24:18,387 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F1' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf'
2022-01-04 12:24:18,410 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:18,410 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:24:18,411 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:18,411 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:24:18,412 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:18,412 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2022-01-04 12:24:18,488 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F2' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf'
2022-01-04 12:24:18,579 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:24:18,579 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:18,611 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:24:18,611 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:18,612 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:24:18,612 matplotlib.ticker DEBUG ticklocs array([2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:24:19,68 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:24:19,68 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:19,70 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:24:19,70 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:19,71 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:24:19,72 matplotlib.ticker DEBUG ticklocs array([2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:24:19,355 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:24:19,355 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:19,402 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:24:19,402 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:19,403 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:24:19,403 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:24:19,794 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:24:19,794 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:19,798 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:24:19,798 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:19,799 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:24:19,799 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:24:19,928 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:24:19,928 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:24:19,949 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:24:19,949 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:24:19,950 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:24:19,950 matplotlib.ticker DEBUG ticklocs array([], dtype=float64)
2022-01-04 12:24:19,961 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:24:19,961 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:24:19,963 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:24:19,963 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:24:19,964 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:24:19,964 matplotlib.ticker DEBUG ticklocs array([], dtype=float64)
2022-01-04 12:24:20,58 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:24:20,58 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:20,78 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:24:20,79 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:20,79 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:24:20,80 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:20,339 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:24:20,339 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:20,341 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:24:20,341 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:20,342 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:24:20,342 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:20,456 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:24:20,457 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:20,480 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:24:20,480 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:20,481 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:24:20,481 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:20,777 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:24:20,777 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:20,779 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:24:20,779 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:20,780 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:24:20,780 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:20,897 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:24:20,897 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:20,921 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:24:20,921 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:20,922 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:24:20,922 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:21,216 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:24:21,216 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:21,217 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:24:21,218 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:21,218 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:24:21,219 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:21,337 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:24:21,337 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:21,367 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:24:21,367 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:21,368 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:24:21,368 matplotlib.ticker DEBUG ticklocs array([2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:21,746 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:24:21,746 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:21,748 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:24:21,748 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:21,749 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:24:21,749 matplotlib.ticker DEBUG ticklocs array([2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:21,882 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:24:21,882 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:24:21,909 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:24:21,909 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:24:21,910 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:24:21,940 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:24:21,940 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:24:21,942 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:24:21,942 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:24:21,943 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:24:22,45 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:24:22,46 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:24:22,73 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:24:22,73 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:24:22,74 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:24:22,74 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:22,401 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:24:22,402 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:24:22,403 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:24:22,404 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:24:22,404 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:24:22,405 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:22,532 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:24:22,532 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:24:22,546 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:24:22,546 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:24:22,547 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:24:22,547 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2022-01-04 12:24:22,722 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:24:22,722 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:24:22,724 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:24:22,724 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:24:22,724 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:24:22,725 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2022-01-04 12:24:22,821 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:24:22,821 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:22,845 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:24:22,845 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:22,846 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:24:22,846 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:23,137 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:24:23,137 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:23,139 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:24:23,139 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:23,140 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:24:23,140 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:23,272 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:24:23,272 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:24:23,283 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:24:23,283 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:24:23,284 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:24:23,284 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2022-01-04 12:24:23,496 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:24:23,496 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:24:23,498 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:24:23,498 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:24:23,498 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:24:23,499 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2022-01-04 12:24:23,604 matplotlib.ticker DEBUG vmin 0.0002742923480285484 vmax 0.001968702385907597
2022-01-04 12:24:23,604 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:24:23,615 matplotlib.ticker DEBUG vmin 0.0002742923480285484 vmax 0.001968702385907597
2022-01-04 12:24:23,615 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:24:23,616 matplotlib.ticker DEBUG vmin 0.0002742923480285484 vmax 0.001968702385907597
2022-01-04 12:24:23,616 matplotlib.ticker DEBUG ticklocs array([2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01])
2022-01-04 12:24:23,811 matplotlib.ticker DEBUG vmin 0.0002742923480285484 vmax 0.001968702385907597
2022-01-04 12:24:23,811 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:24:23,813 matplotlib.ticker DEBUG vmin 0.0002742923480285484 vmax 0.001968702385907597
2022-01-04 12:24:23,813 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:24:23,814 matplotlib.ticker DEBUG vmin 0.0002742923480285484 vmax 0.001968702385907597
2022-01-04 12:24:23,814 matplotlib.ticker DEBUG ticklocs array([2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01])
2022-01-04 12:24:23,901 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf.
2022-01-04 12:24:23,902 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:24:23,908 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf.
2022-01-04 12:24:23,908 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:24:23,970 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:23,971 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:24:23,972 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:23,972 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:24:23,973 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:23,973 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2022-01-04 12:24:24,47 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:24,47 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:24:24,49 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:24,49 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:24:24,50 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:24,50 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2022-01-04 12:24:24,188 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:24:24,188 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:24,190 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:24:24,190 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:24,191 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:24:24,192 matplotlib.ticker DEBUG ticklocs array([2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:24:24,354 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:24:24,354 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:24,356 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:24:24,356 matplotlib.ticker DEBUG ticklocs array([1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07, 1.e+08,
       1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:24,357 matplotlib.ticker DEBUG vmin 517.258807923302 vmax 3008145183.0603094
2022-01-04 12:24:24,358 matplotlib.ticker DEBUG ticklocs array([2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:24:24,450 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:24:24,450 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:24,452 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:24:24,452 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:24,453 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:24:24,453 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:24:24,530 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:24:24,531 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:24,533 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:24:24,533 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,
       1.e+08, 1.e+09, 1.e+10, 1.e+11])
2022-01-04 12:24:24,534 matplotlib.ticker DEBUG vmin 17.130866446447882 vmax 1241810818.8807402
2022-01-04 12:24:24,534 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07,
       2.e+08, 3.e+08, 4.e+08, 5.e+08, 6.e+08, 7.e+08, 8.e+08, 9.e+08,
       2.e+09, 3.e+09, 4.e+09, 5.e+09, 6.e+09, 7.e+09, 8.e+09, 9.e+09,
       2.e+10, 3.e+10, 4.e+10, 5.e+10, 6.e+10, 7.e+10, 8.e+10, 9.e+10,
       2.e+11, 3.e+11, 4.e+11, 5.e+11, 6.e+11, 7.e+11, 8.e+11, 9.e+11])
2022-01-04 12:24:24,633 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:24:24,633 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:24:24,635 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:24:24,635 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:24:24,636 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:24:24,636 matplotlib.ticker DEBUG ticklocs array([], dtype=float64)
2022-01-04 12:24:24,643 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:24:24,643 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:24:24,645 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:24:24,645 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e+00, 1.e+02, 1.e+04, 1.e+06, 1.e+08, 1.e+10, 1.e+12])
2022-01-04 12:24:24,646 matplotlib.ticker DEBUG vmin 8.089033763910479 vmax 1166137091.315567
2022-01-04 12:24:24,646 matplotlib.ticker DEBUG ticklocs array([], dtype=float64)
2022-01-04 12:24:24,707 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:24:24,707 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:24,709 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:24:24,709 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:24,710 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:24:24,710 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:24,757 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:24:24,757 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:24,759 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:24:24,759 matplotlib.ticker DEBUG ticklocs array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:24,760 matplotlib.ticker DEBUG vmin 19.837420052765772 vmax 968037.7208314987
2022-01-04 12:24:24,760 matplotlib.ticker DEBUG ticklocs array([2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:24,844 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:24:24,845 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:24,846 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:24:24,846 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:24,847 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:24:24,847 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:24,900 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:24:24,900 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:24,902 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:24:24,902 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:24,903 matplotlib.ticker DEBUG vmin 3.610115545381027 vmax 621971.6566373814
2022-01-04 12:24:24,903 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:24,989 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:24:24,989 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:24,991 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:24:24,991 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:24,992 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:24:24,992 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:25,46 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:24:25,46 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:25,48 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:24:25,48 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:25,49 matplotlib.ticker DEBUG vmin 2.48073129816618 vmax 602722.8840066531
2022-01-04 12:24:25,49 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:25,134 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:24:25,135 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:25,137 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:24:25,137 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:25,138 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:24:25,138 matplotlib.ticker DEBUG ticklocs array([2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:25,221 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:24:25,221 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:25,223 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:24:25,223 matplotlib.ticker DEBUG ticklocs array([1.e-03, 1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04,
       1.e+05, 1.e+06, 1.e+07])
2022-01-04 12:24:25,224 matplotlib.ticker DEBUG vmin 0.021415515450674848 vmax 218810.27989043036
2022-01-04 12:24:25,224 matplotlib.ticker DEBUG ticklocs array([2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:25,321 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:24:25,321 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:24:25,323 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:24:25,323 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:24:25,324 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:24:25,351 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:24:25,351 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:24:25,352 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:24:25,353 matplotlib.ticker DEBUG ticklocs array([1.e-07, 1.e-05, 1.e-03, 1.e-01, 1.e+01, 1.e+03, 1.e+05, 1.e+07,
       1.e+09, 1.e+11])
2022-01-04 12:24:25,354 matplotlib.ticker DEBUG vmin 2.8902216200337566e-05 vmax 20914425.836415272
2022-01-04 12:24:25,419 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:24:25,419 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:24:25,421 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:24:25,421 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:24:25,422 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:24:25,422 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:25,484 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:24:25,484 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:24:25,486 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:24:25,486 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2022-01-04 12:24:25,487 matplotlib.ticker DEBUG vmin 0.10112483143090806 vmax 331623.9442427406
2022-01-04 12:24:25,487 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:25,762 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:24:25,763 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:24:25,765 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:24:25,765 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:24:25,766 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:24:25,767 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2022-01-04 12:24:25,796 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:24:25,796 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:24:25,798 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:24:25,798 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:24:25,799 matplotlib.ticker DEBUG vmin 0.8912509381337456 vmax 11.220184543019636
2022-01-04 12:24:25,799 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2022-01-04 12:24:25,867 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:24:25,867 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:25,868 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:24:25,868 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:25,869 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:24:25,869 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:25,920 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:24:25,920 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:25,921 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:24:25,922 matplotlib.ticker DEBUG ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06,
       1.e+07])
2022-01-04 12:24:25,922 matplotlib.ticker DEBUG vmin 2.365720205138374 vmax 441108.2063644346
2022-01-04 12:24:25,923 matplotlib.ticker DEBUG ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2022-01-04 12:24:26,15 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:24:26,15 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:24:26,16 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:24:26,17 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:24:26,17 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:24:26,17 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2022-01-04 12:24:26,106 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:24:26,106 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:24:26,108 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:24:26,108 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2022-01-04 12:24:26,109 matplotlib.ticker DEBUG vmin 0.16858458920638114 vmax 1.0884743431403412
2022-01-04 12:24:26,109 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2022-01-04 12:24:26,179 matplotlib.ticker DEBUG vmin 0.0002742923480285484 vmax 0.001968702385907597
2022-01-04 12:24:26,179 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:24:26,181 matplotlib.ticker DEBUG vmin 0.0002742923480285484 vmax 0.001968702385907597
2022-01-04 12:24:26,181 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:24:26,182 matplotlib.ticker DEBUG vmin 0.0002742923480285484 vmax 0.001968702385907597
2022-01-04 12:24:26,182 matplotlib.ticker DEBUG ticklocs array([2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01])
2022-01-04 12:24:26,251 matplotlib.ticker DEBUG vmin 0.0002742923480285484 vmax 0.001968702385907597
2022-01-04 12:24:26,251 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:24:26,252 matplotlib.ticker DEBUG vmin 0.0002742923480285484 vmax 0.001968702385907597
2022-01-04 12:24:26,253 matplotlib.ticker DEBUG ticklocs array([1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01])
2022-01-04 12:24:26,253 matplotlib.ticker DEBUG vmin 0.0002742923480285484 vmax 0.001968702385907597
2022-01-04 12:24:26,253 matplotlib.ticker DEBUG ticklocs array([2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01])
2022-01-04 12:24:26,405 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:26,406 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:24:26,423 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:26,423 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:24:26,424 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:26,424 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2022-01-04 12:24:26,659 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F1' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf'
2022-01-04 12:24:26,681 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:26,681 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:24:26,683 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:26,683 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:24:26,684 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:26,684 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2022-01-04 12:24:26,773 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F2' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf'
2022-01-04 12:24:26,798 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf.
2022-01-04 12:24:26,798 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:24:26,804 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf.
2022-01-04 12:24:26,804 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:24:26,824 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:26,825 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:24:26,826 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:26,826 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:24:26,827 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:26,827 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2022-01-04 12:24:26,901 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:26,901 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:24:26,903 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:26,903 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2022-01-04 12:24:26,903 matplotlib.ticker DEBUG vmin 0.740129831111678 vmax 555.3079780376862
2022-01-04 12:24:26,904 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2022-01-04 12:24:27,87 matplotlib.ticker DEBUG vmin 0.8348143654846168 vmax 44.321230598998106
2022-01-04 12:24:27,88 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:24:27,102 matplotlib.ticker DEBUG vmin 0.8348143654846168 vmax 44.321230598998106
2022-01-04 12:24:27,102 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:24:27,103 matplotlib.ticker DEBUG vmin 0.8348143654846168 vmax 44.321230598998106
2022-01-04 12:24:27,103 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2022-01-04 12:24:27,294 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F1' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf'
2022-01-04 12:24:27,306 matplotlib.ticker DEBUG vmin 0.8348143654846168 vmax 44.321230598998106
2022-01-04 12:24:27,306 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:24:27,307 matplotlib.ticker DEBUG vmin 0.8348143654846168 vmax 44.321230598998106
2022-01-04 12:24:27,307 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:24:27,308 matplotlib.ticker DEBUG vmin 0.8348143654846168 vmax 44.321230598998106
2022-01-04 12:24:27,308 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2022-01-04 12:24:27,379 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F2' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf'
2022-01-04 12:24:27,396 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf.
2022-01-04 12:24:27,396 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:24:27,402 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf.
2022-01-04 12:24:27,402 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:24:27,420 matplotlib.ticker DEBUG vmin 0.8348143654846168 vmax 44.321230598998106
2022-01-04 12:24:27,421 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:24:27,422 matplotlib.ticker DEBUG vmin 0.8348143654846168 vmax 44.321230598998106
2022-01-04 12:24:27,422 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:24:27,423 matplotlib.ticker DEBUG vmin 0.8348143654846168 vmax 44.321230598998106
2022-01-04 12:24:27,423 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2022-01-04 12:24:27,473 matplotlib.ticker DEBUG vmin 0.8348143654846168 vmax 44.321230598998106
2022-01-04 12:24:27,474 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:24:27,475 matplotlib.ticker DEBUG vmin 0.8348143654846168 vmax 44.321230598998106
2022-01-04 12:24:27,475 matplotlib.ticker DEBUG ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2022-01-04 12:24:27,476 matplotlib.ticker DEBUG vmin 0.8348143654846168 vmax 44.321230598998106
2022-01-04 12:24:27,476 matplotlib.ticker DEBUG ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2022-01-04 12:24:27,773 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=6.0.
2022-01-04 12:24:27,774 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,774 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:27,774 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,774 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-01-04 12:24:27,774 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,774 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,774 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,774 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,774 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,775 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,775 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,775 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,775 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-01-04 12:24:27,775 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:27,775 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:24:27,775 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,775 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,775 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,775 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,776 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,776 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:27,776 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,776 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,776 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,776 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,776 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,776 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,776 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,777 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,777 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,777 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:27,777 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:27,777 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,777 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,777 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,777 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,777 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,777 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,778 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,778 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,778 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,778 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,778 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:27,778 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,778 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,778 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,778 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,778 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,779 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,779 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,779 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,779 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,779 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,779 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,779 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:27,779 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,779 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,780 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,780 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,780 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,780 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:27,780 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,780 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,780 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:27,780 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,780 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:27,780 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,781 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,781 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,781 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,781 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,781 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,781 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,781 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,781 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,781 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:27,781 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,782 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,782 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,782 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,782 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,782 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:27,782 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:27,782 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,782 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:27,782 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,782 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,783 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,783 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:27,783 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:27,783 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,783 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,783 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:27,783 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,783 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,783 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,783 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,784 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,784 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,784 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,784 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,784 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,784 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,784 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,784 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,784 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,785 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,785 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,785 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,785 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,785 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,785 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,785 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:27,785 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,785 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,785 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,786 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,786 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,786 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:27,786 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,786 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,786 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,786 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,786 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:27,786 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,786 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,787 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,788 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:24:27,788 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,788 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,788 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,788 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,788 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,788 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,788 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:27,788 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,788 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:27,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:27,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:27,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:27,789 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:27,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:24:27,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,790 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,790 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,791 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,791 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,791 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,791 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:27,791 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,791 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,791 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,791 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,791 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,791 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:27,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,792 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,792 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:27,793 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,793 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:27,793 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,793 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:27,793 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,793 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,793 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,793 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,793 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,793 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,794 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,794 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,794 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,794 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:24:27,794 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,794 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,794 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,794 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,794 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,794 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,795 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,795 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,795 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,795 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:27,795 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,795 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,795 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:27,795 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,795 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,795 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,796 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:27,796 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,796 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,796 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,796 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,796 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,796 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:27,796 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,796 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,796 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:27,797 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,797 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:27,797 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,797 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,797 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,797 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,797 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:24:27,797 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,797 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,797 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:27,798 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:27,798 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,798 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,798 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,798 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:24:27,798 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,798 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,798 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,798 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:27,798 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:27,799 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,799 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,799 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:27,799 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,799 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,799 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:27,799 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:24:27,799 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,799 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:27,799 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,800 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,800 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:27,800 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,800 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,800 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,800 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,800 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:24:27,800 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,800 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,800 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,801 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,801 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:27,801 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,801 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:27,801 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,801 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,801 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,801 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,801 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,801 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,802 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:27,802 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,802 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,802 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,802 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,802 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,802 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,802 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,802 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,802 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:27,803 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:27,803 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,803 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:27,803 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:27,803 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,803 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,803 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,803 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,803 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,803 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,804 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,804 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:27,804 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,804 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,804 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:27,804 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,804 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,804 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,804 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,804 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,805 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,805 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,805 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,805 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,805 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,805 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:27,805 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,805 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,805 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,805 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,806 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,806 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,806 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,806 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:27,806 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,806 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,806 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:27,806 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,806 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,806 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,807 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:27,807 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,807 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,807 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,807 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,807 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,807 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,807 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,807 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,807 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,808 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,808 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:24:27,808 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,808 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,808 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,808 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:24:27,808 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,808 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,808 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,809 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,809 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,809 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,809 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,809 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,809 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,809 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,809 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:27,809 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:27,809 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,810 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,810 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:27,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:27,810 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,811 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:27,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:27,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,811 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:27,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,811 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:27,812 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:27,812 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:27,812 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,812 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,812 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,812 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:27,812 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,812 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:27,812 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:27,812 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:27,813 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,813 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,813 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:27,813 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,813 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:27,813 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,813 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:27,813 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=6.0 to DejaVu Sans ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-01-04 12:24:28,396 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=3.0.
2022-01-04 12:24:28,397 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,397 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:28,397 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,397 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-01-04 12:24:28,397 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,397 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,397 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,397 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,397 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,398 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,398 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,398 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,398 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-01-04 12:24:28,398 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,398 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:24:28,398 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,398 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,398 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,398 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,399 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,399 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,399 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,399 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,399 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,399 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,399 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,399 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,399 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,399 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,400 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,400 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,400 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,400 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,400 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,400 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,400 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,400 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,400 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,400 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,401 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,401 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,401 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,401 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,401 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,401 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,401 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,401 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,401 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,402 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,402 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,402 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,402 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,402 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,402 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,402 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,402 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,402 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,402 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,402 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,403 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,403 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,403 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,403 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,403 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,403 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,403 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,403 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,403 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,403 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,404 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,404 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,404 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,404 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,404 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,404 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,404 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,404 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,404 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,404 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,405 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,405 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,405 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:28,405 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,405 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,405 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:28,405 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,405 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,405 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,405 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,406 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:28,406 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,406 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,406 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,406 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,406 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,406 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,406 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,406 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,406 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,406 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,407 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,407 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,407 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,407 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,407 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,407 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,407 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,407 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,407 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,407 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,408 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,408 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,408 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:28,408 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,408 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,408 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,408 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,408 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,408 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,408 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,409 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,409 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,409 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,409 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:28,409 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,409 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,409 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,409 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,409 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,409 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,409 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:24:28,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,410 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:28,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:28,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,412 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,412 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:28,412 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:28,412 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,412 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:24:28,412 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,412 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,412 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,412 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,412 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:28,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,413 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:28,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,415 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,415 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,415 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,415 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,415 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,415 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:28,415 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,415 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,415 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,415 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,416 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,416 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,416 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,416 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,416 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,416 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:24:28,416 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,416 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,416 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,416 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,417 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,417 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,417 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,418 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,418 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,418 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:28,418 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,418 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,418 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,418 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,418 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,418 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,418 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:28,419 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,419 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:24:28,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,420 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,420 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:28,420 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:28,420 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,420 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,420 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,420 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:24:28,420 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,420 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,420 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:28,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:24:28,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,422 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:24:28,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,423 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,423 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:28,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,423 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,423 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,424 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,424 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,424 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,424 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,424 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,424 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,424 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,424 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,424 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,424 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,425 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,425 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,425 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:28,425 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,425 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,425 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,425 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,425 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,425 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,425 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,426 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,426 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,426 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,426 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,426 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,426 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,426 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:28,426 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,426 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,426 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,427 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,427 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,427 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:28,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,428 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,428 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,428 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,428 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,428 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:28,428 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,428 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,428 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:28,428 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,428 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,428 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,429 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,429 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,429 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,429 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,429 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,429 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,429 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,429 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,429 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,429 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,430 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,430 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:24:28,430 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,430 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,430 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,430 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:24:28,430 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,430 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,430 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,430 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,430 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,431 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,431 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,431 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,431 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,431 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,431 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,431 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:28,431 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,431 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,431 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,432 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,432 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,432 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,432 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,432 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,432 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,432 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:28,432 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,432 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,432 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:28,432 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:28,433 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,433 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,433 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,433 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:28,433 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,433 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,433 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,433 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,433 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,433 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,434 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,434 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,434 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,434 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,434 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,434 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,434 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,434 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,434 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,434 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:28,435 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,435 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,435 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,435 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,435 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=3.0 to DejaVu Sans ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-01-04 12:24:28,692 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=4.0.
2022-01-04 12:24:28,693 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,693 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:28,693 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,693 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-01-04 12:24:28,693 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,693 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,693 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,693 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,694 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,694 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,694 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,694 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,694 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-01-04 12:24:28,694 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,694 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:24:28,694 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,694 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,694 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,695 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,695 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,695 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,695 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,695 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,695 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,695 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,695 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,695 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,696 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,696 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,696 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,696 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,696 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,696 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,696 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,696 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,696 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,696 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,697 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,697 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,697 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,697 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,697 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,697 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,698 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,698 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,699 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,699 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,699 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,699 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,699 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,699 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,699 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,699 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,699 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,700 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,700 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,700 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,700 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,700 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,700 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,700 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,700 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,700 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,700 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,701 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,701 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,701 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,701 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,701 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,701 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:28,701 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,701 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,702 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:28,702 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,702 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,702 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,702 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,702 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:28,702 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,702 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,702 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,702 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,703 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,703 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,703 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,703 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,703 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,703 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,703 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,703 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,703 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,703 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,704 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,704 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:28,704 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,705 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,705 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,705 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,705 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,705 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,705 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,705 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,705 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,705 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:28,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,706 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,707 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,707 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,707 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,707 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:24:28,707 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,707 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,707 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,707 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,707 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,707 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,708 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:28,708 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,708 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,708 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,708 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,708 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,708 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:28,708 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,708 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,708 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:28,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:28,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:24:28,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,709 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,709 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:28,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,710 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,710 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:28,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,711 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,712 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:28,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,712 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,712 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,713 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,713 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,713 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:24:28,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,713 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,713 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,714 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,714 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,714 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,714 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,714 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,715 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:28,715 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,715 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,715 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,715 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,715 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:28,716 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,716 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,716 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:24:28,717 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,717 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,717 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:28,717 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:28,717 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,717 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,717 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,717 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:24:28,717 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,718 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,718 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:28,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,718 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:24:28,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,719 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,719 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:24:28,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,720 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,720 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,720 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:28,721 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,721 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,721 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,722 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,722 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,723 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,723 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:28,723 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,723 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,724 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,724 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,724 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,724 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,724 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,725 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,725 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:28,725 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,725 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,725 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,725 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,725 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,725 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,725 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,725 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,726 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,726 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,726 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:28,726 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,726 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,726 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,726 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,726 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,726 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,726 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,727 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:28,727 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,727 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,727 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:28,727 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,727 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,727 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,727 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,727 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,727 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,728 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,728 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,728 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,728 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,728 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,728 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,728 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,728 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,728 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:24:28,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,729 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:24:28,729 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,729 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,729 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,730 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:28,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,731 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,731 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:28,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,731 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:28,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:28,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,732 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:28,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:28,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:28,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:28,733 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:28,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:28,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:28,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:28,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,734 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:28,734 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=4.0 to DejaVu Sans ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-01-04 12:24:29,7 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F1' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf'
2022-01-04 12:24:29,403 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf.
2022-01-04 12:24:29,403 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:24:31,324 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F1' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf'
2022-01-04 12:24:31,772 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf.
2022-01-04 12:24:31,772 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:24:32,623 matplotlib.colorbar DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f8da52e4ca0>
2022-01-04 12:24:32,623 matplotlib.colorbar DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f8da52e4ca0> on colorbar
2022-01-04 12:24:32,623 matplotlib.colorbar DEBUG Setting pcolormesh
2022-01-04 12:24:32,668 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F1' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf'
2022-01-04 12:24:32,855 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf.
2022-01-04 12:24:32,855 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:24:33,308 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,310 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,311 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,312 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,313 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,314 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,315 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,316 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,317 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,318 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,319 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,320 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,376 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,378 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,379 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,380 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,381 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,382 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,383 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,384 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,385 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,386 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,387 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,388 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,446 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,448 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,449 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,450 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,451 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,452 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,453 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,454 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,455 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,456 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,457 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,458 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,517 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,519 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,520 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,521 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,522 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,523 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,524 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,525 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,526 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,527 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,528 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,529 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,586 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,588 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,589 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,590 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,591 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,592 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,593 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,594 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,595 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,596 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,597 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,598 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,656 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,658 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,659 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,660 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,661 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,662 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,663 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,664 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,665 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,666 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,667 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,668 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,726 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,728 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,729 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,730 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,731 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,732 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,733 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,734 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,735 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,736 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,737 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,738 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,797 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,799 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,800 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,801 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,802 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,803 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,804 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,805 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,806 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,807 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,808 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,809 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,867 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,869 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,870 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,871 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,872 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,873 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,874 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,875 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,876 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,877 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,878 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,879 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,937 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,939 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,940 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,941 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,942 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,943 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,944 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,945 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,946 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,947 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,948 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:33,949 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,8 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,10 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,11 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,12 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,13 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,14 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,15 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,16 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,17 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,18 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,19 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,20 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,78 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,80 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,81 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,82 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,83 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,84 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,85 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,86 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,87 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,88 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,89 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,90 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,147 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,149 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,150 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,151 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,152 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,153 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,154 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,155 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,156 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,157 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,158 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,159 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,217 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,219 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,220 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,221 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,222 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,223 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,224 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,225 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,226 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,227 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,228 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,229 matplotlib.category INFO Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2022-01-04 12:24:34,250 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F1' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf'
2022-01-04 12:24:35,487 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf.
2022-01-04 12:24:35,488 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:24:36,773 matplotlib.colorbar DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f8db1b1b9a0>
2022-01-04 12:24:36,774 matplotlib.colorbar DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f8db1b1b9a0> on colorbar
2022-01-04 12:24:36,774 matplotlib.colorbar DEBUG Setting pcolormesh
2022-01-04 12:24:37,141 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2022-01-04 12:24:37,142 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,142 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:37,142 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,142 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-01-04 12:24:37,142 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,142 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,142 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,142 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,142 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,143 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,143 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,143 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,143 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-01-04 12:24:37,143 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:37,143 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:24:37,143 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,143 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,143 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,143 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,144 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,144 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:37,144 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,144 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,144 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,144 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,144 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,144 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,144 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,144 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,145 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,145 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:37,145 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:37,145 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,145 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,145 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,145 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,145 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,145 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,145 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,146 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,146 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,146 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,146 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:37,146 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,146 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,146 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,146 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,146 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,146 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,147 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,147 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,147 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,147 matplotlib.font_manager DEBUG findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,147 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,147 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:37,147 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,147 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,147 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,147 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,148 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,148 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:37,148 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,148 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,148 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:37,148 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,148 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:37,148 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,148 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,149 matplotlib.font_manager DEBUG findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,149 matplotlib.font_manager DEBUG findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,149 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,149 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,149 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,149 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,149 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,149 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:37,149 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,149 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,150 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,150 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,150 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,150 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:37,150 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:37,150 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,150 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:37,150 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,150 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,150 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,151 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:37,151 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:37,151 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,151 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,151 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:37,151 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,151 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,151 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,151 matplotlib.font_manager DEBUG findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,151 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,152 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,152 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,152 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,152 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,152 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,152 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,152 matplotlib.font_manager DEBUG findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,152 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,152 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,152 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,153 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,153 matplotlib.font_manager DEBUG findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,153 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,153 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,153 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:37,153 matplotlib.font_manager DEBUG findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,153 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,153 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,153 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,153 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,154 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:37,154 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,154 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,154 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,154 matplotlib.font_manager DEBUG findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,154 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:37,154 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,154 matplotlib.font_manager DEBUG findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,154 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,155 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,155 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,155 matplotlib.font_manager DEBUG findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,155 matplotlib.font_manager DEBUG findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,155 matplotlib.font_manager DEBUG findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,155 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,155 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,155 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,155 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,155 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2022-01-04 12:24:37,156 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,156 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,156 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,156 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,156 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,156 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,156 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:37,156 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,156 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,156 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,157 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,157 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,157 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:37,157 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:37,157 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,157 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:37,157 matplotlib.font_manager DEBUG findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:37,157 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:37,157 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-01-04 12:24:37,157 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,158 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,158 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,158 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,158 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,158 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,158 matplotlib.font_manager DEBUG findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,158 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,158 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,158 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,158 matplotlib.font_manager DEBUG findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,159 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,159 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:37,159 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,159 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,159 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,159 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,159 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,159 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:37,159 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,159 matplotlib.font_manager DEBUG findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,160 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,160 matplotlib.font_manager DEBUG findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,160 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,160 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,160 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,160 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,160 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:37,160 matplotlib.font_manager DEBUG findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,160 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:37,160 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,161 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:37,161 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,161 matplotlib.font_manager DEBUG findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,161 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,161 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,161 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,161 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,161 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,161 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,162 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,162 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-01-04 12:24:37,162 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,162 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,162 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,162 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,162 matplotlib.font_manager DEBUG findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,162 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,162 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,162 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,163 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,163 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:37,163 matplotlib.font_manager DEBUG findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,163 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,163 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:37,163 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,163 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,163 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,163 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:37,163 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,164 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,164 matplotlib.font_manager DEBUG findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,164 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,164 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,164 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:37,164 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,164 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,164 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:37,164 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,164 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:37,165 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,165 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,165 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,165 matplotlib.font_manager DEBUG findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,165 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2022-01-04 12:24:37,165 matplotlib.font_manager DEBUG findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,165 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,165 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:37,165 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:37,166 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,166 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,166 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,166 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-01-04 12:24:37,166 matplotlib.font_manager DEBUG findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,166 matplotlib.font_manager DEBUG findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,166 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,166 matplotlib.font_manager DEBUG findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:37,166 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:37,166 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,167 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,167 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:37,167 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,167 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,167 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:37,167 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2022-01-04 12:24:37,167 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,167 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:37,167 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,167 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,168 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:37,168 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,168 matplotlib.font_manager DEBUG findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,168 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,168 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,168 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2022-01-04 12:24:37,168 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,168 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,168 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,168 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,169 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:37,169 matplotlib.font_manager DEBUG findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,169 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:37,169 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,169 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,169 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,169 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,169 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,169 matplotlib.font_manager DEBUG findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,170 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:37,170 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,170 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,170 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,170 matplotlib.font_manager DEBUG findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,170 matplotlib.font_manager DEBUG findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,170 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,170 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,170 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,170 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:37,171 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2022-01-04 12:24:37,171 matplotlib.font_manager DEBUG findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,171 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:37,171 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:37,171 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,171 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,171 matplotlib.font_manager DEBUG findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,171 matplotlib.font_manager DEBUG findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,171 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,171 matplotlib.font_manager DEBUG findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,172 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,172 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:37,172 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,172 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,172 matplotlib.font_manager DEBUG findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2022-01-04 12:24:37,172 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,172 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,172 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,172 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,172 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,173 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,173 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,173 matplotlib.font_manager DEBUG findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,173 matplotlib.font_manager DEBUG findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,173 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,173 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-01-04 12:24:37,173 matplotlib.font_manager DEBUG findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,173 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,173 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,173 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,174 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,174 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,174 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,174 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2022-01-04 12:24:37,174 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,174 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,174 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2022-01-04 12:24:37,174 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,174 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,174 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,175 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:37,175 matplotlib.font_manager DEBUG findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,175 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,175 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,175 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,175 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,175 matplotlib.font_manager DEBUG findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,175 matplotlib.font_manager DEBUG findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,175 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,176 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,176 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,176 matplotlib.font_manager DEBUG findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2022-01-04 12:24:37,176 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,176 matplotlib.font_manager DEBUG findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,176 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,176 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2022-01-04 12:24:37,176 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,176 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,176 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,177 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,177 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,177 matplotlib.font_manager DEBUG findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,177 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,177 matplotlib.font_manager DEBUG findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,177 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,177 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,177 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:37,177 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2022-01-04 12:24:37,177 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,178 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,178 matplotlib.font_manager DEBUG findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,178 matplotlib.font_manager DEBUG findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,178 matplotlib.font_manager DEBUG findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,178 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,178 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,178 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:37,178 matplotlib.font_manager DEBUG findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,178 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2022-01-04 12:24:37,178 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,179 matplotlib.font_manager DEBUG findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,179 matplotlib.font_manager DEBUG findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2022-01-04 12:24:37,179 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2022-01-04 12:24:37,179 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,179 matplotlib.font_manager DEBUG findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,179 matplotlib.font_manager DEBUG findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,179 matplotlib.font_manager DEBUG findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:37,179 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,179 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,179 matplotlib.font_manager DEBUG findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2022-01-04 12:24:37,180 matplotlib.font_manager DEBUG findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:37,180 matplotlib.font_manager DEBUG findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-01-04 12:24:37,180 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,180 matplotlib.font_manager DEBUG findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,180 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,180 matplotlib.font_manager DEBUG findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-01-04 12:24:37,180 matplotlib.font_manager DEBUG findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,180 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2022-01-04 12:24:37,180 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:37,180 matplotlib.font_manager DEBUG findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2022-01-04 12:24:37,181 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,181 matplotlib.font_manager DEBUG findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,181 matplotlib.font_manager DEBUG findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2022-01-04 12:24:37,181 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,181 matplotlib.font_manager DEBUG findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-01-04 12:24:37,181 matplotlib.font_manager DEBUG findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,181 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-01-04 12:24:37,181 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to DejaVu Sans ('/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-01-04 12:24:37,860 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F1' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf'
2022-01-04 12:24:38,244 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf.
2022-01-04 12:24:38,244 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
2022-01-04 12:24:40,163 matplotlib.colorbar DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f8da53ca220>
2022-01-04 12:24:40,163 matplotlib.colorbar DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f8da53ca220> on colorbar
2022-01-04 12:24:40,163 matplotlib.colorbar DEBUG Setting pcolormesh
2022-01-04 12:24:41,104 matplotlib.backends.backend_pdf DEBUG Assigning font /b'F1' = '/home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf'
2022-01-04 12:24:41,486 matplotlib.backends.backend_pdf DEBUG Embedding font /home/pis1901/PycharmProjects/envLN/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf.
2022-01-04 12:24:41,486 matplotlib.backends.backend_pdf DEBUG Writing TrueType font.
